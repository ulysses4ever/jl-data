module Risk

using Distributions

export
  Asset,
  HazardCurve,
  GroundMotionField,
  DiscreteFragilityFunction,
  ContinuousFragilityFunction,
  ContinuousVulnerabilityFunction,
  DiscreteVulnerabilityFunction,
  LossCurve,
  LossMoments,
  DamageMoments,
  ScenarioRiskInput,
  ScenarioDamageInput,
  EventBasedRiskInput,
  ClassicalRiskInput,
  ScenarioRiskOutput,
  ScenarioDamageOutput,
  EventBasedRiskOutput,
  ClassicalRiskOutput,

  risk_workflow,

  rand_uniform,
  rand_normal,
  rand_exponential,
  rand_gamma,
  rand_chi_square,
  rand_inverse_gamma,
  rand_weibull,
  rand_cauchy,
  rand_student_t,
  rand_laplace,
  rand_lognormal,
  rand_beta

### source files

# type system
include("types.jl")

# core algorithms
include("calculators.jl")

# logic-tree traversal
include("trees.jl")

# implementation helpers
include("utils.jl")
include("scientific.jl")

# random number generators
include("random.jl")

# others
include("workflows.jl")
include("postprocessors.jl")
include("writers.jl")

end # module
