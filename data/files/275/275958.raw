# Automatically generated using Clang.jl wrap_c, version 0.0.0

using Compat

const VULKAN_H_ = 1
const VK_VERSION_1_0 = 1

# Skipping MacroDefinition: VK_MAKE_VERSION ( major , minor , patch ) ( ( ( major ) << 22 ) | ( ( minor ) << 12 ) | ( patch ) )
# Skipping MacroDefinition: VK_API_VERSION_1_0 VK_MAKE_VERSION ( 1 , 0 , 0 )
# Skipping MacroDefinition: VK_VERSION_MAJOR ( version ) ( ( uint32_t ) ( version ) >> 22 )
# Skipping MacroDefinition: VK_VERSION_MINOR ( version ) ( ( ( uint32_t ) ( version ) >> 12 ) & 0x3ff )
# Skipping MacroDefinition: VK_VERSION_PATCH ( version ) ( ( uint32_t ) ( version ) & 0xfff )

const VK_HEADER_VERSION = 7
const VK_NULL_HANDLE = 0

# Skipping MacroDefinition: VK_DEFINE_HANDLE ( object ) typedef struct object ## _T * object ;
# Skipping MacroDefinition: VK_DEFINE_NON_DISPATCHABLE_HANDLE ( object ) typedef struct object ## _T * object ;

const VK_LOD_CLAMP_NONE = Float32(1000.0)
const VK_REMAINING_MIP_LEVELS = ~(UInt32(0))
const VK_REMAINING_ARRAY_LAYERS = ~(UInt32(0))
const VK_WHOLE_SIZE = ~(UInt64(0))
const VK_ATTACHMENT_UNUSED = ~(UInt32(0))
const VK_TRUE = 1
const VK_FALSE = 0
const VK_QUEUE_FAMILY_IGNORED = ~(UInt32(0))
const VK_SUBPASS_EXTERNAL = ~(UInt32(0))
const VK_MAX_PHYSICAL_DEVICE_NAME_SIZE = 256
const VK_UUID_SIZE = 16
const VK_MAX_MEMORY_TYPES = 32
const VK_MAX_MEMORY_HEAPS = 16
const VK_MAX_EXTENSION_NAME_SIZE = 256
const VK_MAX_DESCRIPTION_SIZE = 256
const VK_KHR_surface = 1
const VK_KHR_SURFACE_SPEC_VERSION = 25
const VK_KHR_SURFACE_EXTENSION_NAME = "VK_KHR_surface"
const VK_KHR_swapchain = 1
const VK_KHR_SWAPCHAIN_SPEC_VERSION = 67
const VK_KHR_SWAPCHAIN_EXTENSION_NAME = "VK_KHR_swapchain"
const VK_KHR_display = 1
const VK_KHR_DISPLAY_SPEC_VERSION = 21
const VK_KHR_DISPLAY_EXTENSION_NAME = "VK_KHR_display"
const VK_KHR_display_swapchain = 1
const VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION = 9
const VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME = "VK_KHR_display_swapchain"
const VK_KHR_xcb_surface = 1
const VK_KHR_XCB_SURFACE_SPEC_VERSION = 6
const VK_KHR_XCB_SURFACE_EXTENSION_NAME = "VK_KHR_xcb_surface"
const VK_KHR_wayland_surface = 1
const VK_KHR_WAYLAND_SURFACE_SPEC_VERSION = 5
const VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME = "VK_KHR_wayland_surface"
const VK_KHR_mir_surface = 1
const VK_KHR_MIR_SURFACE_SPEC_VERSION = 4
const VK_KHR_MIR_SURFACE_EXTENSION_NAME = "VK_KHR_mir_surface"
const VK_KHR_win32_surface = 1
const VK_KHR_WIN32_SURFACE_SPEC_VERSION = 5
const VK_KHR_WIN32_SURFACE_EXTENSION_NAME = "VK_KHR_win32_surface"
const VK_KHR_sampler_mirror_clamp_to_edge = 1
const VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION = 1
const VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME = "VK_KHR_sampler_mirror_clamp_to_edge"
const VK_EXT_debug_report = 1
const VK_EXT_DEBUG_REPORT_SPEC_VERSION = 2
const VK_EXT_DEBUG_REPORT_EXTENSION_NAME = "VK_EXT_debug_report"

# begin enum VkStructureType
typealias VkStructureType UInt32
const VK_STRUCTURE_TYPE_APPLICATION_INFO = (UInt32)(0)
const VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO = (UInt32)(1)
const VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO = (UInt32)(2)
const VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO = (UInt32)(3)
const VK_STRUCTURE_TYPE_SUBMIT_INFO = (UInt32)(4)
const VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = (UInt32)(5)
const VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = (UInt32)(6)
const VK_STRUCTURE_TYPE_BIND_SPARSE_INFO = (UInt32)(7)
const VK_STRUCTURE_TYPE_FENCE_CREATE_INFO = (UInt32)(8)
const VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = (UInt32)(9)
const VK_STRUCTURE_TYPE_EVENT_CREATE_INFO = (UInt32)(10)
const VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = (UInt32)(11)
const VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO = (UInt32)(12)
const VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = (UInt32)(13)
const VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO = (UInt32)(14)
const VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = (UInt32)(15)
const VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = (UInt32)(16)
const VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = (UInt32)(17)
const VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = (UInt32)(18)
const VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = (UInt32)(19)
const VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = (UInt32)(20)
const VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = (UInt32)(21)
const VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = (UInt32)(22)
const VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = (UInt32)(23)
const VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = (UInt32)(24)
const VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = (UInt32)(25)
const VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = (UInt32)(26)
const VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = (UInt32)(27)
const VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = (UInt32)(28)
const VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = (UInt32)(29)
const VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = (UInt32)(30)
const VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO = (UInt32)(31)
const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = (UInt32)(32)
const VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = (UInt32)(33)
const VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = (UInt32)(34)
const VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = (UInt32)(35)
const VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = (UInt32)(36)
const VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = (UInt32)(37)
const VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = (UInt32)(38)
const VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = (UInt32)(39)
const VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = (UInt32)(40)
const VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = (UInt32)(41)
const VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = (UInt32)(42)
const VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = (UInt32)(43)
const VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = (UInt32)(44)
const VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = (UInt32)(45)
const VK_STRUCTURE_TYPE_MEMORY_BARRIER = (UInt32)(46)
const VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = (UInt32)(47)
const VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = (UInt32)(48)
const VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = (UInt32)(1000001000)
const VK_STRUCTURE_TYPE_PRESENT_INFO_KHR = (UInt32)(1000001001)
const VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = (UInt32)(1000002000)
const VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = (UInt32)(1000002001)
const VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = (UInt32)(1000003000)
const VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = (UInt32)(1000004000)
const VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = (UInt32)(1000005000)
const VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = (UInt32)(1000006000)
const VK_STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR = (UInt32)(1000007000)
const VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = (UInt32)(1000008000)
const VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = (UInt32)(1000009000)
const VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = (UInt32)(1000011000)
const VK_STRUCTURE_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_STRUCTURE_TYPE_END_RANGE = (UInt32)(48)
const VK_STRUCTURE_TYPE_RANGE_SIZE = (UInt32)(49)
const VK_STRUCTURE_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkStructureType

const VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT
const VK_NV_glsl_shader = 1
const VK_NV_GLSL_SHADER_SPEC_VERSION = 1
const VK_NV_GLSL_SHADER_EXTENSION_NAME = "VK_NV_glsl_shader"
const VK_IMG_filter_cubic = 1
const VK_IMG_FILTER_CUBIC_SPEC_VERSION = 1
const VK_IMG_FILTER_CUBIC_EXTENSION_NAME = "VK_IMG_filter_cubic"

typealias VkFlags UInt32
typealias VkBool32 UInt32
typealias VkDeviceSize UInt64
typealias VkSampleMask UInt32
typealias VkInstance_T Void
typealias VkInstance Ptr{VkInstance_T}
typealias VkPhysicalDevice_T Void
typealias VkPhysicalDevice Ptr{VkPhysicalDevice_T}
typealias VkDevice_T Void
typealias VkDevice Ptr{VkDevice_T}
typealias VkQueue_T Void
typealias VkQueue Ptr{VkQueue_T}
typealias VkSemaphore_T Void
typealias VkSemaphore Ptr{VkSemaphore_T}
typealias VkCommandBuffer_T Void
typealias VkCommandBuffer Ptr{VkCommandBuffer_T}
typealias VkFence_T Void
typealias VkFence Ptr{VkFence_T}
typealias VkDeviceMemory_T Void
typealias VkDeviceMemory Ptr{VkDeviceMemory_T}
typealias VkBuffer_T Void
typealias VkBuffer Ptr{VkBuffer_T}
typealias VkImage_T Void
typealias VkImage Ptr{VkImage_T}
typealias VkEvent_T Void
typealias VkEvent Ptr{VkEvent_T}
typealias VkQueryPool_T Void
typealias VkQueryPool Ptr{VkQueryPool_T}
typealias VkBufferView_T Void
typealias VkBufferView Ptr{VkBufferView_T}
typealias VkImageView_T Void
typealias VkImageView Ptr{VkImageView_T}
typealias VkShaderModule_T Void
typealias VkShaderModule Ptr{VkShaderModule_T}
typealias VkPipelineCache_T Void
typealias VkPipelineCache Ptr{VkPipelineCache_T}
typealias VkPipelineLayout_T Void
typealias VkPipelineLayout Ptr{VkPipelineLayout_T}
typealias VkRenderPass_T Void
typealias VkRenderPass Ptr{VkRenderPass_T}
typealias VkPipeline_T Void
typealias VkPipeline Ptr{VkPipeline_T}
typealias VkDescriptorSetLayout_T Void
typealias VkDescriptorSetLayout Ptr{VkDescriptorSetLayout_T}
typealias VkSampler_T Void
typealias VkSampler Ptr{VkSampler_T}
typealias VkDescriptorPool_T Void
typealias VkDescriptorPool Ptr{VkDescriptorPool_T}
typealias VkDescriptorSet_T Void
typealias VkDescriptorSet Ptr{VkDescriptorSet_T}
typealias VkFramebuffer_T Void
typealias VkFramebuffer Ptr{VkFramebuffer_T}
typealias VkCommandPool_T Void
typealias VkCommandPool Ptr{VkCommandPool_T}

# begin enum VkPipelineCacheHeaderVersion
typealias VkPipelineCacheHeaderVersion UInt32
const VK_PIPELINE_CACHE_HEADER_VERSION_ONE = (UInt32)(1)
const VK_PIPELINE_CACHE_HEADER_VERSION_BEGIN_RANGE = (UInt32)(1)
const VK_PIPELINE_CACHE_HEADER_VERSION_END_RANGE = (UInt32)(1)
const VK_PIPELINE_CACHE_HEADER_VERSION_RANGE_SIZE = (UInt32)(1)
const VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPipelineCacheHeaderVersion

# begin enum VkResult
typealias VkResult Cint
const VK_SUCCESS = (Int32)(0)
const VK_NOT_READY = (Int32)(1)
const VK_TIMEOUT = (Int32)(2)
const VK_EVENT_SET = (Int32)(3)
const VK_EVENT_RESET = (Int32)(4)
const VK_INCOMPLETE = (Int32)(5)
const VK_ERROR_OUT_OF_HOST_MEMORY = (Int32)(-1)
const VK_ERROR_OUT_OF_DEVICE_MEMORY = (Int32)(-2)
const VK_ERROR_INITIALIZATION_FAILED = (Int32)(-3)
const VK_ERROR_DEVICE_LOST = (Int32)(-4)
const VK_ERROR_MEMORY_MAP_FAILED = (Int32)(-5)
const VK_ERROR_LAYER_NOT_PRESENT = (Int32)(-6)
const VK_ERROR_EXTENSION_NOT_PRESENT = (Int32)(-7)
const VK_ERROR_FEATURE_NOT_PRESENT = (Int32)(-8)
const VK_ERROR_INCOMPATIBLE_DRIVER = (Int32)(-9)
const VK_ERROR_TOO_MANY_OBJECTS = (Int32)(-10)
const VK_ERROR_FORMAT_NOT_SUPPORTED = (Int32)(-11)
const VK_ERROR_SURFACE_LOST_KHR = (Int32)(-1000000000)
const VK_ERROR_NATIVE_WINDOW_IN_USE_KHR = (Int32)(-1000000001)
const VK_SUBOPTIMAL_KHR = (Int32)(1000001003)
const VK_ERROR_OUT_OF_DATE_KHR = (Int32)(-1000001004)
const VK_ERROR_INCOMPATIBLE_DISPLAY_KHR = (Int32)(-1000003001)
const VK_ERROR_VALIDATION_FAILED_EXT = (Int32)(-1000011001)
const VK_ERROR_INVALID_SHADER_NV = (Int32)(-1000012000)
const VK_RESULT_BEGIN_RANGE = (Int32)(-11)
const VK_RESULT_END_RANGE = (Int32)(5)
const VK_RESULT_RANGE_SIZE = (Int32)(17)
const VK_RESULT_MAX_ENUM = (Int32)(2147483647)
# end enum VkResult

# begin enum VkSystemAllocationScope
typealias VkSystemAllocationScope UInt32
const VK_SYSTEM_ALLOCATION_SCOPE_COMMAND = (UInt32)(0)
const VK_SYSTEM_ALLOCATION_SCOPE_OBJECT = (UInt32)(1)
const VK_SYSTEM_ALLOCATION_SCOPE_CACHE = (UInt32)(2)
const VK_SYSTEM_ALLOCATION_SCOPE_DEVICE = (UInt32)(3)
const VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE = (UInt32)(4)
const VK_SYSTEM_ALLOCATION_SCOPE_BEGIN_RANGE = (UInt32)(0)
const VK_SYSTEM_ALLOCATION_SCOPE_END_RANGE = (UInt32)(4)
const VK_SYSTEM_ALLOCATION_SCOPE_RANGE_SIZE = (UInt32)(5)
const VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSystemAllocationScope

# begin enum VkInternalAllocationType
typealias VkInternalAllocationType UInt32
const VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE = (UInt32)(0)
const VK_INTERNAL_ALLOCATION_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_INTERNAL_ALLOCATION_TYPE_END_RANGE = (UInt32)(0)
const VK_INTERNAL_ALLOCATION_TYPE_RANGE_SIZE = (UInt32)(1)
const VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkInternalAllocationType

# begin enum VkFormat
typealias VkFormat UInt32
const VK_FORMAT_UNDEFINED = (UInt32)(0)
const VK_FORMAT_R4G4_UNORM_PACK8 = (UInt32)(1)
const VK_FORMAT_R4G4B4A4_UNORM_PACK16 = (UInt32)(2)
const VK_FORMAT_B4G4R4A4_UNORM_PACK16 = (UInt32)(3)
const VK_FORMAT_R5G6B5_UNORM_PACK16 = (UInt32)(4)
const VK_FORMAT_B5G6R5_UNORM_PACK16 = (UInt32)(5)
const VK_FORMAT_R5G5B5A1_UNORM_PACK16 = (UInt32)(6)
const VK_FORMAT_B5G5R5A1_UNORM_PACK16 = (UInt32)(7)
const VK_FORMAT_A1R5G5B5_UNORM_PACK16 = (UInt32)(8)
const VK_FORMAT_R8_UNORM = (UInt32)(9)
const VK_FORMAT_R8_SNORM = (UInt32)(10)
const VK_FORMAT_R8_USCALED = (UInt32)(11)
const VK_FORMAT_R8_SSCALED = (UInt32)(12)
const VK_FORMAT_R8_UINT = (UInt32)(13)
const VK_FORMAT_R8_SINT = (UInt32)(14)
const VK_FORMAT_R8_SRGB = (UInt32)(15)
const VK_FORMAT_R8G8_UNORM = (UInt32)(16)
const VK_FORMAT_R8G8_SNORM = (UInt32)(17)
const VK_FORMAT_R8G8_USCALED = (UInt32)(18)
const VK_FORMAT_R8G8_SSCALED = (UInt32)(19)
const VK_FORMAT_R8G8_UINT = (UInt32)(20)
const VK_FORMAT_R8G8_SINT = (UInt32)(21)
const VK_FORMAT_R8G8_SRGB = (UInt32)(22)
const VK_FORMAT_R8G8B8_UNORM = (UInt32)(23)
const VK_FORMAT_R8G8B8_SNORM = (UInt32)(24)
const VK_FORMAT_R8G8B8_USCALED = (UInt32)(25)
const VK_FORMAT_R8G8B8_SSCALED = (UInt32)(26)
const VK_FORMAT_R8G8B8_UINT = (UInt32)(27)
const VK_FORMAT_R8G8B8_SINT = (UInt32)(28)
const VK_FORMAT_R8G8B8_SRGB = (UInt32)(29)
const VK_FORMAT_B8G8R8_UNORM = (UInt32)(30)
const VK_FORMAT_B8G8R8_SNORM = (UInt32)(31)
const VK_FORMAT_B8G8R8_USCALED = (UInt32)(32)
const VK_FORMAT_B8G8R8_SSCALED = (UInt32)(33)
const VK_FORMAT_B8G8R8_UINT = (UInt32)(34)
const VK_FORMAT_B8G8R8_SINT = (UInt32)(35)
const VK_FORMAT_B8G8R8_SRGB = (UInt32)(36)
const VK_FORMAT_R8G8B8A8_UNORM = (UInt32)(37)
const VK_FORMAT_R8G8B8A8_SNORM = (UInt32)(38)
const VK_FORMAT_R8G8B8A8_USCALED = (UInt32)(39)
const VK_FORMAT_R8G8B8A8_SSCALED = (UInt32)(40)
const VK_FORMAT_R8G8B8A8_UINT = (UInt32)(41)
const VK_FORMAT_R8G8B8A8_SINT = (UInt32)(42)
const VK_FORMAT_R8G8B8A8_SRGB = (UInt32)(43)
const VK_FORMAT_B8G8R8A8_UNORM = (UInt32)(44)
const VK_FORMAT_B8G8R8A8_SNORM = (UInt32)(45)
const VK_FORMAT_B8G8R8A8_USCALED = (UInt32)(46)
const VK_FORMAT_B8G8R8A8_SSCALED = (UInt32)(47)
const VK_FORMAT_B8G8R8A8_UINT = (UInt32)(48)
const VK_FORMAT_B8G8R8A8_SINT = (UInt32)(49)
const VK_FORMAT_B8G8R8A8_SRGB = (UInt32)(50)
const VK_FORMAT_A8B8G8R8_UNORM_PACK32 = (UInt32)(51)
const VK_FORMAT_A8B8G8R8_SNORM_PACK32 = (UInt32)(52)
const VK_FORMAT_A8B8G8R8_USCALED_PACK32 = (UInt32)(53)
const VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = (UInt32)(54)
const VK_FORMAT_A8B8G8R8_UINT_PACK32 = (UInt32)(55)
const VK_FORMAT_A8B8G8R8_SINT_PACK32 = (UInt32)(56)
const VK_FORMAT_A8B8G8R8_SRGB_PACK32 = (UInt32)(57)
const VK_FORMAT_A2R10G10B10_UNORM_PACK32 = (UInt32)(58)
const VK_FORMAT_A2R10G10B10_SNORM_PACK32 = (UInt32)(59)
const VK_FORMAT_A2R10G10B10_USCALED_PACK32 = (UInt32)(60)
const VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = (UInt32)(61)
const VK_FORMAT_A2R10G10B10_UINT_PACK32 = (UInt32)(62)
const VK_FORMAT_A2R10G10B10_SINT_PACK32 = (UInt32)(63)
const VK_FORMAT_A2B10G10R10_UNORM_PACK32 = (UInt32)(64)
const VK_FORMAT_A2B10G10R10_SNORM_PACK32 = (UInt32)(65)
const VK_FORMAT_A2B10G10R10_USCALED_PACK32 = (UInt32)(66)
const VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = (UInt32)(67)
const VK_FORMAT_A2B10G10R10_UINT_PACK32 = (UInt32)(68)
const VK_FORMAT_A2B10G10R10_SINT_PACK32 = (UInt32)(69)
const VK_FORMAT_R16_UNORM = (UInt32)(70)
const VK_FORMAT_R16_SNORM = (UInt32)(71)
const VK_FORMAT_R16_USCALED = (UInt32)(72)
const VK_FORMAT_R16_SSCALED = (UInt32)(73)
const VK_FORMAT_R16_UINT = (UInt32)(74)
const VK_FORMAT_R16_SINT = (UInt32)(75)
const VK_FORMAT_R16_SFLOAT = (UInt32)(76)
const VK_FORMAT_R16G16_UNORM = (UInt32)(77)
const VK_FORMAT_R16G16_SNORM = (UInt32)(78)
const VK_FORMAT_R16G16_USCALED = (UInt32)(79)
const VK_FORMAT_R16G16_SSCALED = (UInt32)(80)
const VK_FORMAT_R16G16_UINT = (UInt32)(81)
const VK_FORMAT_R16G16_SINT = (UInt32)(82)
const VK_FORMAT_R16G16_SFLOAT = (UInt32)(83)
const VK_FORMAT_R16G16B16_UNORM = (UInt32)(84)
const VK_FORMAT_R16G16B16_SNORM = (UInt32)(85)
const VK_FORMAT_R16G16B16_USCALED = (UInt32)(86)
const VK_FORMAT_R16G16B16_SSCALED = (UInt32)(87)
const VK_FORMAT_R16G16B16_UINT = (UInt32)(88)
const VK_FORMAT_R16G16B16_SINT = (UInt32)(89)
const VK_FORMAT_R16G16B16_SFLOAT = (UInt32)(90)
const VK_FORMAT_R16G16B16A16_UNORM = (UInt32)(91)
const VK_FORMAT_R16G16B16A16_SNORM = (UInt32)(92)
const VK_FORMAT_R16G16B16A16_USCALED = (UInt32)(93)
const VK_FORMAT_R16G16B16A16_SSCALED = (UInt32)(94)
const VK_FORMAT_R16G16B16A16_UINT = (UInt32)(95)
const VK_FORMAT_R16G16B16A16_SINT = (UInt32)(96)
const VK_FORMAT_R16G16B16A16_SFLOAT = (UInt32)(97)
const VK_FORMAT_R32_UINT = (UInt32)(98)
const VK_FORMAT_R32_SINT = (UInt32)(99)
const VK_FORMAT_R32_SFLOAT = (UInt32)(100)
const VK_FORMAT_R32G32_UINT = (UInt32)(101)
const VK_FORMAT_R32G32_SINT = (UInt32)(102)
const VK_FORMAT_R32G32_SFLOAT = (UInt32)(103)
const VK_FORMAT_R32G32B32_UINT = (UInt32)(104)
const VK_FORMAT_R32G32B32_SINT = (UInt32)(105)
const VK_FORMAT_R32G32B32_SFLOAT = (UInt32)(106)
const VK_FORMAT_R32G32B32A32_UINT = (UInt32)(107)
const VK_FORMAT_R32G32B32A32_SINT = (UInt32)(108)
const VK_FORMAT_R32G32B32A32_SFLOAT = (UInt32)(109)
const VK_FORMAT_R64_UINT = (UInt32)(110)
const VK_FORMAT_R64_SINT = (UInt32)(111)
const VK_FORMAT_R64_SFLOAT = (UInt32)(112)
const VK_FORMAT_R64G64_UINT = (UInt32)(113)
const VK_FORMAT_R64G64_SINT = (UInt32)(114)
const VK_FORMAT_R64G64_SFLOAT = (UInt32)(115)
const VK_FORMAT_R64G64B64_UINT = (UInt32)(116)
const VK_FORMAT_R64G64B64_SINT = (UInt32)(117)
const VK_FORMAT_R64G64B64_SFLOAT = (UInt32)(118)
const VK_FORMAT_R64G64B64A64_UINT = (UInt32)(119)
const VK_FORMAT_R64G64B64A64_SINT = (UInt32)(120)
const VK_FORMAT_R64G64B64A64_SFLOAT = (UInt32)(121)
const VK_FORMAT_B10G11R11_UFLOAT_PACK32 = (UInt32)(122)
const VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = (UInt32)(123)
const VK_FORMAT_D16_UNORM = (UInt32)(124)
const VK_FORMAT_X8_D24_UNORM_PACK32 = (UInt32)(125)
const VK_FORMAT_D32_SFLOAT = (UInt32)(126)
const VK_FORMAT_S8_UINT = (UInt32)(127)
const VK_FORMAT_D16_UNORM_S8_UINT = (UInt32)(128)
const VK_FORMAT_D24_UNORM_S8_UINT = (UInt32)(129)
const VK_FORMAT_D32_SFLOAT_S8_UINT = (UInt32)(130)
const VK_FORMAT_BC1_RGB_UNORM_BLOCK = (UInt32)(131)
const VK_FORMAT_BC1_RGB_SRGB_BLOCK = (UInt32)(132)
const VK_FORMAT_BC1_RGBA_UNORM_BLOCK = (UInt32)(133)
const VK_FORMAT_BC1_RGBA_SRGB_BLOCK = (UInt32)(134)
const VK_FORMAT_BC2_UNORM_BLOCK = (UInt32)(135)
const VK_FORMAT_BC2_SRGB_BLOCK = (UInt32)(136)
const VK_FORMAT_BC3_UNORM_BLOCK = (UInt32)(137)
const VK_FORMAT_BC3_SRGB_BLOCK = (UInt32)(138)
const VK_FORMAT_BC4_UNORM_BLOCK = (UInt32)(139)
const VK_FORMAT_BC4_SNORM_BLOCK = (UInt32)(140)
const VK_FORMAT_BC5_UNORM_BLOCK = (UInt32)(141)
const VK_FORMAT_BC5_SNORM_BLOCK = (UInt32)(142)
const VK_FORMAT_BC6H_UFLOAT_BLOCK = (UInt32)(143)
const VK_FORMAT_BC6H_SFLOAT_BLOCK = (UInt32)(144)
const VK_FORMAT_BC7_UNORM_BLOCK = (UInt32)(145)
const VK_FORMAT_BC7_SRGB_BLOCK = (UInt32)(146)
const VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = (UInt32)(147)
const VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = (UInt32)(148)
const VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = (UInt32)(149)
const VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = (UInt32)(150)
const VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = (UInt32)(151)
const VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = (UInt32)(152)
const VK_FORMAT_EAC_R11_UNORM_BLOCK = (UInt32)(153)
const VK_FORMAT_EAC_R11_SNORM_BLOCK = (UInt32)(154)
const VK_FORMAT_EAC_R11G11_UNORM_BLOCK = (UInt32)(155)
const VK_FORMAT_EAC_R11G11_SNORM_BLOCK = (UInt32)(156)
const VK_FORMAT_ASTC_4x4_UNORM_BLOCK = (UInt32)(157)
const VK_FORMAT_ASTC_4x4_SRGB_BLOCK = (UInt32)(158)
const VK_FORMAT_ASTC_5x4_UNORM_BLOCK = (UInt32)(159)
const VK_FORMAT_ASTC_5x4_SRGB_BLOCK = (UInt32)(160)
const VK_FORMAT_ASTC_5x5_UNORM_BLOCK = (UInt32)(161)
const VK_FORMAT_ASTC_5x5_SRGB_BLOCK = (UInt32)(162)
const VK_FORMAT_ASTC_6x5_UNORM_BLOCK = (UInt32)(163)
const VK_FORMAT_ASTC_6x5_SRGB_BLOCK = (UInt32)(164)
const VK_FORMAT_ASTC_6x6_UNORM_BLOCK = (UInt32)(165)
const VK_FORMAT_ASTC_6x6_SRGB_BLOCK = (UInt32)(166)
const VK_FORMAT_ASTC_8x5_UNORM_BLOCK = (UInt32)(167)
const VK_FORMAT_ASTC_8x5_SRGB_BLOCK = (UInt32)(168)
const VK_FORMAT_ASTC_8x6_UNORM_BLOCK = (UInt32)(169)
const VK_FORMAT_ASTC_8x6_SRGB_BLOCK = (UInt32)(170)
const VK_FORMAT_ASTC_8x8_UNORM_BLOCK = (UInt32)(171)
const VK_FORMAT_ASTC_8x8_SRGB_BLOCK = (UInt32)(172)
const VK_FORMAT_ASTC_10x5_UNORM_BLOCK = (UInt32)(173)
const VK_FORMAT_ASTC_10x5_SRGB_BLOCK = (UInt32)(174)
const VK_FORMAT_ASTC_10x6_UNORM_BLOCK = (UInt32)(175)
const VK_FORMAT_ASTC_10x6_SRGB_BLOCK = (UInt32)(176)
const VK_FORMAT_ASTC_10x8_UNORM_BLOCK = (UInt32)(177)
const VK_FORMAT_ASTC_10x8_SRGB_BLOCK = (UInt32)(178)
const VK_FORMAT_ASTC_10x10_UNORM_BLOCK = (UInt32)(179)
const VK_FORMAT_ASTC_10x10_SRGB_BLOCK = (UInt32)(180)
const VK_FORMAT_ASTC_12x10_UNORM_BLOCK = (UInt32)(181)
const VK_FORMAT_ASTC_12x10_SRGB_BLOCK = (UInt32)(182)
const VK_FORMAT_ASTC_12x12_UNORM_BLOCK = (UInt32)(183)
const VK_FORMAT_ASTC_12x12_SRGB_BLOCK = (UInt32)(184)
const VK_FORMAT_BEGIN_RANGE = (UInt32)(0)
const VK_FORMAT_END_RANGE = (UInt32)(184)
const VK_FORMAT_RANGE_SIZE = (UInt32)(185)
const VK_FORMAT_MAX_ENUM = (UInt32)(2147483647)
# end enum VkFormat

# begin enum VkImageType
typealias VkImageType UInt32
const VK_IMAGE_TYPE_1D = (UInt32)(0)
const VK_IMAGE_TYPE_2D = (UInt32)(1)
const VK_IMAGE_TYPE_3D = (UInt32)(2)
const VK_IMAGE_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_IMAGE_TYPE_END_RANGE = (UInt32)(2)
const VK_IMAGE_TYPE_RANGE_SIZE = (UInt32)(3)
const VK_IMAGE_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageType

# begin enum VkImageTiling
typealias VkImageTiling UInt32
const VK_IMAGE_TILING_OPTIMAL = (UInt32)(0)
const VK_IMAGE_TILING_LINEAR = (UInt32)(1)
const VK_IMAGE_TILING_BEGIN_RANGE = (UInt32)(0)
const VK_IMAGE_TILING_END_RANGE = (UInt32)(1)
const VK_IMAGE_TILING_RANGE_SIZE = (UInt32)(2)
const VK_IMAGE_TILING_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageTiling

# begin enum VkPhysicalDeviceType
typealias VkPhysicalDeviceType UInt32
const VK_PHYSICAL_DEVICE_TYPE_OTHER = (UInt32)(0)
const VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU = (UInt32)(1)
const VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU = (UInt32)(2)
const VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU = (UInt32)(3)
const VK_PHYSICAL_DEVICE_TYPE_CPU = (UInt32)(4)
const VK_PHYSICAL_DEVICE_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_PHYSICAL_DEVICE_TYPE_END_RANGE = (UInt32)(4)
const VK_PHYSICAL_DEVICE_TYPE_RANGE_SIZE = (UInt32)(5)
const VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPhysicalDeviceType

# begin enum VkQueryType
typealias VkQueryType UInt32
const VK_QUERY_TYPE_OCCLUSION = (UInt32)(0)
const VK_QUERY_TYPE_PIPELINE_STATISTICS = (UInt32)(1)
const VK_QUERY_TYPE_TIMESTAMP = (UInt32)(2)
const VK_QUERY_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_QUERY_TYPE_END_RANGE = (UInt32)(2)
const VK_QUERY_TYPE_RANGE_SIZE = (UInt32)(3)
const VK_QUERY_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkQueryType

# begin enum VkSharingMode
typealias VkSharingMode UInt32
const VK_SHARING_MODE_EXCLUSIVE = (UInt32)(0)
const VK_SHARING_MODE_CONCURRENT = (UInt32)(1)
const VK_SHARING_MODE_BEGIN_RANGE = (UInt32)(0)
const VK_SHARING_MODE_END_RANGE = (UInt32)(1)
const VK_SHARING_MODE_RANGE_SIZE = (UInt32)(2)
const VK_SHARING_MODE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSharingMode

# begin enum VkImageLayout
typealias VkImageLayout UInt32
const VK_IMAGE_LAYOUT_UNDEFINED = (UInt32)(0)
const VK_IMAGE_LAYOUT_GENERAL = (UInt32)(1)
const VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = (UInt32)(2)
const VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = (UInt32)(3)
const VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = (UInt32)(4)
const VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = (UInt32)(5)
const VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = (UInt32)(6)
const VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = (UInt32)(7)
const VK_IMAGE_LAYOUT_PREINITIALIZED = (UInt32)(8)
const VK_IMAGE_LAYOUT_PRESENT_SRC_KHR = (UInt32)(1000001002)
const VK_IMAGE_LAYOUT_BEGIN_RANGE = (UInt32)(0)
const VK_IMAGE_LAYOUT_END_RANGE = (UInt32)(8)
const VK_IMAGE_LAYOUT_RANGE_SIZE = (UInt32)(9)
const VK_IMAGE_LAYOUT_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageLayout

# begin enum VkImageViewType
typealias VkImageViewType UInt32
const VK_IMAGE_VIEW_TYPE_1D = (UInt32)(0)
const VK_IMAGE_VIEW_TYPE_2D = (UInt32)(1)
const VK_IMAGE_VIEW_TYPE_3D = (UInt32)(2)
const VK_IMAGE_VIEW_TYPE_CUBE = (UInt32)(3)
const VK_IMAGE_VIEW_TYPE_1D_ARRAY = (UInt32)(4)
const VK_IMAGE_VIEW_TYPE_2D_ARRAY = (UInt32)(5)
const VK_IMAGE_VIEW_TYPE_CUBE_ARRAY = (UInt32)(6)
const VK_IMAGE_VIEW_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_IMAGE_VIEW_TYPE_END_RANGE = (UInt32)(6)
const VK_IMAGE_VIEW_TYPE_RANGE_SIZE = (UInt32)(7)
const VK_IMAGE_VIEW_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageViewType

# begin enum VkComponentSwizzle
typealias VkComponentSwizzle UInt32
const VK_COMPONENT_SWIZZLE_IDENTITY = (UInt32)(0)
const VK_COMPONENT_SWIZZLE_ZERO = (UInt32)(1)
const VK_COMPONENT_SWIZZLE_ONE = (UInt32)(2)
const VK_COMPONENT_SWIZZLE_R = (UInt32)(3)
const VK_COMPONENT_SWIZZLE_G = (UInt32)(4)
const VK_COMPONENT_SWIZZLE_B = (UInt32)(5)
const VK_COMPONENT_SWIZZLE_A = (UInt32)(6)
const VK_COMPONENT_SWIZZLE_BEGIN_RANGE = (UInt32)(0)
const VK_COMPONENT_SWIZZLE_END_RANGE = (UInt32)(6)
const VK_COMPONENT_SWIZZLE_RANGE_SIZE = (UInt32)(7)
const VK_COMPONENT_SWIZZLE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkComponentSwizzle

# begin enum VkVertexInputRate
typealias VkVertexInputRate UInt32
const VK_VERTEX_INPUT_RATE_VERTEX = (UInt32)(0)
const VK_VERTEX_INPUT_RATE_INSTANCE = (UInt32)(1)
const VK_VERTEX_INPUT_RATE_BEGIN_RANGE = (UInt32)(0)
const VK_VERTEX_INPUT_RATE_END_RANGE = (UInt32)(1)
const VK_VERTEX_INPUT_RATE_RANGE_SIZE = (UInt32)(2)
const VK_VERTEX_INPUT_RATE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkVertexInputRate

# begin enum VkPrimitiveTopology
typealias VkPrimitiveTopology UInt32
const VK_PRIMITIVE_TOPOLOGY_POINT_LIST = (UInt32)(0)
const VK_PRIMITIVE_TOPOLOGY_LINE_LIST = (UInt32)(1)
const VK_PRIMITIVE_TOPOLOGY_LINE_STRIP = (UInt32)(2)
const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST = (UInt32)(3)
const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP = (UInt32)(4)
const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN = (UInt32)(5)
const VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY = (UInt32)(6)
const VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY = (UInt32)(7)
const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY = (UInt32)(8)
const VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY = (UInt32)(9)
const VK_PRIMITIVE_TOPOLOGY_PATCH_LIST = (UInt32)(10)
const VK_PRIMITIVE_TOPOLOGY_BEGIN_RANGE = (UInt32)(0)
const VK_PRIMITIVE_TOPOLOGY_END_RANGE = (UInt32)(10)
const VK_PRIMITIVE_TOPOLOGY_RANGE_SIZE = (UInt32)(11)
const VK_PRIMITIVE_TOPOLOGY_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPrimitiveTopology

# begin enum VkPolygonMode
typealias VkPolygonMode UInt32
const VK_POLYGON_MODE_FILL = (UInt32)(0)
const VK_POLYGON_MODE_LINE = (UInt32)(1)
const VK_POLYGON_MODE_POINT = (UInt32)(2)
const VK_POLYGON_MODE_BEGIN_RANGE = (UInt32)(0)
const VK_POLYGON_MODE_END_RANGE = (UInt32)(2)
const VK_POLYGON_MODE_RANGE_SIZE = (UInt32)(3)
const VK_POLYGON_MODE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPolygonMode

# begin enum VkFrontFace
typealias VkFrontFace UInt32
const VK_FRONT_FACE_COUNTER_CLOCKWISE = (UInt32)(0)
const VK_FRONT_FACE_CLOCKWISE = (UInt32)(1)
const VK_FRONT_FACE_BEGIN_RANGE = (UInt32)(0)
const VK_FRONT_FACE_END_RANGE = (UInt32)(1)
const VK_FRONT_FACE_RANGE_SIZE = (UInt32)(2)
const VK_FRONT_FACE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkFrontFace

# begin enum VkCompareOp
typealias VkCompareOp UInt32
const VK_COMPARE_OP_NEVER = (UInt32)(0)
const VK_COMPARE_OP_LESS = (UInt32)(1)
const VK_COMPARE_OP_EQUAL = (UInt32)(2)
const VK_COMPARE_OP_LESS_OR_EQUAL = (UInt32)(3)
const VK_COMPARE_OP_GREATER = (UInt32)(4)
const VK_COMPARE_OP_NOT_EQUAL = (UInt32)(5)
const VK_COMPARE_OP_GREATER_OR_EQUAL = (UInt32)(6)
const VK_COMPARE_OP_ALWAYS = (UInt32)(7)
const VK_COMPARE_OP_BEGIN_RANGE = (UInt32)(0)
const VK_COMPARE_OP_END_RANGE = (UInt32)(7)
const VK_COMPARE_OP_RANGE_SIZE = (UInt32)(8)
const VK_COMPARE_OP_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCompareOp

# begin enum VkStencilOp
typealias VkStencilOp UInt32
const VK_STENCIL_OP_KEEP = (UInt32)(0)
const VK_STENCIL_OP_ZERO = (UInt32)(1)
const VK_STENCIL_OP_REPLACE = (UInt32)(2)
const VK_STENCIL_OP_INCREMENT_AND_CLAMP = (UInt32)(3)
const VK_STENCIL_OP_DECREMENT_AND_CLAMP = (UInt32)(4)
const VK_STENCIL_OP_INVERT = (UInt32)(5)
const VK_STENCIL_OP_INCREMENT_AND_WRAP = (UInt32)(6)
const VK_STENCIL_OP_DECREMENT_AND_WRAP = (UInt32)(7)
const VK_STENCIL_OP_BEGIN_RANGE = (UInt32)(0)
const VK_STENCIL_OP_END_RANGE = (UInt32)(7)
const VK_STENCIL_OP_RANGE_SIZE = (UInt32)(8)
const VK_STENCIL_OP_MAX_ENUM = (UInt32)(2147483647)
# end enum VkStencilOp

# begin enum VkLogicOp
typealias VkLogicOp UInt32
const VK_LOGIC_OP_CLEAR = (UInt32)(0)
const VK_LOGIC_OP_AND = (UInt32)(1)
const VK_LOGIC_OP_AND_REVERSE = (UInt32)(2)
const VK_LOGIC_OP_COPY = (UInt32)(3)
const VK_LOGIC_OP_AND_INVERTED = (UInt32)(4)
const VK_LOGIC_OP_NO_OP = (UInt32)(5)
const VK_LOGIC_OP_XOR = (UInt32)(6)
const VK_LOGIC_OP_OR = (UInt32)(7)
const VK_LOGIC_OP_NOR = (UInt32)(8)
const VK_LOGIC_OP_EQUIVALENT = (UInt32)(9)
const VK_LOGIC_OP_INVERT = (UInt32)(10)
const VK_LOGIC_OP_OR_REVERSE = (UInt32)(11)
const VK_LOGIC_OP_COPY_INVERTED = (UInt32)(12)
const VK_LOGIC_OP_OR_INVERTED = (UInt32)(13)
const VK_LOGIC_OP_NAND = (UInt32)(14)
const VK_LOGIC_OP_SET = (UInt32)(15)
const VK_LOGIC_OP_BEGIN_RANGE = (UInt32)(0)
const VK_LOGIC_OP_END_RANGE = (UInt32)(15)
const VK_LOGIC_OP_RANGE_SIZE = (UInt32)(16)
const VK_LOGIC_OP_MAX_ENUM = (UInt32)(2147483647)
# end enum VkLogicOp

# begin enum VkBlendFactor
typealias VkBlendFactor UInt32
const VK_BLEND_FACTOR_ZERO = (UInt32)(0)
const VK_BLEND_FACTOR_ONE = (UInt32)(1)
const VK_BLEND_FACTOR_SRC_COLOR = (UInt32)(2)
const VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR = (UInt32)(3)
const VK_BLEND_FACTOR_DST_COLOR = (UInt32)(4)
const VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR = (UInt32)(5)
const VK_BLEND_FACTOR_SRC_ALPHA = (UInt32)(6)
const VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA = (UInt32)(7)
const VK_BLEND_FACTOR_DST_ALPHA = (UInt32)(8)
const VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA = (UInt32)(9)
const VK_BLEND_FACTOR_CONSTANT_COLOR = (UInt32)(10)
const VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR = (UInt32)(11)
const VK_BLEND_FACTOR_CONSTANT_ALPHA = (UInt32)(12)
const VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA = (UInt32)(13)
const VK_BLEND_FACTOR_SRC_ALPHA_SATURATE = (UInt32)(14)
const VK_BLEND_FACTOR_SRC1_COLOR = (UInt32)(15)
const VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR = (UInt32)(16)
const VK_BLEND_FACTOR_SRC1_ALPHA = (UInt32)(17)
const VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA = (UInt32)(18)
const VK_BLEND_FACTOR_BEGIN_RANGE = (UInt32)(0)
const VK_BLEND_FACTOR_END_RANGE = (UInt32)(18)
const VK_BLEND_FACTOR_RANGE_SIZE = (UInt32)(19)
const VK_BLEND_FACTOR_MAX_ENUM = (UInt32)(2147483647)
# end enum VkBlendFactor

# begin enum VkBlendOp
typealias VkBlendOp UInt32
const VK_BLEND_OP_ADD = (UInt32)(0)
const VK_BLEND_OP_SUBTRACT = (UInt32)(1)
const VK_BLEND_OP_REVERSE_SUBTRACT = (UInt32)(2)
const VK_BLEND_OP_MIN = (UInt32)(3)
const VK_BLEND_OP_MAX = (UInt32)(4)
const VK_BLEND_OP_BEGIN_RANGE = (UInt32)(0)
const VK_BLEND_OP_END_RANGE = (UInt32)(4)
const VK_BLEND_OP_RANGE_SIZE = (UInt32)(5)
const VK_BLEND_OP_MAX_ENUM = (UInt32)(2147483647)
# end enum VkBlendOp

# begin enum VkDynamicState
typealias VkDynamicState UInt32
const VK_DYNAMIC_STATE_VIEWPORT = (UInt32)(0)
const VK_DYNAMIC_STATE_SCISSOR = (UInt32)(1)
const VK_DYNAMIC_STATE_LINE_WIDTH = (UInt32)(2)
const VK_DYNAMIC_STATE_DEPTH_BIAS = (UInt32)(3)
const VK_DYNAMIC_STATE_BLEND_CONSTANTS = (UInt32)(4)
const VK_DYNAMIC_STATE_DEPTH_BOUNDS = (UInt32)(5)
const VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK = (UInt32)(6)
const VK_DYNAMIC_STATE_STENCIL_WRITE_MASK = (UInt32)(7)
const VK_DYNAMIC_STATE_STENCIL_REFERENCE = (UInt32)(8)
const VK_DYNAMIC_STATE_BEGIN_RANGE = (UInt32)(0)
const VK_DYNAMIC_STATE_END_RANGE = (UInt32)(8)
const VK_DYNAMIC_STATE_RANGE_SIZE = (UInt32)(9)
const VK_DYNAMIC_STATE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkDynamicState

# begin enum VkFilter
typealias VkFilter UInt32
const VK_FILTER_NEAREST = (UInt32)(0)
const VK_FILTER_LINEAR = (UInt32)(1)
const VK_FILTER_CUBIC_IMG = (UInt32)(1000015000)
const VK_FILTER_BEGIN_RANGE = (UInt32)(0)
const VK_FILTER_END_RANGE = (UInt32)(1)
const VK_FILTER_RANGE_SIZE = (UInt32)(2)
const VK_FILTER_MAX_ENUM = (UInt32)(2147483647)
# end enum VkFilter

# begin enum VkSamplerMipmapMode
typealias VkSamplerMipmapMode UInt32
const VK_SAMPLER_MIPMAP_MODE_NEAREST = (UInt32)(0)
const VK_SAMPLER_MIPMAP_MODE_LINEAR = (UInt32)(1)
const VK_SAMPLER_MIPMAP_MODE_BEGIN_RANGE = (UInt32)(0)
const VK_SAMPLER_MIPMAP_MODE_END_RANGE = (UInt32)(1)
const VK_SAMPLER_MIPMAP_MODE_RANGE_SIZE = (UInt32)(2)
const VK_SAMPLER_MIPMAP_MODE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSamplerMipmapMode

# begin enum VkSamplerAddressMode
typealias VkSamplerAddressMode UInt32
const VK_SAMPLER_ADDRESS_MODE_REPEAT = (UInt32)(0)
const VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT = (UInt32)(1)
const VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE = (UInt32)(2)
const VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER = (UInt32)(3)
const VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE = (UInt32)(4)
const VK_SAMPLER_ADDRESS_MODE_BEGIN_RANGE = (UInt32)(0)
const VK_SAMPLER_ADDRESS_MODE_END_RANGE = (UInt32)(3)
const VK_SAMPLER_ADDRESS_MODE_RANGE_SIZE = (UInt32)(4)
const VK_SAMPLER_ADDRESS_MODE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSamplerAddressMode

# begin enum VkBorderColor
typealias VkBorderColor UInt32
const VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK = (UInt32)(0)
const VK_BORDER_COLOR_INT_TRANSPARENT_BLACK = (UInt32)(1)
const VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK = (UInt32)(2)
const VK_BORDER_COLOR_INT_OPAQUE_BLACK = (UInt32)(3)
const VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE = (UInt32)(4)
const VK_BORDER_COLOR_INT_OPAQUE_WHITE = (UInt32)(5)
const VK_BORDER_COLOR_BEGIN_RANGE = (UInt32)(0)
const VK_BORDER_COLOR_END_RANGE = (UInt32)(5)
const VK_BORDER_COLOR_RANGE_SIZE = (UInt32)(6)
const VK_BORDER_COLOR_MAX_ENUM = (UInt32)(2147483647)
# end enum VkBorderColor

# begin enum VkDescriptorType
typealias VkDescriptorType UInt32
const VK_DESCRIPTOR_TYPE_SAMPLER = (UInt32)(0)
const VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER = (UInt32)(1)
const VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE = (UInt32)(2)
const VK_DESCRIPTOR_TYPE_STORAGE_IMAGE = (UInt32)(3)
const VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER = (UInt32)(4)
const VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER = (UInt32)(5)
const VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER = (UInt32)(6)
const VK_DESCRIPTOR_TYPE_STORAGE_BUFFER = (UInt32)(7)
const VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC = (UInt32)(8)
const VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC = (UInt32)(9)
const VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT = (UInt32)(10)
const VK_DESCRIPTOR_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_DESCRIPTOR_TYPE_END_RANGE = (UInt32)(10)
const VK_DESCRIPTOR_TYPE_RANGE_SIZE = (UInt32)(11)
const VK_DESCRIPTOR_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkDescriptorType

# begin enum VkAttachmentLoadOp
typealias VkAttachmentLoadOp UInt32
const VK_ATTACHMENT_LOAD_OP_LOAD = (UInt32)(0)
const VK_ATTACHMENT_LOAD_OP_CLEAR = (UInt32)(1)
const VK_ATTACHMENT_LOAD_OP_DONT_CARE = (UInt32)(2)
const VK_ATTACHMENT_LOAD_OP_BEGIN_RANGE = (UInt32)(0)
const VK_ATTACHMENT_LOAD_OP_END_RANGE = (UInt32)(2)
const VK_ATTACHMENT_LOAD_OP_RANGE_SIZE = (UInt32)(3)
const VK_ATTACHMENT_LOAD_OP_MAX_ENUM = (UInt32)(2147483647)
# end enum VkAttachmentLoadOp

# begin enum VkAttachmentStoreOp
typealias VkAttachmentStoreOp UInt32
const VK_ATTACHMENT_STORE_OP_STORE = (UInt32)(0)
const VK_ATTACHMENT_STORE_OP_DONT_CARE = (UInt32)(1)
const VK_ATTACHMENT_STORE_OP_BEGIN_RANGE = (UInt32)(0)
const VK_ATTACHMENT_STORE_OP_END_RANGE = (UInt32)(1)
const VK_ATTACHMENT_STORE_OP_RANGE_SIZE = (UInt32)(2)
const VK_ATTACHMENT_STORE_OP_MAX_ENUM = (UInt32)(2147483647)
# end enum VkAttachmentStoreOp

# begin enum VkPipelineBindPoint
typealias VkPipelineBindPoint UInt32
const VK_PIPELINE_BIND_POINT_GRAPHICS = (UInt32)(0)
const VK_PIPELINE_BIND_POINT_COMPUTE = (UInt32)(1)
const VK_PIPELINE_BIND_POINT_BEGIN_RANGE = (UInt32)(0)
const VK_PIPELINE_BIND_POINT_END_RANGE = (UInt32)(1)
const VK_PIPELINE_BIND_POINT_RANGE_SIZE = (UInt32)(2)
const VK_PIPELINE_BIND_POINT_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPipelineBindPoint

# begin enum VkCommandBufferLevel
typealias VkCommandBufferLevel UInt32
const VK_COMMAND_BUFFER_LEVEL_PRIMARY = (UInt32)(0)
const VK_COMMAND_BUFFER_LEVEL_SECONDARY = (UInt32)(1)
const VK_COMMAND_BUFFER_LEVEL_BEGIN_RANGE = (UInt32)(0)
const VK_COMMAND_BUFFER_LEVEL_END_RANGE = (UInt32)(1)
const VK_COMMAND_BUFFER_LEVEL_RANGE_SIZE = (UInt32)(2)
const VK_COMMAND_BUFFER_LEVEL_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCommandBufferLevel

# begin enum VkIndexType
typealias VkIndexType UInt32
const VK_INDEX_TYPE_UINT16 = (UInt32)(0)
const VK_INDEX_TYPE_UINT32 = (UInt32)(1)
const VK_INDEX_TYPE_BEGIN_RANGE = (UInt32)(0)
const VK_INDEX_TYPE_END_RANGE = (UInt32)(1)
const VK_INDEX_TYPE_RANGE_SIZE = (UInt32)(2)
const VK_INDEX_TYPE_MAX_ENUM = (UInt32)(2147483647)
# end enum VkIndexType

# begin enum VkSubpassContents
typealias VkSubpassContents UInt32
const VK_SUBPASS_CONTENTS_INLINE = (UInt32)(0)
const VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS = (UInt32)(1)
const VK_SUBPASS_CONTENTS_BEGIN_RANGE = (UInt32)(0)
const VK_SUBPASS_CONTENTS_END_RANGE = (UInt32)(1)
const VK_SUBPASS_CONTENTS_RANGE_SIZE = (UInt32)(2)
const VK_SUBPASS_CONTENTS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSubpassContents

typealias VkInstanceCreateFlags VkFlags

# begin enum VkFormatFeatureFlagBits
typealias VkFormatFeatureFlagBits UInt32
const VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT = (UInt32)(1)
const VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT = (UInt32)(2)
const VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT = (UInt32)(4)
const VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT = (UInt32)(8)
const VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT = (UInt32)(16)
const VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = (UInt32)(32)
const VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT = (UInt32)(64)
const VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT = (UInt32)(128)
const VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT = (UInt32)(256)
const VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT = (UInt32)(512)
const VK_FORMAT_FEATURE_BLIT_SRC_BIT = (UInt32)(1024)
const VK_FORMAT_FEATURE_BLIT_DST_BIT = (UInt32)(2048)
const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = (UInt32)(4096)
const VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = (UInt32)(8192)
const VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkFormatFeatureFlagBits

typealias VkFormatFeatureFlags VkFlags

# begin enum VkImageUsageFlagBits
typealias VkImageUsageFlagBits UInt32
const VK_IMAGE_USAGE_TRANSFER_SRC_BIT = (UInt32)(1)
const VK_IMAGE_USAGE_TRANSFER_DST_BIT = (UInt32)(2)
const VK_IMAGE_USAGE_SAMPLED_BIT = (UInt32)(4)
const VK_IMAGE_USAGE_STORAGE_BIT = (UInt32)(8)
const VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT = (UInt32)(16)
const VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT = (UInt32)(32)
const VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT = (UInt32)(64)
const VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT = (UInt32)(128)
const VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageUsageFlagBits

typealias VkImageUsageFlags VkFlags

# begin enum VkImageCreateFlagBits
typealias VkImageCreateFlagBits UInt32
const VK_IMAGE_CREATE_SPARSE_BINDING_BIT = (UInt32)(1)
const VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT = (UInt32)(2)
const VK_IMAGE_CREATE_SPARSE_ALIASED_BIT = (UInt32)(4)
const VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT = (UInt32)(8)
const VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT = (UInt32)(16)
const VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageCreateFlagBits

typealias VkImageCreateFlags VkFlags

# begin enum VkSampleCountFlagBits
typealias VkSampleCountFlagBits UInt32
const VK_SAMPLE_COUNT_1_BIT = (UInt32)(1)
const VK_SAMPLE_COUNT_2_BIT = (UInt32)(2)
const VK_SAMPLE_COUNT_4_BIT = (UInt32)(4)
const VK_SAMPLE_COUNT_8_BIT = (UInt32)(8)
const VK_SAMPLE_COUNT_16_BIT = (UInt32)(16)
const VK_SAMPLE_COUNT_32_BIT = (UInt32)(32)
const VK_SAMPLE_COUNT_64_BIT = (UInt32)(64)
const VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSampleCountFlagBits

typealias VkSampleCountFlags VkFlags

# begin enum VkQueueFlagBits
typealias VkQueueFlagBits UInt32
const VK_QUEUE_GRAPHICS_BIT = (UInt32)(1)
const VK_QUEUE_COMPUTE_BIT = (UInt32)(2)
const VK_QUEUE_TRANSFER_BIT = (UInt32)(4)
const VK_QUEUE_SPARSE_BINDING_BIT = (UInt32)(8)
const VK_QUEUE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkQueueFlagBits

typealias VkQueueFlags VkFlags

# begin enum VkMemoryPropertyFlagBits
typealias VkMemoryPropertyFlagBits UInt32
const VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT = (UInt32)(1)
const VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT = (UInt32)(2)
const VK_MEMORY_PROPERTY_HOST_COHERENT_BIT = (UInt32)(4)
const VK_MEMORY_PROPERTY_HOST_CACHED_BIT = (UInt32)(8)
const VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT = (UInt32)(16)
const VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkMemoryPropertyFlagBits

typealias VkMemoryPropertyFlags VkFlags

# begin enum VkMemoryHeapFlagBits
typealias VkMemoryHeapFlagBits UInt32
const VK_MEMORY_HEAP_DEVICE_LOCAL_BIT = (UInt32)(1)
const VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkMemoryHeapFlagBits

typealias VkMemoryHeapFlags VkFlags
typealias VkDeviceCreateFlags VkFlags
typealias VkDeviceQueueCreateFlags VkFlags

# begin enum VkPipelineStageFlagBits
typealias VkPipelineStageFlagBits UInt32
const VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = (UInt32)(1)
const VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = (UInt32)(2)
const VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = (UInt32)(4)
const VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = (UInt32)(8)
const VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = (UInt32)(16)
const VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = (UInt32)(32)
const VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = (UInt32)(64)
const VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = (UInt32)(128)
const VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = (UInt32)(256)
const VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = (UInt32)(512)
const VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = (UInt32)(1024)
const VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = (UInt32)(2048)
const VK_PIPELINE_STAGE_TRANSFER_BIT = (UInt32)(4096)
const VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = (UInt32)(8192)
const VK_PIPELINE_STAGE_HOST_BIT = (UInt32)(16384)
const VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = (UInt32)(32768)
const VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = (UInt32)(65536)
const VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPipelineStageFlagBits

typealias VkPipelineStageFlags VkFlags
typealias VkMemoryMapFlags VkFlags

# begin enum VkImageAspectFlagBits
typealias VkImageAspectFlagBits UInt32
const VK_IMAGE_ASPECT_COLOR_BIT = (UInt32)(1)
const VK_IMAGE_ASPECT_DEPTH_BIT = (UInt32)(2)
const VK_IMAGE_ASPECT_STENCIL_BIT = (UInt32)(4)
const VK_IMAGE_ASPECT_METADATA_BIT = (UInt32)(8)
const VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkImageAspectFlagBits

typealias VkImageAspectFlags VkFlags

# begin enum VkSparseImageFormatFlagBits
typealias VkSparseImageFormatFlagBits UInt32
const VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT = (UInt32)(1)
const VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT = (UInt32)(2)
const VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT = (UInt32)(4)
const VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSparseImageFormatFlagBits

typealias VkSparseImageFormatFlags VkFlags

# begin enum VkSparseMemoryBindFlagBits
typealias VkSparseMemoryBindFlagBits UInt32
const VK_SPARSE_MEMORY_BIND_METADATA_BIT = (UInt32)(1)
const VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkSparseMemoryBindFlagBits

typealias VkSparseMemoryBindFlags VkFlags

# begin enum VkFenceCreateFlagBits
typealias VkFenceCreateFlagBits UInt32
const VK_FENCE_CREATE_SIGNALED_BIT = (UInt32)(1)
const VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkFenceCreateFlagBits

typealias VkFenceCreateFlags VkFlags
typealias VkSemaphoreCreateFlags VkFlags
typealias VkEventCreateFlags VkFlags
typealias VkQueryPoolCreateFlags VkFlags

# begin enum VkQueryPipelineStatisticFlagBits
typealias VkQueryPipelineStatisticFlagBits UInt32
const VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT = (UInt32)(1)
const VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT = (UInt32)(2)
const VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT = (UInt32)(4)
const VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT = (UInt32)(8)
const VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT = (UInt32)(16)
const VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT = (UInt32)(32)
const VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT = (UInt32)(64)
const VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT = (UInt32)(128)
const VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = (UInt32)(256)
const VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = (UInt32)(512)
const VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT = (UInt32)(1024)
const VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkQueryPipelineStatisticFlagBits

typealias VkQueryPipelineStatisticFlags VkFlags

# begin enum VkQueryResultFlagBits
typealias VkQueryResultFlagBits UInt32
const VK_QUERY_RESULT_64_BIT = (UInt32)(1)
const VK_QUERY_RESULT_WAIT_BIT = (UInt32)(2)
const VK_QUERY_RESULT_WITH_AVAILABILITY_BIT = (UInt32)(4)
const VK_QUERY_RESULT_PARTIAL_BIT = (UInt32)(8)
const VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkQueryResultFlagBits

typealias VkQueryResultFlags VkFlags

# begin enum VkBufferCreateFlagBits
typealias VkBufferCreateFlagBits UInt32
const VK_BUFFER_CREATE_SPARSE_BINDING_BIT = (UInt32)(1)
const VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT = (UInt32)(2)
const VK_BUFFER_CREATE_SPARSE_ALIASED_BIT = (UInt32)(4)
const VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkBufferCreateFlagBits

typealias VkBufferCreateFlags VkFlags

# begin enum VkBufferUsageFlagBits
typealias VkBufferUsageFlagBits UInt32
const VK_BUFFER_USAGE_TRANSFER_SRC_BIT = (UInt32)(1)
const VK_BUFFER_USAGE_TRANSFER_DST_BIT = (UInt32)(2)
const VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT = (UInt32)(4)
const VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT = (UInt32)(8)
const VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT = (UInt32)(16)
const VK_BUFFER_USAGE_STORAGE_BUFFER_BIT = (UInt32)(32)
const VK_BUFFER_USAGE_INDEX_BUFFER_BIT = (UInt32)(64)
const VK_BUFFER_USAGE_VERTEX_BUFFER_BIT = (UInt32)(128)
const VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT = (UInt32)(256)
const VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkBufferUsageFlagBits

typealias VkBufferUsageFlags VkFlags
typealias VkBufferViewCreateFlags VkFlags
typealias VkImageViewCreateFlags VkFlags
typealias VkShaderModuleCreateFlags VkFlags
typealias VkPipelineCacheCreateFlags VkFlags

# begin enum VkPipelineCreateFlagBits
typealias VkPipelineCreateFlagBits UInt32
const VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT = (UInt32)(1)
const VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT = (UInt32)(2)
const VK_PIPELINE_CREATE_DERIVATIVE_BIT = (UInt32)(4)
const VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkPipelineCreateFlagBits

typealias VkPipelineCreateFlags VkFlags
typealias VkPipelineShaderStageCreateFlags VkFlags

# begin enum VkShaderStageFlagBits
typealias VkShaderStageFlagBits UInt32
const VK_SHADER_STAGE_VERTEX_BIT = (UInt32)(1)
const VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = (UInt32)(2)
const VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = (UInt32)(4)
const VK_SHADER_STAGE_GEOMETRY_BIT = (UInt32)(8)
const VK_SHADER_STAGE_FRAGMENT_BIT = (UInt32)(16)
const VK_SHADER_STAGE_COMPUTE_BIT = (UInt32)(32)
const VK_SHADER_STAGE_ALL_GRAPHICS = (UInt32)(31)
const VK_SHADER_STAGE_ALL = (UInt32)(2147483647)
const VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkShaderStageFlagBits

typealias VkPipelineVertexInputStateCreateFlags VkFlags
typealias VkPipelineInputAssemblyStateCreateFlags VkFlags
typealias VkPipelineTessellationStateCreateFlags VkFlags
typealias VkPipelineViewportStateCreateFlags VkFlags
typealias VkPipelineRasterizationStateCreateFlags VkFlags

# begin enum VkCullModeFlagBits
typealias VkCullModeFlagBits UInt32
const VK_CULL_MODE_NONE = (UInt32)(0)
const VK_CULL_MODE_FRONT_BIT = (UInt32)(1)
const VK_CULL_MODE_BACK_BIT = (UInt32)(2)
const VK_CULL_MODE_FRONT_AND_BACK = (UInt32)(3)
const VK_CULL_MODE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCullModeFlagBits

typealias VkCullModeFlags VkFlags
typealias VkPipelineMultisampleStateCreateFlags VkFlags
typealias VkPipelineDepthStencilStateCreateFlags VkFlags
typealias VkPipelineColorBlendStateCreateFlags VkFlags

# begin enum VkColorComponentFlagBits
typealias VkColorComponentFlagBits UInt32
const VK_COLOR_COMPONENT_R_BIT = (UInt32)(1)
const VK_COLOR_COMPONENT_G_BIT = (UInt32)(2)
const VK_COLOR_COMPONENT_B_BIT = (UInt32)(4)
const VK_COLOR_COMPONENT_A_BIT = (UInt32)(8)
const VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkColorComponentFlagBits

typealias VkColorComponentFlags VkFlags
typealias VkPipelineDynamicStateCreateFlags VkFlags
typealias VkPipelineLayoutCreateFlags VkFlags
typealias VkShaderStageFlags VkFlags
typealias VkSamplerCreateFlags VkFlags
typealias VkDescriptorSetLayoutCreateFlags VkFlags

# begin enum VkDescriptorPoolCreateFlagBits
typealias VkDescriptorPoolCreateFlagBits UInt32
const VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT = (UInt32)(1)
const VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkDescriptorPoolCreateFlagBits

typealias VkDescriptorPoolCreateFlags VkFlags
typealias VkDescriptorPoolResetFlags VkFlags
typealias VkFramebufferCreateFlags VkFlags
typealias VkRenderPassCreateFlags VkFlags

# begin enum VkAttachmentDescriptionFlagBits
typealias VkAttachmentDescriptionFlagBits UInt32
const VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT = (UInt32)(1)
const VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkAttachmentDescriptionFlagBits

typealias VkAttachmentDescriptionFlags VkFlags
typealias VkSubpassDescriptionFlags VkFlags

# begin enum VkAccessFlagBits
typealias VkAccessFlagBits UInt32
const VK_ACCESS_INDIRECT_COMMAND_READ_BIT = (UInt32)(1)
const VK_ACCESS_INDEX_READ_BIT = (UInt32)(2)
const VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = (UInt32)(4)
const VK_ACCESS_UNIFORM_READ_BIT = (UInt32)(8)
const VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = (UInt32)(16)
const VK_ACCESS_SHADER_READ_BIT = (UInt32)(32)
const VK_ACCESS_SHADER_WRITE_BIT = (UInt32)(64)
const VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = (UInt32)(128)
const VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = (UInt32)(256)
const VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = (UInt32)(512)
const VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = (UInt32)(1024)
const VK_ACCESS_TRANSFER_READ_BIT = (UInt32)(2048)
const VK_ACCESS_TRANSFER_WRITE_BIT = (UInt32)(4096)
const VK_ACCESS_HOST_READ_BIT = (UInt32)(8192)
const VK_ACCESS_HOST_WRITE_BIT = (UInt32)(16384)
const VK_ACCESS_MEMORY_READ_BIT = (UInt32)(32768)
const VK_ACCESS_MEMORY_WRITE_BIT = (UInt32)(65536)
const VK_ACCESS_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkAccessFlagBits

typealias VkAccessFlags VkFlags

# begin enum VkDependencyFlagBits
typealias VkDependencyFlagBits UInt32
const VK_DEPENDENCY_BY_REGION_BIT = (UInt32)(1)
const VK_DEPENDENCY_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkDependencyFlagBits

typealias VkDependencyFlags VkFlags

# begin enum VkCommandPoolCreateFlagBits
typealias VkCommandPoolCreateFlagBits UInt32
const VK_COMMAND_POOL_CREATE_TRANSIENT_BIT = (UInt32)(1)
const VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT = (UInt32)(2)
const VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCommandPoolCreateFlagBits

typealias VkCommandPoolCreateFlags VkFlags

# begin enum VkCommandPoolResetFlagBits
typealias VkCommandPoolResetFlagBits UInt32
const VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT = (UInt32)(1)
const VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCommandPoolResetFlagBits

typealias VkCommandPoolResetFlags VkFlags

# begin enum VkCommandBufferUsageFlagBits
typealias VkCommandBufferUsageFlagBits UInt32
const VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT = (UInt32)(1)
const VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT = (UInt32)(2)
const VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT = (UInt32)(4)
const VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCommandBufferUsageFlagBits

typealias VkCommandBufferUsageFlags VkFlags

# begin enum VkQueryControlFlagBits
typealias VkQueryControlFlagBits UInt32
const VK_QUERY_CONTROL_PRECISE_BIT = (UInt32)(1)
const VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkQueryControlFlagBits

typealias VkQueryControlFlags VkFlags

# begin enum VkCommandBufferResetFlagBits
typealias VkCommandBufferResetFlagBits UInt32
const VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT = (UInt32)(1)
const VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkCommandBufferResetFlagBits

typealias VkCommandBufferResetFlags VkFlags

# begin enum VkStencilFaceFlagBits
typealias VkStencilFaceFlagBits UInt32
const VK_STENCIL_FACE_FRONT_BIT = (UInt32)(1)
const VK_STENCIL_FACE_BACK_BIT = (UInt32)(2)
const VK_STENCIL_FRONT_AND_BACK = (UInt32)(3)
const VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM = (UInt32)(2147483647)
# end enum VkStencilFaceFlagBits

typealias VkStencilFaceFlags VkFlags
typealias PFN_vkAllocationFunction Ptr{Void}
typealias PFN_vkReallocationFunction Ptr{Void}
typealias PFN_vkFreeFunction Ptr{Void}
typealias PFN_vkInternalAllocationNotification Ptr{Void}
typealias PFN_vkInternalFreeNotification Ptr{Void}
typealias PFN_vkVoidFunction Ptr{Void}

immutable VkApplicationInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    pApplicationName::Cstring
    applicationVersion::UInt32
    pEngineName::Cstring
    engineVersion::UInt32
    apiVersion::UInt32
end

immutable VkInstanceCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkInstanceCreateFlags
    pApplicationInfo::Ptr{VkApplicationInfo}
    enabledLayerCount::UInt32
    ppEnabledLayerNames::Ptr{Cstring}
    enabledExtensionCount::UInt32
    ppEnabledExtensionNames::Ptr{Cstring}
end

immutable VkAllocationCallbacks
    pUserData::Ptr{Void}
    pfnAllocation::PFN_vkAllocationFunction
    pfnReallocation::PFN_vkReallocationFunction
    pfnFree::PFN_vkFreeFunction
    pfnInternalAllocation::PFN_vkInternalAllocationNotification
    pfnInternalFree::PFN_vkInternalFreeNotification
end

immutable VkPhysicalDeviceFeatures
    robustBufferAccess::VkBool32
    fullDrawIndexUint32::VkBool32
    imageCubeArray::VkBool32
    independentBlend::VkBool32
    geometryShader::VkBool32
    tessellationShader::VkBool32
    sampleRateShading::VkBool32
    dualSrcBlend::VkBool32
    logicOp::VkBool32
    multiDrawIndirect::VkBool32
    drawIndirectFirstInstance::VkBool32
    depthClamp::VkBool32
    depthBiasClamp::VkBool32
    fillModeNonSolid::VkBool32
    depthBounds::VkBool32
    wideLines::VkBool32
    largePoints::VkBool32
    alphaToOne::VkBool32
    multiViewport::VkBool32
    samplerAnisotropy::VkBool32
    textureCompressionETC2::VkBool32
    textureCompressionASTC_LDR::VkBool32
    textureCompressionBC::VkBool32
    occlusionQueryPrecise::VkBool32
    pipelineStatisticsQuery::VkBool32
    vertexPipelineStoresAndAtomics::VkBool32
    fragmentStoresAndAtomics::VkBool32
    shaderTessellationAndGeometryPointSize::VkBool32
    shaderImageGatherExtended::VkBool32
    shaderStorageImageExtendedFormats::VkBool32
    shaderStorageImageMultisample::VkBool32
    shaderStorageImageReadWithoutFormat::VkBool32
    shaderStorageImageWriteWithoutFormat::VkBool32
    shaderUniformBufferArrayDynamicIndexing::VkBool32
    shaderSampledImageArrayDynamicIndexing::VkBool32
    shaderStorageBufferArrayDynamicIndexing::VkBool32
    shaderStorageImageArrayDynamicIndexing::VkBool32
    shaderClipDistance::VkBool32
    shaderCullDistance::VkBool32
    shaderFloat64::VkBool32
    shaderInt64::VkBool32
    shaderInt16::VkBool32
    shaderResourceResidency::VkBool32
    shaderResourceMinLod::VkBool32
    sparseBinding::VkBool32
    sparseResidencyBuffer::VkBool32
    sparseResidencyImage2D::VkBool32
    sparseResidencyImage3D::VkBool32
    sparseResidency2Samples::VkBool32
    sparseResidency4Samples::VkBool32
    sparseResidency8Samples::VkBool32
    sparseResidency16Samples::VkBool32
    sparseResidencyAliased::VkBool32
    variableMultisampleRate::VkBool32
    inheritedQueries::VkBool32
end

immutable VkFormatProperties
    linearTilingFeatures::VkFormatFeatureFlags
    optimalTilingFeatures::VkFormatFeatureFlags
    bufferFeatures::VkFormatFeatureFlags
end

immutable VkExtent3D
    width::UInt32
    height::UInt32
    depth::UInt32
end

immutable VkImageFormatProperties
    maxExtent::VkExtent3D
    maxMipLevels::UInt32
    maxArrayLayers::UInt32
    sampleCounts::VkSampleCountFlags
    maxResourceSize::VkDeviceSize
end

immutable VkPhysicalDeviceLimits
    maxImageDimension1D::UInt32
    maxImageDimension2D::UInt32
    maxImageDimension3D::UInt32
    maxImageDimensionCube::UInt32
    maxImageArrayLayers::UInt32
    maxTexelBufferElements::UInt32
    maxUniformBufferRange::UInt32
    maxStorageBufferRange::UInt32
    maxPushConstantsSize::UInt32
    maxMemoryAllocationCount::UInt32
    maxSamplerAllocationCount::UInt32
    bufferImageGranularity::VkDeviceSize
    sparseAddressSpaceSize::VkDeviceSize
    maxBoundDescriptorSets::UInt32
    maxPerStageDescriptorSamplers::UInt32
    maxPerStageDescriptorUniformBuffers::UInt32
    maxPerStageDescriptorStorageBuffers::UInt32
    maxPerStageDescriptorSampledImages::UInt32
    maxPerStageDescriptorStorageImages::UInt32
    maxPerStageDescriptorInputAttachments::UInt32
    maxPerStageResources::UInt32
    maxDescriptorSetSamplers::UInt32
    maxDescriptorSetUniformBuffers::UInt32
    maxDescriptorSetUniformBuffersDynamic::UInt32
    maxDescriptorSetStorageBuffers::UInt32
    maxDescriptorSetStorageBuffersDynamic::UInt32
    maxDescriptorSetSampledImages::UInt32
    maxDescriptorSetStorageImages::UInt32
    maxDescriptorSetInputAttachments::UInt32
    maxVertexInputAttributes::UInt32
    maxVertexInputBindings::UInt32
    maxVertexInputAttributeOffset::UInt32
    maxVertexInputBindingStride::UInt32
    maxVertexOutputComponents::UInt32
    maxTessellationGenerationLevel::UInt32
    maxTessellationPatchSize::UInt32
    maxTessellationControlPerVertexInputComponents::UInt32
    maxTessellationControlPerVertexOutputComponents::UInt32
    maxTessellationControlPerPatchOutputComponents::UInt32
    maxTessellationControlTotalOutputComponents::UInt32
    maxTessellationEvaluationInputComponents::UInt32
    maxTessellationEvaluationOutputComponents::UInt32
    maxGeometryShaderInvocations::UInt32
    maxGeometryInputComponents::UInt32
    maxGeometryOutputComponents::UInt32
    maxGeometryOutputVertices::UInt32
    maxGeometryTotalOutputComponents::UInt32
    maxFragmentInputComponents::UInt32
    maxFragmentOutputAttachments::UInt32
    maxFragmentDualSrcAttachments::UInt32
    maxFragmentCombinedOutputResources::UInt32
    maxComputeSharedMemorySize::UInt32
    maxComputeWorkGroupCount::NTuple{3,UInt32}
    maxComputeWorkGroupInvocations::UInt32
    maxComputeWorkGroupSize::NTuple{3,UInt32}
    subPixelPrecisionBits::UInt32
    subTexelPrecisionBits::UInt32
    mipmapPrecisionBits::UInt32
    maxDrawIndexedIndexValue::UInt32
    maxDrawIndirectCount::UInt32
    maxSamplerLodBias::Cfloat
    maxSamplerAnisotropy::Cfloat
    maxViewports::UInt32
    maxViewportDimensions::NTuple{2,UInt32}
    viewportBoundsRange::NTuple{2,Cfloat}
    viewportSubPixelBits::UInt32
    minMemoryMapAlignment::Csize_t
    minTexelBufferOffsetAlignment::VkDeviceSize
    minUniformBufferOffsetAlignment::VkDeviceSize
    minStorageBufferOffsetAlignment::VkDeviceSize
    minTexelOffset::Int32
    maxTexelOffset::UInt32
    minTexelGatherOffset::Int32
    maxTexelGatherOffset::UInt32
    minInterpolationOffset::Cfloat
    maxInterpolationOffset::Cfloat
    subPixelInterpolationOffsetBits::UInt32
    maxFramebufferWidth::UInt32
    maxFramebufferHeight::UInt32
    maxFramebufferLayers::UInt32
    framebufferColorSampleCounts::VkSampleCountFlags
    framebufferDepthSampleCounts::VkSampleCountFlags
    framebufferStencilSampleCounts::VkSampleCountFlags
    framebufferNoAttachmentsSampleCounts::VkSampleCountFlags
    maxColorAttachments::UInt32
    sampledImageColorSampleCounts::VkSampleCountFlags
    sampledImageIntegerSampleCounts::VkSampleCountFlags
    sampledImageDepthSampleCounts::VkSampleCountFlags
    sampledImageStencilSampleCounts::VkSampleCountFlags
    storageImageSampleCounts::VkSampleCountFlags
    maxSampleMaskWords::UInt32
    timestampComputeAndGraphics::VkBool32
    timestampPeriod::Cfloat
    maxClipDistances::UInt32
    maxCullDistances::UInt32
    maxCombinedClipAndCullDistances::UInt32
    discreteQueuePriorities::UInt32
    pointSizeRange::NTuple{2,Cfloat}
    lineWidthRange::NTuple{2,Cfloat}
    pointSizeGranularity::Cfloat
    lineWidthGranularity::Cfloat
    strictLines::VkBool32
    standardSampleLocations::VkBool32
    optimalBufferCopyOffsetAlignment::VkDeviceSize
    optimalBufferCopyRowPitchAlignment::VkDeviceSize
    nonCoherentAtomSize::VkDeviceSize
end

immutable VkPhysicalDeviceSparseProperties
    residencyStandard2DBlockShape::VkBool32
    residencyStandard2DMultisampleBlockShape::VkBool32
    residencyStandard3DBlockShape::VkBool32
    residencyAlignedMipSize::VkBool32
    residencyNonResidentStrict::VkBool32
end

immutable VkPhysicalDeviceProperties
    apiVersion::UInt32
    driverVersion::UInt32
    vendorID::UInt32
    deviceID::UInt32
    deviceType::VkPhysicalDeviceType
    deviceName::NTuple{256,UInt8}
    pipelineCacheUUID::NTuple{16,UInt8}
    limits::VkPhysicalDeviceLimits
    sparseProperties::VkPhysicalDeviceSparseProperties
end

immutable VkQueueFamilyProperties
    queueFlags::VkQueueFlags
    queueCount::UInt32
    timestampValidBits::UInt32
    minImageTransferGranularity::VkExtent3D
end

immutable VkMemoryType
    propertyFlags::VkMemoryPropertyFlags
    heapIndex::UInt32
end

immutable VkMemoryHeap
    size::VkDeviceSize
    flags::VkMemoryHeapFlags
end

immutable VkPhysicalDeviceMemoryProperties
    memoryTypeCount::UInt32
    memoryTypes::NTuple{32,VkMemoryType}
    memoryHeapCount::UInt32
    memoryHeaps::NTuple{16,VkMemoryHeap}
end

immutable VkDeviceQueueCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDeviceQueueCreateFlags
    queueFamilyIndex::UInt32
    queueCount::UInt32
    pQueuePriorities::Ptr{Cfloat}
end

immutable VkDeviceCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDeviceCreateFlags
    queueCreateInfoCount::UInt32
    pQueueCreateInfos::Ptr{VkDeviceQueueCreateInfo}
    enabledLayerCount::UInt32
    ppEnabledLayerNames::Ptr{Cstring}
    enabledExtensionCount::UInt32
    ppEnabledExtensionNames::Ptr{Cstring}
    pEnabledFeatures::Ptr{VkPhysicalDeviceFeatures}
end

immutable VkExtensionProperties
    extensionName::NTuple{256,UInt8}
    specVersion::UInt32
end

immutable VkLayerProperties
    layerName::NTuple{256,UInt8}
    specVersion::UInt32
    implementationVersion::UInt32
    description::NTuple{256,UInt8}
end

immutable VkSubmitInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    waitSemaphoreCount::UInt32
    pWaitSemaphores::Ptr{VkSemaphore}
    pWaitDstStageMask::Ptr{VkPipelineStageFlags}
    commandBufferCount::UInt32
    pCommandBuffers::Ptr{VkCommandBuffer}
    signalSemaphoreCount::UInt32
    pSignalSemaphores::Ptr{VkSemaphore}
end

immutable VkMemoryAllocateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    allocationSize::VkDeviceSize
    memoryTypeIndex::UInt32
end

immutable VkMappedMemoryRange
    sType::VkStructureType
    pNext::Ptr{Void}
    memory::VkDeviceMemory
    offset::VkDeviceSize
    size::VkDeviceSize
end

immutable VkMemoryRequirements
    size::VkDeviceSize
    alignment::VkDeviceSize
    memoryTypeBits::UInt32
end

immutable VkSparseImageFormatProperties
    aspectMask::VkImageAspectFlags
    imageGranularity::VkExtent3D
    flags::VkSparseImageFormatFlags
end

immutable VkSparseImageMemoryRequirements
    formatProperties::VkSparseImageFormatProperties
    imageMipTailFirstLod::UInt32
    imageMipTailSize::VkDeviceSize
    imageMipTailOffset::VkDeviceSize
    imageMipTailStride::VkDeviceSize
end

immutable VkSparseMemoryBind
    resourceOffset::VkDeviceSize
    size::VkDeviceSize
    memory::VkDeviceMemory
    memoryOffset::VkDeviceSize
    flags::VkSparseMemoryBindFlags
end

immutable VkSparseBufferMemoryBindInfo
    buffer::VkBuffer
    bindCount::UInt32
    pBinds::Ptr{VkSparseMemoryBind}
end

immutable VkSparseImageOpaqueMemoryBindInfo
    image::VkImage
    bindCount::UInt32
    pBinds::Ptr{VkSparseMemoryBind}
end

immutable VkImageSubresource
    aspectMask::VkImageAspectFlags
    mipLevel::UInt32
    arrayLayer::UInt32
end

immutable VkOffset3D
    x::Int32
    y::Int32
    z::Int32
end

immutable VkSparseImageMemoryBind
    subresource::VkImageSubresource
    offset::VkOffset3D
    extent::VkExtent3D
    memory::VkDeviceMemory
    memoryOffset::VkDeviceSize
    flags::VkSparseMemoryBindFlags
end

immutable VkSparseImageMemoryBindInfo
    image::VkImage
    bindCount::UInt32
    pBinds::Ptr{VkSparseImageMemoryBind}
end

immutable VkBindSparseInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    waitSemaphoreCount::UInt32
    pWaitSemaphores::Ptr{VkSemaphore}
    bufferBindCount::UInt32
    pBufferBinds::Ptr{VkSparseBufferMemoryBindInfo}
    imageOpaqueBindCount::UInt32
    pImageOpaqueBinds::Ptr{VkSparseImageOpaqueMemoryBindInfo}
    imageBindCount::UInt32
    pImageBinds::Ptr{VkSparseImageMemoryBindInfo}
    signalSemaphoreCount::UInt32
    pSignalSemaphores::Ptr{VkSemaphore}
end

immutable VkFenceCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkFenceCreateFlags
end

immutable VkSemaphoreCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkSemaphoreCreateFlags
end

immutable VkEventCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkEventCreateFlags
end

immutable VkQueryPoolCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkQueryPoolCreateFlags
    queryType::VkQueryType
    queryCount::UInt32
    pipelineStatistics::VkQueryPipelineStatisticFlags
end

immutable VkBufferCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkBufferCreateFlags
    size::VkDeviceSize
    usage::VkBufferUsageFlags
    sharingMode::VkSharingMode
    queueFamilyIndexCount::UInt32
    pQueueFamilyIndices::Ptr{UInt32}
end

immutable VkBufferViewCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkBufferViewCreateFlags
    buffer::VkBuffer
    format::VkFormat
    offset::VkDeviceSize
    range::VkDeviceSize
end

immutable VkImageCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkImageCreateFlags
    imageType::VkImageType
    format::VkFormat
    extent::VkExtent3D
    mipLevels::UInt32
    arrayLayers::UInt32
    samples::VkSampleCountFlagBits
    tiling::VkImageTiling
    usage::VkImageUsageFlags
    sharingMode::VkSharingMode
    queueFamilyIndexCount::UInt32
    pQueueFamilyIndices::Ptr{UInt32}
    initialLayout::VkImageLayout
end

immutable VkSubresourceLayout
    offset::VkDeviceSize
    size::VkDeviceSize
    rowPitch::VkDeviceSize
    arrayPitch::VkDeviceSize
    depthPitch::VkDeviceSize
end

immutable VkComponentMapping
    r::VkComponentSwizzle
    g::VkComponentSwizzle
    b::VkComponentSwizzle
    a::VkComponentSwizzle
end

immutable VkImageSubresourceRange
    aspectMask::VkImageAspectFlags
    baseMipLevel::UInt32
    levelCount::UInt32
    baseArrayLayer::UInt32
    layerCount::UInt32
end

immutable VkImageViewCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkImageViewCreateFlags
    image::VkImage
    viewType::VkImageViewType
    format::VkFormat
    components::VkComponentMapping
    subresourceRange::VkImageSubresourceRange
end

immutable VkShaderModuleCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkShaderModuleCreateFlags
    codeSize::Csize_t
    pCode::Ptr{UInt32}
end

immutable VkPipelineCacheCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineCacheCreateFlags
    initialDataSize::Csize_t
    pInitialData::Ptr{Void}
end

immutable VkSpecializationMapEntry
    constantID::UInt32
    offset::UInt32
    size::Csize_t
end

immutable VkSpecializationInfo
    mapEntryCount::UInt32
    pMapEntries::Ptr{VkSpecializationMapEntry}
    dataSize::Csize_t
    pData::Ptr{Void}
end

immutable VkPipelineShaderStageCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineShaderStageCreateFlags
    stage::VkShaderStageFlagBits
    _module::VkShaderModule
    pName::Cstring
    pSpecializationInfo::Ptr{VkSpecializationInfo}
end

immutable VkVertexInputBindingDescription
    binding::UInt32
    stride::UInt32
    inputRate::VkVertexInputRate
end

immutable VkVertexInputAttributeDescription
    location::UInt32
    binding::UInt32
    format::VkFormat
    offset::UInt32
end

immutable VkPipelineVertexInputStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineVertexInputStateCreateFlags
    vertexBindingDescriptionCount::UInt32
    pVertexBindingDescriptions::Ptr{VkVertexInputBindingDescription}
    vertexAttributeDescriptionCount::UInt32
    pVertexAttributeDescriptions::Ptr{VkVertexInputAttributeDescription}
end

immutable VkPipelineInputAssemblyStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineInputAssemblyStateCreateFlags
    topology::VkPrimitiveTopology
    primitiveRestartEnable::VkBool32
end

immutable VkPipelineTessellationStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineTessellationStateCreateFlags
    patchControlPoints::UInt32
end

immutable VkViewport
    x::Cfloat
    y::Cfloat
    width::Cfloat
    height::Cfloat
    minDepth::Cfloat
    maxDepth::Cfloat
end

immutable VkOffset2D
    x::Int32
    y::Int32
end

immutable VkExtent2D
    width::UInt32
    height::UInt32
end

immutable VkRect2D
    offset::VkOffset2D
    extent::VkExtent2D
end

immutable VkPipelineViewportStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineViewportStateCreateFlags
    viewportCount::UInt32
    pViewports::Ptr{VkViewport}
    scissorCount::UInt32
    pScissors::Ptr{VkRect2D}
end

immutable VkPipelineRasterizationStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineRasterizationStateCreateFlags
    depthClampEnable::VkBool32
    rasterizerDiscardEnable::VkBool32
    polygonMode::VkPolygonMode
    cullMode::VkCullModeFlags
    frontFace::VkFrontFace
    depthBiasEnable::VkBool32
    depthBiasConstantFactor::Cfloat
    depthBiasClamp::Cfloat
    depthBiasSlopeFactor::Cfloat
    lineWidth::Cfloat
end

immutable VkPipelineMultisampleStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineMultisampleStateCreateFlags
    rasterizationSamples::VkSampleCountFlagBits
    sampleShadingEnable::VkBool32
    minSampleShading::Cfloat
    pSampleMask::Ptr{VkSampleMask}
    alphaToCoverageEnable::VkBool32
    alphaToOneEnable::VkBool32
end

immutable VkStencilOpState
    failOp::VkStencilOp
    passOp::VkStencilOp
    depthFailOp::VkStencilOp
    compareOp::VkCompareOp
    compareMask::UInt32
    writeMask::UInt32
    reference::UInt32
end

immutable VkPipelineDepthStencilStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineDepthStencilStateCreateFlags
    depthTestEnable::VkBool32
    depthWriteEnable::VkBool32
    depthCompareOp::VkCompareOp
    depthBoundsTestEnable::VkBool32
    stencilTestEnable::VkBool32
    front::VkStencilOpState
    back::VkStencilOpState
    minDepthBounds::Cfloat
    maxDepthBounds::Cfloat
end

immutable VkPipelineColorBlendAttachmentState
    blendEnable::VkBool32
    srcColorBlendFactor::VkBlendFactor
    dstColorBlendFactor::VkBlendFactor
    colorBlendOp::VkBlendOp
    srcAlphaBlendFactor::VkBlendFactor
    dstAlphaBlendFactor::VkBlendFactor
    alphaBlendOp::VkBlendOp
    colorWriteMask::VkColorComponentFlags
end

immutable VkPipelineColorBlendStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineColorBlendStateCreateFlags
    logicOpEnable::VkBool32
    logicOp::VkLogicOp
    attachmentCount::UInt32
    pAttachments::Ptr{VkPipelineColorBlendAttachmentState}
    blendConstants::NTuple{4,Cfloat}
end

immutable VkPipelineDynamicStateCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineDynamicStateCreateFlags
    dynamicStateCount::UInt32
    pDynamicStates::Ptr{VkDynamicState}
end

immutable VkGraphicsPipelineCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineCreateFlags
    stageCount::UInt32
    pStages::Ptr{VkPipelineShaderStageCreateInfo}
    pVertexInputState::Ptr{VkPipelineVertexInputStateCreateInfo}
    pInputAssemblyState::Ptr{VkPipelineInputAssemblyStateCreateInfo}
    pTessellationState::Ptr{VkPipelineTessellationStateCreateInfo}
    pViewportState::Ptr{VkPipelineViewportStateCreateInfo}
    pRasterizationState::Ptr{VkPipelineRasterizationStateCreateInfo}
    pMultisampleState::Ptr{VkPipelineMultisampleStateCreateInfo}
    pDepthStencilState::Ptr{VkPipelineDepthStencilStateCreateInfo}
    pColorBlendState::Ptr{VkPipelineColorBlendStateCreateInfo}
    pDynamicState::Ptr{VkPipelineDynamicStateCreateInfo}
    layout::VkPipelineLayout
    renderPass::VkRenderPass
    subpass::UInt32
    basePipelineHandle::VkPipeline
    basePipelineIndex::Int32
end

immutable VkComputePipelineCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineCreateFlags
    stage::VkPipelineShaderStageCreateInfo
    layout::VkPipelineLayout
    basePipelineHandle::VkPipeline
    basePipelineIndex::Int32
end

immutable VkPushConstantRange
    stageFlags::VkShaderStageFlags
    offset::UInt32
    size::UInt32
end

immutable VkPipelineLayoutCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkPipelineLayoutCreateFlags
    setLayoutCount::UInt32
    pSetLayouts::Ptr{VkDescriptorSetLayout}
    pushConstantRangeCount::UInt32
    pPushConstantRanges::Ptr{VkPushConstantRange}
end

immutable VkSamplerCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkSamplerCreateFlags
    magFilter::VkFilter
    minFilter::VkFilter
    mipmapMode::VkSamplerMipmapMode
    addressModeU::VkSamplerAddressMode
    addressModeV::VkSamplerAddressMode
    addressModeW::VkSamplerAddressMode
    mipLodBias::Cfloat
    anisotropyEnable::VkBool32
    maxAnisotropy::Cfloat
    compareEnable::VkBool32
    compareOp::VkCompareOp
    minLod::Cfloat
    maxLod::Cfloat
    borderColor::VkBorderColor
    unnormalizedCoordinates::VkBool32
end

immutable VkDescriptorSetLayoutBinding
    binding::UInt32
    descriptorType::VkDescriptorType
    descriptorCount::UInt32
    stageFlags::VkShaderStageFlags
    pImmutableSamplers::Ptr{VkSampler}
end

immutable VkDescriptorSetLayoutCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDescriptorSetLayoutCreateFlags
    bindingCount::UInt32
    pBindings::Ptr{VkDescriptorSetLayoutBinding}
end

immutable VkDescriptorPoolSize
    _type::VkDescriptorType
    descriptorCount::UInt32
end

immutable VkDescriptorPoolCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDescriptorPoolCreateFlags
    maxSets::UInt32
    poolSizeCount::UInt32
    pPoolSizes::Ptr{VkDescriptorPoolSize}
end

immutable VkDescriptorSetAllocateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    descriptorPool::VkDescriptorPool
    descriptorSetCount::UInt32
    pSetLayouts::Ptr{VkDescriptorSetLayout}
end

immutable VkDescriptorImageInfo
    sampler::VkSampler
    imageView::VkImageView
    imageLayout::VkImageLayout
end

immutable VkDescriptorBufferInfo
    buffer::VkBuffer
    offset::VkDeviceSize
    range::VkDeviceSize
end

immutable VkWriteDescriptorSet
    sType::VkStructureType
    pNext::Ptr{Void}
    dstSet::VkDescriptorSet
    dstBinding::UInt32
    dstArrayElement::UInt32
    descriptorCount::UInt32
    descriptorType::VkDescriptorType
    pImageInfo::Ptr{VkDescriptorImageInfo}
    pBufferInfo::Ptr{VkDescriptorBufferInfo}
    pTexelBufferView::Ptr{VkBufferView}
end

immutable VkCopyDescriptorSet
    sType::VkStructureType
    pNext::Ptr{Void}
    srcSet::VkDescriptorSet
    srcBinding::UInt32
    srcArrayElement::UInt32
    dstSet::VkDescriptorSet
    dstBinding::UInt32
    dstArrayElement::UInt32
    descriptorCount::UInt32
end

immutable VkFramebufferCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkFramebufferCreateFlags
    renderPass::VkRenderPass
    attachmentCount::UInt32
    pAttachments::Ptr{VkImageView}
    width::UInt32
    height::UInt32
    layers::UInt32
end

immutable VkAttachmentDescription
    flags::VkAttachmentDescriptionFlags
    format::VkFormat
    samples::VkSampleCountFlagBits
    loadOp::VkAttachmentLoadOp
    storeOp::VkAttachmentStoreOp
    stencilLoadOp::VkAttachmentLoadOp
    stencilStoreOp::VkAttachmentStoreOp
    initialLayout::VkImageLayout
    finalLayout::VkImageLayout
end

immutable VkAttachmentReference
    attachment::UInt32
    layout::VkImageLayout
end

immutable VkSubpassDescription
    flags::VkSubpassDescriptionFlags
    pipelineBindPoint::VkPipelineBindPoint
    inputAttachmentCount::UInt32
    pInputAttachments::Ptr{VkAttachmentReference}
    colorAttachmentCount::UInt32
    pColorAttachments::Ptr{VkAttachmentReference}
    pResolveAttachments::Ptr{VkAttachmentReference}
    pDepthStencilAttachment::Ptr{VkAttachmentReference}
    preserveAttachmentCount::UInt32
    pPreserveAttachments::Ptr{UInt32}
end

immutable VkSubpassDependency
    srcSubpass::UInt32
    dstSubpass::UInt32
    srcStageMask::VkPipelineStageFlags
    dstStageMask::VkPipelineStageFlags
    srcAccessMask::VkAccessFlags
    dstAccessMask::VkAccessFlags
    dependencyFlags::VkDependencyFlags
end

immutable VkRenderPassCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkRenderPassCreateFlags
    attachmentCount::UInt32
    pAttachments::Ptr{VkAttachmentDescription}
    subpassCount::UInt32
    pSubpasses::Ptr{VkSubpassDescription}
    dependencyCount::UInt32
    pDependencies::Ptr{VkSubpassDependency}
end

immutable VkCommandPoolCreateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkCommandPoolCreateFlags
    queueFamilyIndex::UInt32
end

immutable VkCommandBufferAllocateInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    commandPool::VkCommandPool
    level::VkCommandBufferLevel
    commandBufferCount::UInt32
end

immutable VkCommandBufferInheritanceInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    renderPass::VkRenderPass
    subpass::UInt32
    framebuffer::VkFramebuffer
    occlusionQueryEnable::VkBool32
    queryFlags::VkQueryControlFlags
    pipelineStatistics::VkQueryPipelineStatisticFlags
end

immutable VkCommandBufferBeginInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkCommandBufferUsageFlags
    pInheritanceInfo::Ptr{VkCommandBufferInheritanceInfo}
end

immutable VkBufferCopy
    srcOffset::VkDeviceSize
    dstOffset::VkDeviceSize
    size::VkDeviceSize
end

immutable VkImageSubresourceLayers
    aspectMask::VkImageAspectFlags
    mipLevel::UInt32
    baseArrayLayer::UInt32
    layerCount::UInt32
end

immutable VkImageCopy
    srcSubresource::VkImageSubresourceLayers
    srcOffset::VkOffset3D
    dstSubresource::VkImageSubresourceLayers
    dstOffset::VkOffset3D
    extent::VkExtent3D
end

immutable VkImageBlit
    srcSubresource::VkImageSubresourceLayers
    srcOffsets::NTuple{2,VkOffset3D}
    dstSubresource::VkImageSubresourceLayers
    dstOffsets::NTuple{2,VkOffset3D}
end

immutable VkBufferImageCopy
    bufferOffset::VkDeviceSize
    bufferRowLength::UInt32
    bufferImageHeight::UInt32
    imageSubresource::VkImageSubresourceLayers
    imageOffset::VkOffset3D
    imageExtent::VkExtent3D
end

immutable VkClearColorValue
    _VkClearColorValue::NTuple{4,Cfloat}
end

immutable VkClearDepthStencilValue
    depth::Cfloat
    stencil::UInt32
end

immutable VkClearValue
    _VkClearValue::VkClearColorValue
end

immutable VkClearAttachment
    aspectMask::VkImageAspectFlags
    colorAttachment::UInt32
    clearValue::VkClearValue
end

immutable VkClearRect
    rect::VkRect2D
    baseArrayLayer::UInt32
    layerCount::UInt32
end

immutable VkImageResolve
    srcSubresource::VkImageSubresourceLayers
    srcOffset::VkOffset3D
    dstSubresource::VkImageSubresourceLayers
    dstOffset::VkOffset3D
    extent::VkExtent3D
end

immutable VkMemoryBarrier
    sType::VkStructureType
    pNext::Ptr{Void}
    srcAccessMask::VkAccessFlags
    dstAccessMask::VkAccessFlags
end

immutable VkBufferMemoryBarrier
    sType::VkStructureType
    pNext::Ptr{Void}
    srcAccessMask::VkAccessFlags
    dstAccessMask::VkAccessFlags
    srcQueueFamilyIndex::UInt32
    dstQueueFamilyIndex::UInt32
    buffer::VkBuffer
    offset::VkDeviceSize
    size::VkDeviceSize
end

immutable VkImageMemoryBarrier
    sType::VkStructureType
    pNext::Ptr{Void}
    srcAccessMask::VkAccessFlags
    dstAccessMask::VkAccessFlags
    oldLayout::VkImageLayout
    newLayout::VkImageLayout
    srcQueueFamilyIndex::UInt32
    dstQueueFamilyIndex::UInt32
    image::VkImage
    subresourceRange::VkImageSubresourceRange
end

immutable VkRenderPassBeginInfo
    sType::VkStructureType
    pNext::Ptr{Void}
    renderPass::VkRenderPass
    framebuffer::VkFramebuffer
    renderArea::VkRect2D
    clearValueCount::UInt32
    pClearValues::Ptr{VkClearValue}
end

immutable VkDispatchIndirectCommand
    x::UInt32
    y::UInt32
    z::UInt32
end

immutable VkDrawIndexedIndirectCommand
    indexCount::UInt32
    instanceCount::UInt32
    firstIndex::UInt32
    vertexOffset::Int32
    firstInstance::UInt32
end

immutable VkDrawIndirectCommand
    vertexCount::UInt32
    instanceCount::UInt32
    firstVertex::UInt32
    firstInstance::UInt32
end

typealias PFN_vkCreateInstance Ptr{Void}
typealias PFN_vkDestroyInstance Ptr{Void}
typealias PFN_vkEnumeratePhysicalDevices Ptr{Void}
typealias PFN_vkGetPhysicalDeviceFeatures Ptr{Void}
typealias PFN_vkGetPhysicalDeviceFormatProperties Ptr{Void}
typealias PFN_vkGetPhysicalDeviceImageFormatProperties Ptr{Void}
typealias PFN_vkGetPhysicalDeviceProperties Ptr{Void}
typealias PFN_vkGetPhysicalDeviceQueueFamilyProperties Ptr{Void}
typealias PFN_vkGetPhysicalDeviceMemoryProperties Ptr{Void}
typealias PFN_vkGetInstanceProcAddr Ptr{Void}
typealias PFN_vkGetDeviceProcAddr Ptr{Void}
typealias PFN_vkCreateDevice Ptr{Void}
typealias PFN_vkDestroyDevice Ptr{Void}
typealias PFN_vkEnumerateInstanceExtensionProperties Ptr{Void}
typealias PFN_vkEnumerateDeviceExtensionProperties Ptr{Void}
typealias PFN_vkEnumerateInstanceLayerProperties Ptr{Void}
typealias PFN_vkEnumerateDeviceLayerProperties Ptr{Void}
typealias PFN_vkGetDeviceQueue Ptr{Void}
typealias PFN_vkQueueSubmit Ptr{Void}
typealias PFN_vkQueueWaitIdle Ptr{Void}
typealias PFN_vkDeviceWaitIdle Ptr{Void}
typealias PFN_vkAllocateMemory Ptr{Void}
typealias PFN_vkFreeMemory Ptr{Void}
typealias PFN_vkMapMemory Ptr{Void}
typealias PFN_vkUnmapMemory Ptr{Void}
typealias PFN_vkFlushMappedMemoryRanges Ptr{Void}
typealias PFN_vkInvalidateMappedMemoryRanges Ptr{Void}
typealias PFN_vkGetDeviceMemoryCommitment Ptr{Void}
typealias PFN_vkBindBufferMemory Ptr{Void}
typealias PFN_vkBindImageMemory Ptr{Void}
typealias PFN_vkGetBufferMemoryRequirements Ptr{Void}
typealias PFN_vkGetImageMemoryRequirements Ptr{Void}
typealias PFN_vkGetImageSparseMemoryRequirements Ptr{Void}
typealias PFN_vkGetPhysicalDeviceSparseImageFormatProperties Ptr{Void}
typealias PFN_vkQueueBindSparse Ptr{Void}
typealias PFN_vkCreateFence Ptr{Void}
typealias PFN_vkDestroyFence Ptr{Void}
typealias PFN_vkResetFences Ptr{Void}
typealias PFN_vkGetFenceStatus Ptr{Void}
typealias PFN_vkWaitForFences Ptr{Void}
typealias PFN_vkCreateSemaphore Ptr{Void}
typealias PFN_vkDestroySemaphore Ptr{Void}
typealias PFN_vkCreateEvent Ptr{Void}
typealias PFN_vkDestroyEvent Ptr{Void}
typealias PFN_vkGetEventStatus Ptr{Void}
typealias PFN_vkSetEvent Ptr{Void}
typealias PFN_vkResetEvent Ptr{Void}
typealias PFN_vkCreateQueryPool Ptr{Void}
typealias PFN_vkDestroyQueryPool Ptr{Void}
typealias PFN_vkGetQueryPoolResults Ptr{Void}
typealias PFN_vkCreateBuffer Ptr{Void}
typealias PFN_vkDestroyBuffer Ptr{Void}
typealias PFN_vkCreateBufferView Ptr{Void}
typealias PFN_vkDestroyBufferView Ptr{Void}
typealias PFN_vkCreateImage Ptr{Void}
typealias PFN_vkDestroyImage Ptr{Void}
typealias PFN_vkGetImageSubresourceLayout Ptr{Void}
typealias PFN_vkCreateImageView Ptr{Void}
typealias PFN_vkDestroyImageView Ptr{Void}
typealias PFN_vkCreateShaderModule Ptr{Void}
typealias PFN_vkDestroyShaderModule Ptr{Void}
typealias PFN_vkCreatePipelineCache Ptr{Void}
typealias PFN_vkDestroyPipelineCache Ptr{Void}
typealias PFN_vkGetPipelineCacheData Ptr{Void}
typealias PFN_vkMergePipelineCaches Ptr{Void}
typealias PFN_vkCreateGraphicsPipelines Ptr{Void}
typealias PFN_vkCreateComputePipelines Ptr{Void}
typealias PFN_vkDestroyPipeline Ptr{Void}
typealias PFN_vkCreatePipelineLayout Ptr{Void}
typealias PFN_vkDestroyPipelineLayout Ptr{Void}
typealias PFN_vkCreateSampler Ptr{Void}
typealias PFN_vkDestroySampler Ptr{Void}
typealias PFN_vkCreateDescriptorSetLayout Ptr{Void}
typealias PFN_vkDestroyDescriptorSetLayout Ptr{Void}
typealias PFN_vkCreateDescriptorPool Ptr{Void}
typealias PFN_vkDestroyDescriptorPool Ptr{Void}
typealias PFN_vkResetDescriptorPool Ptr{Void}
typealias PFN_vkAllocateDescriptorSets Ptr{Void}
typealias PFN_vkFreeDescriptorSets Ptr{Void}
typealias PFN_vkUpdateDescriptorSets Ptr{Void}
typealias PFN_vkCreateFramebuffer Ptr{Void}
typealias PFN_vkDestroyFramebuffer Ptr{Void}
typealias PFN_vkCreateRenderPass Ptr{Void}
typealias PFN_vkDestroyRenderPass Ptr{Void}
typealias PFN_vkGetRenderAreaGranularity Ptr{Void}
typealias PFN_vkCreateCommandPool Ptr{Void}
typealias PFN_vkDestroyCommandPool Ptr{Void}
typealias PFN_vkResetCommandPool Ptr{Void}
typealias PFN_vkAllocateCommandBuffers Ptr{Void}
typealias PFN_vkFreeCommandBuffers Ptr{Void}
typealias PFN_vkBeginCommandBuffer Ptr{Void}
typealias PFN_vkEndCommandBuffer Ptr{Void}
typealias PFN_vkResetCommandBuffer Ptr{Void}
typealias PFN_vkCmdBindPipeline Ptr{Void}
typealias PFN_vkCmdSetViewport Ptr{Void}
typealias PFN_vkCmdSetScissor Ptr{Void}
typealias PFN_vkCmdSetLineWidth Ptr{Void}
typealias PFN_vkCmdSetDepthBias Ptr{Void}
typealias PFN_vkCmdSetBlendConstants Ptr{Void}
typealias PFN_vkCmdSetDepthBounds Ptr{Void}
typealias PFN_vkCmdSetStencilCompareMask Ptr{Void}
typealias PFN_vkCmdSetStencilWriteMask Ptr{Void}
typealias PFN_vkCmdSetStencilReference Ptr{Void}
typealias PFN_vkCmdBindDescriptorSets Ptr{Void}
typealias PFN_vkCmdBindIndexBuffer Ptr{Void}
typealias PFN_vkCmdBindVertexBuffers Ptr{Void}
typealias PFN_vkCmdDraw Ptr{Void}
typealias PFN_vkCmdDrawIndexed Ptr{Void}
typealias PFN_vkCmdDrawIndirect Ptr{Void}
typealias PFN_vkCmdDrawIndexedIndirect Ptr{Void}
typealias PFN_vkCmdDispatch Ptr{Void}
typealias PFN_vkCmdDispatchIndirect Ptr{Void}
typealias PFN_vkCmdCopyBuffer Ptr{Void}
typealias PFN_vkCmdCopyImage Ptr{Void}
typealias PFN_vkCmdBlitImage Ptr{Void}
typealias PFN_vkCmdCopyBufferToImage Ptr{Void}
typealias PFN_vkCmdCopyImageToBuffer Ptr{Void}
typealias PFN_vkCmdUpdateBuffer Ptr{Void}
typealias PFN_vkCmdFillBuffer Ptr{Void}
typealias PFN_vkCmdClearColorImage Ptr{Void}
typealias PFN_vkCmdClearDepthStencilImage Ptr{Void}
typealias PFN_vkCmdClearAttachments Ptr{Void}
typealias PFN_vkCmdResolveImage Ptr{Void}
typealias PFN_vkCmdSetEvent Ptr{Void}
typealias PFN_vkCmdResetEvent Ptr{Void}
typealias PFN_vkCmdWaitEvents Ptr{Void}
typealias PFN_vkCmdPipelineBarrier Ptr{Void}
typealias PFN_vkCmdBeginQuery Ptr{Void}
typealias PFN_vkCmdEndQuery Ptr{Void}
typealias PFN_vkCmdResetQueryPool Ptr{Void}
typealias PFN_vkCmdWriteTimestamp Ptr{Void}
typealias PFN_vkCmdCopyQueryPoolResults Ptr{Void}
typealias PFN_vkCmdPushConstants Ptr{Void}
typealias PFN_vkCmdBeginRenderPass Ptr{Void}
typealias PFN_vkCmdNextSubpass Ptr{Void}
typealias PFN_vkCmdEndRenderPass Ptr{Void}
typealias PFN_vkCmdExecuteCommands Ptr{Void}
typealias VkSurfaceKHR_T Void
typealias VkSurfaceKHR Ptr{VkSurfaceKHR_T}

# begin enum VkColorSpaceKHR
typealias VkColorSpaceKHR UInt32
const VK_COLORSPACE_SRGB_NONLINEAR_KHR = (UInt32)(0)
const VK_COLOR_SPACE_BEGIN_RANGE_KHR = (UInt32)(0)
const VK_COLOR_SPACE_END_RANGE_KHR = (UInt32)(0)
const VK_COLOR_SPACE_RANGE_SIZE_KHR = (UInt32)(1)
const VK_COLOR_SPACE_MAX_ENUM_KHR = (UInt32)(2147483647)
# end enum VkColorSpaceKHR

# begin enum VkPresentModeKHR
typealias VkPresentModeKHR UInt32
const VK_PRESENT_MODE_IMMEDIATE_KHR = (UInt32)(0)
const VK_PRESENT_MODE_MAILBOX_KHR = (UInt32)(1)
const VK_PRESENT_MODE_FIFO_KHR = (UInt32)(2)
const VK_PRESENT_MODE_FIFO_RELAXED_KHR = (UInt32)(3)
const VK_PRESENT_MODE_BEGIN_RANGE_KHR = (UInt32)(0)
const VK_PRESENT_MODE_END_RANGE_KHR = (UInt32)(3)
const VK_PRESENT_MODE_RANGE_SIZE_KHR = (UInt32)(4)
const VK_PRESENT_MODE_MAX_ENUM_KHR = (UInt32)(2147483647)
# end enum VkPresentModeKHR

# begin enum VkSurfaceTransformFlagBitsKHR
typealias VkSurfaceTransformFlagBitsKHR UInt32
const VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR = (UInt32)(1)
const VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR = (UInt32)(2)
const VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR = (UInt32)(4)
const VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR = (UInt32)(8)
const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR = (UInt32)(16)
const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = (UInt32)(32)
const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = (UInt32)(64)
const VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = (UInt32)(128)
const VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR = (UInt32)(256)
const VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR = (UInt32)(2147483647)
# end enum VkSurfaceTransformFlagBitsKHR

typealias VkSurfaceTransformFlagsKHR VkFlags

# begin enum VkCompositeAlphaFlagBitsKHR
typealias VkCompositeAlphaFlagBitsKHR UInt32
const VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR = (UInt32)(1)
const VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR = (UInt32)(2)
const VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR = (UInt32)(4)
const VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR = (UInt32)(8)
const VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = (UInt32)(2147483647)
# end enum VkCompositeAlphaFlagBitsKHR

typealias VkCompositeAlphaFlagsKHR VkFlags

immutable VkSurfaceCapabilitiesKHR
    minImageCount::UInt32
    maxImageCount::UInt32
    currentExtent::VkExtent2D
    minImageExtent::VkExtent2D
    maxImageExtent::VkExtent2D
    maxImageArrayLayers::UInt32
    supportedTransforms::VkSurfaceTransformFlagsKHR
    currentTransform::VkSurfaceTransformFlagBitsKHR
    supportedCompositeAlpha::VkCompositeAlphaFlagsKHR
    supportedUsageFlags::VkImageUsageFlags
end

immutable VkSurfaceFormatKHR
    format::VkFormat
    colorSpace::VkColorSpaceKHR
end

typealias PFN_vkDestroySurfaceKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceSurfaceSupportKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceSurfaceFormatsKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceSurfacePresentModesKHR Ptr{Void}
typealias VkSwapchainKHR_T Void
typealias VkSwapchainKHR Ptr{VkSwapchainKHR_T}
typealias VkSwapchainCreateFlagsKHR VkFlags

immutable VkSwapchainCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkSwapchainCreateFlagsKHR
    surface::VkSurfaceKHR
    minImageCount::UInt32
    imageFormat::VkFormat
    imageColorSpace::VkColorSpaceKHR
    imageExtent::VkExtent2D
    imageArrayLayers::UInt32
    imageUsage::VkImageUsageFlags
    imageSharingMode::VkSharingMode
    queueFamilyIndexCount::UInt32
    pQueueFamilyIndices::Ptr{UInt32}
    preTransform::VkSurfaceTransformFlagBitsKHR
    compositeAlpha::VkCompositeAlphaFlagBitsKHR
    presentMode::VkPresentModeKHR
    clipped::VkBool32
    oldSwapchain::VkSwapchainKHR
end

immutable VkPresentInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    waitSemaphoreCount::UInt32
    pWaitSemaphores::Ptr{VkSemaphore}
    swapchainCount::UInt32
    pSwapchains::Ptr{VkSwapchainKHR}
    pImageIndices::Ptr{UInt32}
    pResults::Ptr{VkResult}
end

typealias PFN_vkCreateSwapchainKHR Ptr{Void}
typealias PFN_vkDestroySwapchainKHR Ptr{Void}
typealias PFN_vkGetSwapchainImagesKHR Ptr{Void}
typealias PFN_vkAcquireNextImageKHR Ptr{Void}
typealias PFN_vkQueuePresentKHR Ptr{Void}
typealias VkDisplayKHR_T Void
typealias VkDisplayKHR Ptr{VkDisplayKHR_T}
typealias VkDisplayModeKHR_T Void
typealias VkDisplayModeKHR Ptr{VkDisplayModeKHR_T}

# begin enum VkDisplayPlaneAlphaFlagBitsKHR
typealias VkDisplayPlaneAlphaFlagBitsKHR UInt32
const VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR = (UInt32)(1)
const VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR = (UInt32)(2)
const VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR = (UInt32)(4)
const VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR = (UInt32)(8)
const VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR = (UInt32)(2147483647)
# end enum VkDisplayPlaneAlphaFlagBitsKHR

typealias VkDisplayPlaneAlphaFlagsKHR VkFlags
typealias VkDisplayModeCreateFlagsKHR VkFlags
typealias VkDisplaySurfaceCreateFlagsKHR VkFlags

immutable VkDisplayPropertiesKHR
    display::VkDisplayKHR
    displayName::Cstring
    physicalDimensions::VkExtent2D
    physicalResolution::VkExtent2D
    supportedTransforms::VkSurfaceTransformFlagsKHR
    planeReorderPossible::VkBool32
    persistentContent::VkBool32
end

immutable VkDisplayModeParametersKHR
    visibleRegion::VkExtent2D
    refreshRate::UInt32
end

immutable VkDisplayModePropertiesKHR
    displayMode::VkDisplayModeKHR
    parameters::VkDisplayModeParametersKHR
end

immutable VkDisplayModeCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDisplayModeCreateFlagsKHR
    parameters::VkDisplayModeParametersKHR
end

immutable VkDisplayPlaneCapabilitiesKHR
    supportedAlpha::VkDisplayPlaneAlphaFlagsKHR
    minSrcPosition::VkOffset2D
    maxSrcPosition::VkOffset2D
    minSrcExtent::VkExtent2D
    maxSrcExtent::VkExtent2D
    minDstPosition::VkOffset2D
    maxDstPosition::VkOffset2D
    minDstExtent::VkExtent2D
    maxDstExtent::VkExtent2D
end

immutable VkDisplayPlanePropertiesKHR
    currentDisplay::VkDisplayKHR
    currentStackIndex::UInt32
end

immutable VkDisplaySurfaceCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDisplaySurfaceCreateFlagsKHR
    displayMode::VkDisplayModeKHR
    planeIndex::UInt32
    planeStackIndex::UInt32
    transform::VkSurfaceTransformFlagBitsKHR
    globalAlpha::Cfloat
    alphaMode::VkDisplayPlaneAlphaFlagBitsKHR
    imageExtent::VkExtent2D
end

typealias PFN_vkGetPhysicalDeviceDisplayPropertiesKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR Ptr{Void}
typealias PFN_vkGetDisplayPlaneSupportedDisplaysKHR Ptr{Void}
typealias PFN_vkGetDisplayModePropertiesKHR Ptr{Void}
typealias PFN_vkCreateDisplayModeKHR Ptr{Void}
typealias PFN_vkGetDisplayPlaneCapabilitiesKHR Ptr{Void}
typealias PFN_vkCreateDisplayPlaneSurfaceKHR Ptr{Void}

immutable VkDisplayPresentInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    srcRect::VkRect2D
    dstRect::VkRect2D
    persistent::VkBool32
end

typealias PFN_vkCreateSharedSwapchainsKHR Ptr{Void}
typealias VkXcbSurfaceCreateFlagsKHR VkFlags

immutable VkXcbSurfaceCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkXcbSurfaceCreateFlagsKHR
    connection::Ptr{xcb_connection_t}
    window::xcb_window_t
end

typealias PFN_vkCreateXcbSurfaceKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR Ptr{Void}
typealias VkWaylandSurfaceCreateFlagsKHR VkFlags

immutable VkWaylandSurfaceCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkWaylandSurfaceCreateFlagsKHR
    display::Ptr{wl_display}
    surface::Ptr{wl_surface}
end

typealias PFN_vkCreateWaylandSurfaceKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR Ptr{Void}
typealias VkMirSurfaceCreateFlagsKHR VkFlags

immutable VkMirSurfaceCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkMirSurfaceCreateFlagsKHR
    connection::Ptr{Cint}
    mirSurface::Ptr{Cint}
end

typealias PFN_vkCreateMirSurfaceKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceMirPresentationSupportKHR Ptr{Void}
typealias VkWin32SurfaceCreateFlagsKHR VkFlags

immutable VkWin32SurfaceCreateInfoKHR
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkWin32SurfaceCreateFlagsKHR
    hinstance::Cint
    hwnd::Cint
end

typealias PFN_vkCreateWin32SurfaceKHR Ptr{Void}
typealias PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR Ptr{Void}
typealias VkDebugReportCallbackEXT_T Void
typealias VkDebugReportCallbackEXT Ptr{VkDebugReportCallbackEXT_T}

# begin enum VkDebugReportObjectTypeEXT
typealias VkDebugReportObjectTypeEXT UInt32
const VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT = (UInt32)(0)
const VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT = (UInt32)(1)
const VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT = (UInt32)(2)
const VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT = (UInt32)(3)
const VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT = (UInt32)(4)
const VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT = (UInt32)(5)
const VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT = (UInt32)(6)
const VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT = (UInt32)(7)
const VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT = (UInt32)(8)
const VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT = (UInt32)(9)
const VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT = (UInt32)(10)
const VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT = (UInt32)(11)
const VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT = (UInt32)(12)
const VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT = (UInt32)(13)
const VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT = (UInt32)(14)
const VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT = (UInt32)(15)
const VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT = (UInt32)(16)
const VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT = (UInt32)(17)
const VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT = (UInt32)(18)
const VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT = (UInt32)(19)
const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT = (UInt32)(20)
const VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT = (UInt32)(21)
const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT = (UInt32)(22)
const VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT = (UInt32)(23)
const VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT = (UInt32)(24)
const VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT = (UInt32)(25)
const VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT = (UInt32)(26)
const VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT = (UInt32)(27)
const VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT = (UInt32)(28)
const VK_DEBUG_REPORT_OBJECT_TYPE_BEGIN_RANGE_EXT = (UInt32)(0)
const VK_DEBUG_REPORT_OBJECT_TYPE_END_RANGE_EXT = (UInt32)(28)
const VK_DEBUG_REPORT_OBJECT_TYPE_RANGE_SIZE_EXT = (UInt32)(29)
const VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT = (UInt32)(2147483647)
# end enum VkDebugReportObjectTypeEXT

# begin enum VkDebugReportErrorEXT
typealias VkDebugReportErrorEXT UInt32
const VK_DEBUG_REPORT_ERROR_NONE_EXT = (UInt32)(0)
const VK_DEBUG_REPORT_ERROR_CALLBACK_REF_EXT = (UInt32)(1)
const VK_DEBUG_REPORT_ERROR_BEGIN_RANGE_EXT = (UInt32)(0)
const VK_DEBUG_REPORT_ERROR_END_RANGE_EXT = (UInt32)(1)
const VK_DEBUG_REPORT_ERROR_RANGE_SIZE_EXT = (UInt32)(2)
const VK_DEBUG_REPORT_ERROR_MAX_ENUM_EXT = (UInt32)(2147483647)
# end enum VkDebugReportErrorEXT

# begin enum VkDebugReportFlagBitsEXT
typealias VkDebugReportFlagBitsEXT UInt32
const VK_DEBUG_REPORT_INFORMATION_BIT_EXT = (UInt32)(1)
const VK_DEBUG_REPORT_WARNING_BIT_EXT = (UInt32)(2)
const VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT = (UInt32)(4)
const VK_DEBUG_REPORT_ERROR_BIT_EXT = (UInt32)(8)
const VK_DEBUG_REPORT_DEBUG_BIT_EXT = (UInt32)(16)
const VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT = (UInt32)(2147483647)
# end enum VkDebugReportFlagBitsEXT

typealias VkDebugReportFlagsEXT VkFlags
typealias PFN_vkDebugReportCallbackEXT Ptr{Void}

immutable VkDebugReportCallbackCreateInfoEXT
    sType::VkStructureType
    pNext::Ptr{Void}
    flags::VkDebugReportFlagsEXT
    pfnCallback::PFN_vkDebugReportCallbackEXT
    pUserData::Ptr{Void}
end

typealias PFN_vkCreateDebugReportCallbackEXT Ptr{Void}
typealias PFN_vkDestroyDebugReportCallbackEXT Ptr{Void}
typealias PFN_vkDebugReportMessageEXT Ptr{Void}
