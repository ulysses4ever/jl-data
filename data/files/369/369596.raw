##First Step with Julia Tutorial Kaggle
##Author : Preeti 
##Dated : 24 Aug 2015
##Version 1.0

Pkg.add("Images")
Pkg.add("DataFrames")
Pkg.add("DecisionTree")
using DecisionTree
using Images
using DataFrames


##function read_data()
function read_data(typeData, labelsInfo, imageSize, path)
	
	#Initialise x matrix
	x=zeros(size(labelsInfo,1), imageSize)
	for (index, idImage) in enumerate(labelsInfo["ID"])
		#ReadImageFile
		nameFile = "$(path)/$(typeOfData)Resized/$(idImage).Bmp"
		img = imread(nameFile)
		
		#Convert the values to float
		temp = float32sc(img)
		
		#Convert RGB to Gray Scale
		if(ndims(temp) == 3)
			temp = mean(temp.data,1)
		end
		
		#transforming the matrix into single vector array
		x[i,:] = reshape(temp,1,imageSize)
	end
	return x
end

####Loading training and testing data############################################
imageSize = 400			# 20x20 pixel

path = "/home/preeti/kaggle/Julia"	#location




#reading Info about training
labelsInfoTrain = readtable("$(path)/trainLabels.csv")

#Read training matrix
xTrain = read_data("train", labelsInfoTrain, imageSize, path)

#Read information about test data ( IDs ).
labelsInfoTest = readtable("$(path)/sampleSubmission.csv")

#Read test matrix
xTest = read_data("test", labelsInfoTest, imageSize, path)

## mapping the class to an integer value
ytrain = map(x-> x[1], labelsInfoTrain["Class	"])
ytrain = int(ytrain)


#Train random forest with
#20 for number of features chosen at each random split,
#50 for number of trees,
#and 1.0 for ratio of subsampling.
model = build_forest(yTrain, xTrain, 20, 50, 1.0)
#Get predictions for test data
predTest = apply_forest(model, xTest)
#Convert integer predictions to character
labelsInfoTest["Class"] = char(predTest)
#Save predictions
writetable("$(path)/juliaSubmission.csv", labelsInfoTest, separator=',', header=true)
