
# a simple spiking network
type SSNetwork

  t::Integer  # the number of steps that have been taken
  dt::Float64 # the time step of the network simulation

  state::Array       # the one dimensional real-valued state of each neuron
  spike_times:Array  # an array of the most recent spike times for each neuron
  W::SparseMatrixCSC # a sparse matrix of network connection weights

  function SSNetwork(num_neurons, dt=1e-4, spike_history_length=10)
    this = new()

    this.t = 0
    this.dt = dt

    this.state = zeros(num_neurons)

    this.spike_times = zeros(num_neurons, spike_history_length)

    this.W = sparse([], [], [], num_neurons, num_neurons)

    return this
  end
end

# step the network through time with
function step(net)

  # compute the EPSPs
  epsps = synapse_function(net.t, net.spike_times, 0.010)



end

# computes an exponential PSP at time t resulting from input spikes at spike_times
function synapse_function(t, spike_times, time_const)
  return exp(-(t - spike_times) / time_const)
end


