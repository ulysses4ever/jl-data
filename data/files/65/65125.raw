using Graphs: simple_adjlist, add_edge!

export sp2adj, sp2tree

"convert a sparse matrix A to an adjacency graph G(A)"
function sp2adj(A::SparseMatrixCSC)
    n = A.n
    g = simple_adjlist(n, is_directed = false)
    for j = 1:n
        for k = A.colptr[j]:A.colptr[j+1]-1
            i = A.rowval[k]
            if i > j
                add_edge!(g,i,j)
            end
        end
    end
    g                   
end

"convert a sparse matrix A to an elimination tree T(A)"
function sp2tree(A::SparseMatrixCSC)
    n = A.n
    parent = etree(A)
    g = simple_adjlist(n)
    for j = 1:n
        if parent[j] != 0
            add_edge!(g, parent[j], j)
        end
    end
    g
end
