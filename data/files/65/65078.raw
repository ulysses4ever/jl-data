export example1, example2, example3, example4, example5, eggraph

function example1(n::Int)
    A = speye(n)
    A[n,1:end-1] = 0.2
    A[1:end-1, 5] = 0.2
    A
end
example1() = example1(8)

function example2()
    A = speye(9)*10
    I_up = [1,3,2,3,1,4,1,4,2,5,7,4]
    J_up = [4,4,5,5,6,6,7,7,8,8,8,9]
    I = cat(1, I_up, J_up)
    J = cat(1, J_up, I_up)
    V = ones(length(I))
    return A + sparse(I, J, V, 9, 9)
end

# from the paper 
#"The Multifrontal Method for Sparse Matrix Solution: Theory and Practice"
# by Joseph W. H. Liu
function example3()
    A = speye(9)*10
    I_up = [2,3,2,5,1,1,3,4,5,7,1,4,6,7]
    J_up = [4,5,6,6,7,8,8,8,8,8,9,9,9,9]
    I = cat(1, I_up, J_up)
    J = cat(1, J_up, I_up)
    V = ones(length(I))
    return A + sparse(I, J, V, 9, 9)
end

# postordered sparse matrix of example3
function example4()
    A = speye(9)*10
    I_up = [1,3,5,3,6,1,2,4,5,6,1,2,4,7]
    J_up = [2,4,6,7,7,8,8,8,8,8,9,9,9,9]
    I = cat(1, I_up, J_up)
    J = cat(1, J_up, I_up)
    V = ones(length(I))
    return A + sparse(I, J, V, 9, 9)
end

function eggraph()
    g = simple_adjlist(9)
    add_edge!(g, 4, 2)
    add_edge!(g, 5, 3)
    add_edge!(g, 6, 4)
    add_edge!(g, 6, 5)
    add_edge!(g, 7, 6)
    add_edge!(g, 7, 1)
    add_edge!(g, 8, 7)
    add_edge!(g, 9, 8)
    g
end

function example5(factor::Bool=false)
    A = speye(10)*10
    I_up = [1, 2, 1 , 2,  3, 4, 4, 5, 5, 6, 6, 8, 8]
    J_up = [3, 5, 8, 10, 7, 9, 10, 9, 10, 7, 8, 9, 10]
    if factor
        append!(I_up, [3,7,9])
        append!(J_up, [8, 8, 10])
    end
    I = cat(1, I_up, J_up)
    J = cat(1, J_up, I_up)
    V = ones(length(I))
    return A + sparse(I, J, V, 10, 10)    
end
