#extract_spectrograms.jl
#This script takes audio recordings and dumps the corresponding spectrograms
#into specpath, defined in the config file.
#author: Timothy Evans
#date: 30/07/15

importall signalprocessing, config
using Images, Winston

# Define all relative paths from config.jl. Changes should only be made
# to config.jl
if path_rel
  projdir = pwd()[1:end-3]; #remove src directory
  labelledpath = string(projdir,labelleddir)
  specpath = string(projdir,specdir)
else
  labelledpath = labelleddir
  specpath = specdir
end

for spec in  readdir(labelledpath)

  #load the images and construct the feature vector for this image pair.
  imgmask = imread(string(labelledpath,spec))
  img = imread(string(specpath,spec))
  sepmask = separate(imgmask).data; #separate layers in order to get layers
  if (colorspace(imgmask) == "BGRA")
    (pixels,freq,boxmu,boxvar,label) = imgfeature(img, sepmask)
  else
    cs = colorspace(img)
    #if this error is thrown consider adding elseif conditions for other
    # potential colorspaces
    error("Currently extract_features.jl only considers images with colorspace
    BRGA: received image of type $cs.")
  end

  if isdefined(:featuredata)
    vcat(featuredata,hcat(pixels,freq,boxmu,boxvar))
    vcat(labeldata,label)
  else
    global featuredata = hcat(pixels,freq,boxmu,boxvar);
    global labeldata = label;
  end
end

#feature normalise the data
(X,mu,sigma) = featurenormalise(featuredata);

# THIS NEEDS TO BE REMOVED! ONLY FOR TESTING PURPOSES
# ============================================================================
ind = randperm(length(labeldata))[1:1000];
X = X[ind,:];
labeldata = labeldata[ind]
# ============================================================================

writecsv(datafile,hcat(X,labeldata))
writecsv("musigma.csv",vcat(mu,sigma))
