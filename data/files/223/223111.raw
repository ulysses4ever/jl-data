###################################################
##               3. Control Flow                 ##
###################################################

# Let's make a variable
some_var = 5

# Here is an if statement. Indentation is not meaningful in Julia
# But please follow it to maintain readability of code
if some_var > 10
    println("some_var is totally bigger than 10.")
elseif some_var < 10   # This elseif clause if optional.
    println("some_var is smaller than 10.")
else
    Println("some_var is indeed 10.")
end
# => prints "some var is smaler than 10"

# For loops iterate over iterables.
# Interable types include Range, Array, Set, Dict and AbstractString.
for animal=["dog", "cat", "mouse"]
    println("$animal is a mammal")
    # You can use $ to interpolate variables or expression into strings
end
# prints : 
#    dog is a mammal
#    cat is a mammal
#    mouse is a mammal

# You can use 'in' instead of '='
for animal in ["dog", "cat", "mouse"]
    println("$animal is a mammal")
end
# prints : 
#    dog is a mammal
#    cat is a mammal
#    mouse is a mammal

for a in ["dog"=>"mammal", "cat"=>"mammal", "mouse"=>"mammal"]
    println("$(a[1]) is a $(a[2])")
end
# prints :
#    dog is a mammal
#    cat is a mammal
#    mouse is a mammal

# While loops loop while a condition is true
x = 0
while x < 4
    println(x)
    x += 1    # Shorthand for x = x + 1
end
# prints : 
#    0
#    1
#    2
#    3

# Handle exceptions with a try/catch block
try
    error("help")
catch e
    println("caught it $e")
end
# => caught it ErrorException("help")

