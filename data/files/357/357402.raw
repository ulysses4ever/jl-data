# *****************************************************************************
# Written by Ritchie Lee, ritchie.lee@sv.cmu.edu
# *****************************************************************************
# Copyright Ã£ 2015, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration. All
# rights reserved.  The Reinforcement Learning Encounter Simulator (RLES)
# platform is licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You
# may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0. Unless required by applicable
# law or agreed to in writing, software distributed under the License is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
# _____________________________________________________________________________
# Reinforcement Learning Encounter Simulator (RLES) includes the following
# third party software. The SISLES.jl package is licensed under the MIT Expat
# License: Copyright (c) 2014: Youngjun Kim.
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED
# "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# *****************************************************************************

"""
Plots for ExprSearch.MCTS
"""
module MCTS_Plots

export plotnodeinfo

using DataFrames
using Gadfly
using RLESUtils, Loggers

function plotnodeinfo(logfile::AbstractString;
                      termskey::AbstractString="selection_terms",
                      bestkey::AbstractString="selection_best",
                      outfileroot::AbstractString="nodeinfo")
  logs = load_log(TaggedDFLogger, logfile)
  plotnodeinfo(logs[termskey], logs[bestkey]; outfileroot=outfileroot)
end

function plotnodeinfo(termsfile::AbstractString, bestfile::AbstractString;
                      outfileroot::AbstractString="nodeinfo")
  Dterms = readtable(termsfile)
  Dbest = readtable(bestfile)
  plotnodeinfo(Dterms, Dbest; outfileroot=outfileroot)
end

"""
Plot selection_best and selection_terms
"""
function plotnodeinfo(Dterms::DataFrame, Dbest::DataFrame;
                      outfileroot::AbstractString="nodeinfo",
                      replace_infs::Float64=3000.0)

  D = stack(Dterms, [:val,:qterm,:exploreterm,:pathhintterm])

  #:bar_x = action
  #:bar_coloar = :action
  #writetable("plotnodeinfo.csv.gz", D)

  for subdf in groupby(D, :state)
    plts = Plot[]
    for subsubdf in groupby(subdf, :totalvisits)
      p = plot(subsubdf, x=:action, y=:value, color=:variable,
               Geom.bar(position=:dodge), Guide.title("nvisits=$(subsubdf[:totalvisits][1])"))
      push!(plts, p)
    end
    fname = "$(outfileroot)_$(subdf[:state][1])"
    stacked = vstack(plts...)
    draw(PGF("$fname.tex", 12cm, (6*length(plts))cm), stacked)
    draw(PDF("$fname.pdf", 12cm, (6*length(plts))cm), stacked)
  end

  Dterms, Dbest
end



end #module
