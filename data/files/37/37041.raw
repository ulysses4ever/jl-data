#=
@author titus 
=#
using   Base.Test
include("../intersect.jl")
exports = isdefined(:exports)?
    exports : Dict{ASCIIString,Function}()

exports["test_seg_intersect"] = function test_1()
  a = (-1,0);
  b = (1, 0);
  c = (0,-1);
  d = [(0.4, -0.2), (1.2, 0.2), (1.1, 0), (0, -2) ];
  expects = (false, true, false, false)
  for i in 1:length(d)
    @test isequal(intersect(a, b, c, d[i])[1], expects[i]);
  end
end

exports["test_seg_parallel"] = function test_2()
  a = (-1,0);
  b = (1, 0);
  c = (-0.5, 0.5);
  d = (2, 0.5);
  inter = intersect(a, b, c, d)
  @test isequal(inter[1], false);
  @test isequal(inter[2], (NaN, NaN));
end

exports["test_seg_coincident"] = function test_3()
  a = (-1,0);
  b = (1, 0);
  c = (0, 0);
  d = (0, 2);
  inter = intersect(a, b, c, d)
  @test isequal(inter[1], true);
  @test isequal(inter[2], (0.0, 0.0));
end


