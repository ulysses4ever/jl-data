import Graphs

# TODO: be sure this works when repo becomes a package.
# Hat tip: https://groups.google.com/forum/#!topic/julia-users/BSQfu9mmoL0 
bctdir = dirname(Base.source_path());

""" empty_graph(V::Type, E::Type, is_directed::Bool=true);
Returns an empty graph of the given vertex type, V, and edge type, E, to which vertices and edges may be added using functions `Graphs.add_vertex!` and `Graphs.add_Edge!` respectively.
V must be either Graphs.KeyVertex or Graphs.ExVertex.
E must be either Graphs.Edge{V} or Graphs.ExEdge{V}.
"""
function empty_graph(V::Type, E::Type, is_directed::Bool=true)
    if !(V <: Graphs.KeyVertex || V <: Graphs.ExVertex)
        error("Vertex type, V, must be a subtype of either Graphs.KeyVertex or Graphs.ExVertex. ", V," is unrecognized.");
    end
    if !(E == Graphs.Edge{V} || E == Graphs.ExEdge{V})
        error("For edge/vertex compatibility, edge type, E, must be either Graphs.Edge{",V,"} or Graphs.ExEdge{",V,"}. ",E," is incorrect.")
    end
    gindexof = Dict{V,Int}();
    gfinclist = Array{Array{E,1},1}();
    gbinclist = Array{Array{E,1},1}();
    gedges = Array{E,1}();
    gvertices = Array{V,1}();
    return Graphs.Graph{V,E}(is_directed, gvertices, gedges, gfinclist, gbinclist, gindexof);
end

""" fve30()
The smaller of two versions of anatomical connectivity in the macaque visual cortex. BCT references Felleman and van Essen [Distributed Hierarchical Processing in the Primate Cerebral Cortex](http://cercor.oxfordjournals.org/content/1/1/1.1.short)(1991).

Returns a directed graph with vertex labels.
"""
function fve30(bctdir::AbstractString = bctdir)
    Names = readdlm(joinpath(bctdir,"fve30Names.txt"), ' ', ASCIIString)[:,1];
    Names = map(strip, Names); # remove useless whitespace
    CIJ = readdlm(joinpath(bctdir,"fve30CIJ.txt"), ' ', Int);
    n = size(Names,1);
    V = Graphs.KeyVertex{ASCIIString};
    E = Graphs.Edge{V};
    g = empty_graph(V,E,true);
    for label in Names
        Graphs.add_vertex!(g, label);
    end
    for i in 1:n, j in 1:n
        if CIJ[i,j] > 0
            Graphs.add_edge!(g, g.vertices[i], g.vertices[j])
        end
    end
    return g
end

""" fve32()
The larger of two versions of anatomical connectivity in the macaque visual cortex. BCT references Felleman and van Essen [Distributed Hierarchical Processing in the Primate Cerebral Cortex](http://cercor.oxfordjournals.org/content/1/1/1.1.short)(1991).

Returns a directed graph with vertex labels.
"""
function fve32(bctdir::AbstractString = bctdir)
    Names = readdlm(joinpath(bctdir,"fve32Names.txt"), ' ', ASCIIString)[:,1];
    Names = map(strip, Names); # remove useless whitespace
    CIJ = readdlm(joinpath(bctdir,"fve32CIJ.txt"), ' ', Int);
    n = size(Names,1);
    V = Graphs.KeyVertex{ASCIIString};
    E = Graphs.Edge{V};
    g = empty_graph(V,E,true);
    for label in Names
        Graphs.add_vertex!(g, label);
    end
    for i in 1:n, j in 1:n
        if CIJ[i,j] > 0
            Graphs.add_edge!(g, g.vertices[i], g.vertices[j])
        end
    end
    return g
end

""" macaque47()

Macaque large-scale visual and sensorimotor area corticocortical anatomical connectivity. BCT reference: Honey et al.[Network structure of cerebral cortex shapes functional connectivity on multiple time scales](http://www.pnas.org/content/104/24/10240.short)(2007). 

Returns a directed graph with labeled vertices.
"""
function macaque47(bctdir::AbstractString = bctdir)
    Names = readdlm(joinpath(bctdir,"macaque47Names.txt"), ' ',
                    ASCIIString)[:,1];
    Names = map(strip, Names); # remove useless whitespace
    CIJ = readdlm(joinpath(bctdir,"macaque47CIJ.txt"), ' ', Int);
    # Not all vertices are named in this dataset: pad with numbers
    pad = map(string, (1+size(Names,1)):(size(CIJ,1)));
    Names = vcat(Names, pad);
    n = size(Names,1);
    V = Graphs.KeyVertex{ASCIIString};
    E = Graphs.Edge{V};
    g = empty_graph(V,E,true);
    for label in Names
        Graphs.add_vertex!(g, label);
    end
    for i in 1:n, j in 1:n
        if CIJ[i,j] > 0
            Graphs.add_edge!(g, g.vertices[i], g.vertices[j])
        end
    end
    return g
end

""" macaque71()

Macaque cortical anatomical connectivity. The BCT references Honey [The Organization of Neural Systems in the Primate Cerebral Cortex](http://rspb.royalsocietypublishing.org/content/252/1333/13.short)(1993).

Returns a directed graph with labeled vertices.
"""
function macaque71(bctdir::AbstractString = bctdir)
    Names = readdlm(joinpath(bctdir,"macaque71Names.txt"), ' ',
                    ASCIIString)[:,1];
    Names = map(strip, Names); # remove useless whitespace
    CIJ = readdlm(joinpath(bctdir,"macaque71CIJ.txt"), ' ', Int);
    n = size(Names,1);
    V = Graphs.KeyVertex{ASCIIString};
    E = Graphs.Edge{V};
    g = empty_graph(V,E,true);
    for label in Names
        Graphs.add_vertex!(g, label);
    end
    for i in 1:n, j in 1:n
        if CIJ[i,j] > 0
            Graphs.add_edge!(g, g.vertices[i], g.vertices[j])
        end
    end
    return g
end


""" catct(threshold::Int=0, ctx::Bool=true, bctdir::AbstractString = bctdir)

The cat dataset consists of two weighted, directed graphs. Weights are integers between 0 and 3, where 0 means no connection and 3 indicates the strongest connection. A threshold between 0 and 3 determines which entries will be counted as edges. The default threshold is 0, meaning all positive entries will be edges. Weights themselves are preserved as edge attributes.

The larger dataset covers the cortico-thalamic network, the smaller just the cortex. Regional names pertain to the smaller dataset (52 regions.) The larger, 95x95, weight matrix contains the smaller as its upper-left 52x52 minor. In place of names, numbers are used for regions beyond 52.

The BCT dataset references Scannell et. al. [The Connectional Organization of the Cortico-thalamic System of the Cat](http://cercor.oxfordjournals.org/content/9/3/277.long)(1999). Scannell et. al. report, "Connections weighted ‘3’ are strong, connections weighted ‘2’ are intermediate, connections weighted ‘1’ are weak or sparse, and connections marked ‘.’ have been explicitly reported as absent or are unreported." In the BCT data '0' takes the place of '.'

NOTE: The name, `catct`, rather than `cat` is used since the latter is the name of a Julia concatentation function.
"""
function catct(threshold::Int=0, ctx::Bool=true, bctdir::AbstractString = bctdir)
    Names = readdlm(joinpath(bctdir,"catNames.txt"), ' ', ASCIIString)[:,1];
    if !ctx
        Names = vcat(Names, map(string, 53:95));
    end
    Names = map(strip, Names); # remove useless whitespace
    CIJ = ctx ? readdlm(joinpath(bctdir,"catCIJctx.txt"), ' ', Int) :
    readdlm(joinpath(bctdir,"catCIJall.txt"),' ',Int);
    n = size(Names,1);
    V = Graphs.KeyVertex{ASCIIString};
    E = Graphs.ExEdge{V};
    g = empty_graph(V, E, true);
    for nm in Names
        Graphs.add_vertex!(g, nm);
    end
    for i in 1:n, j in 1:n
        if CIJ[i,j] > threshold
            eg = Graphs.add_edge!(g, g.vertices[i], g.vertices[j]);
            # eg is a reference, not a copy, hence the following line will
            # actually add the attribute to the edge of the graph.
            eg.attributes["weight"] = CIJ[i,j];
        end
    end
    return g
end


""" coactivation(threshold::Real=0.0, bctdir::AbstractString = bctdir)
    
The BCT coactivation dataset is a weighted, undirected graph derived by Crossley et. al., [Cognitive relevance of the community structure of the human brain functional coactivation network](http://www.pnas.org/content/110/28/11583.full)(2013). The data consists of a symmetric weight matrix with values in [0,1), and 3D spatial coordinates for each vertex. Thus both edges and vertices will have attributes, weights in the case of edges, coordinates in the case of vertices. Any weight exceeding the threshold argument will be counted as an edge.

Crossley et. al., "used a meta-analysis of the large primary literature that used fMRI or PET to measure task-related activation (>1,600 studies; 1985–2010). We estimated the similarity (Jaccard index) of the activation patterns across experimental tasks between each pair of 638 brain regions. This continuous coactivation matrix was used to build a weighted graph to characterize network topology. The coactivation network was modular, with occipital, central, and default-mode modules predominantly coactivated by specific cognitive domains (perception, action, and emotion, respectively)." (For Jaccard index see [Wikipedia](https://en.wikipedia.org/wiki/Jaccard_index)).

The related, BCT group average dataset was derived by different means in the same Crossley et. al. study. 
"""    
function coactivation(threshold::Real=0.0, bctdir::AbstractString = bctdir)
    W = readdlm(joinpath(bctdir,"Coactivation_Matrix.txt"), ' ', Float64);
    coords = readdlm(joinpath(bctdir, "Coactivation_Coord.txt"), ' ', Float64 );
    n = size(coords,1);
    g = empty_graph(Graphs.ExVertex, Graphs.ExEdge{Graphs.ExVertex}, false);
    for i in 1:n
        vtx = Graphs.ExVertex(i,string(i));
        vtx.attributes["coordinates"]=coords[i,:]';
        Graphs.add_vertex!(g,vtx)
    end
    # Note: since W is symmetric, listing only i,j edges, not j,i
    # add_edge! will take care of symmetries
    for i in 1:n, j in i:n
        if W[i,j] > threshold
            eg = Graphs.add_edge!(g, g.vertices[i], g.vertices[j]);
            eg.attributes["weight"] = W[i,j];
        end
    end
    return g;
end

""" groupaverage(threshold::Real=0.0, bctdir::AbstractString = bctdir)

The BCT group average dataset is a weighted, undirected graph derived by Crossley et. al., [Cognitive relevance of the community structure of the human brain functional coactivation network](http://www.pnas.org/content/110/28/11583.full)(2013). The data consists of a symmetric weight matrix with values in [0,1), and 3D spatial coordinates for each vertex. Thus both edges and vertices will have attributes, weights in the case of edges, coordinates in the case of vertices. Any weight exceeding the threshold argument will be counted as an edge.

Crossley et. al. derived the weights "from resting state fMRI data (n = 27, healthy volunteers)." The related, BCT coactivation dataset was derived by different means in the same study.  

"""
function groupaverage(threshold::Real=0.0, bctdir::AbstractString = bctdir)
    W = readdlm(joinpath(bctdir,"GroupAverage_Weight.txt"), ' ', Float64);
    coords = readdlm(joinpath(bctdir, "GroupAverage_Coord.txt"), ' ', Float64 );
    n = size(coords,1);
    g = empty_graph(Graphs.ExVertex, Graphs.ExEdge{Graphs.ExVertex}, false);
    for i in 1:n
        vtx = Graphs.ExVertex(i,string(i));
        vtx.attributes["coordinates"]=coords[i,:]';
        Graphs.add_vertex!(g,vtx)
    end
    # Note: since W is symmetric, listing only i,j edges, not j,i
    # add_edge! will take care of symmetries
    for i in 1:n, j in i:n
        if W[i,j] > threshold
            eg = Graphs.add_edge!(g, g.vertices[i], g.vertices[j]);
            eg.attributes["weight"] = W[i,j];
        end
    end
    return g;
end



