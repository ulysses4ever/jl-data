# This file is part of Kpax3. License is MIT.

##############
# Exceptions #
##############
@test_throws KDomainError readfasta("data/proper_nt.fasta", true,
                                        [0x00, 0x3f], 10, false, 0)
@test_throws KDomainError readfasta("data/proper_nt.fasta", true,
                                        zeros(UInt8, 0), -1, false, 0)

@test_throws KFASTAError readfasta("data/empty_file.fasta", true,
                                       zeros(UInt8, 0), 100000000, false, 0)
@test_throws KFASTAError readfasta("data/no_1st_seq.fasta", true,
                                       zeros(UInt8, 0), 100000000, false, 0)
@test_throws KFASTAError readfasta("data/no_id_char.fasta", true,
                                       zeros(UInt8, 0), 100000000, false, 0)
@test_throws KFASTAError readfasta("data/no_nth_seq.fasta", true,
                                       zeros(UInt8, 0), 100000000, false, 0)

@test_throws TypeError readfasta("data/utf8_id.fasta", true,
                                 zeros(UInt8, 0), 100000000, false, 0)
@test_throws TypeError readfasta("data/utf8_seq.fasta", true,
                                 zeros(UInt8, 0), 100000000, false, 0)

#################################
# FASTA file filled with blanks #
#################################
data, id, refseq = readfasta("data/blanks.fasta", true,
                             zeros(UInt8, 0), 100000000, false, 0)
@test data == UInt8[0x03 0x01;
                    0x01 0x03;
                    0x03 0x02;
                    0x02 0x03;
                    0x01 0x03;
                    0x03 0x02]
@test id == ASCIIString["ID1", "ID5"]
@test refseq == UInt8[0x01, 0x04, 0x03, 0x1d, 0x1d, 0x1d,
                      0x03, 0x1d, 0x1d, 0x01, 0x1d, 0x01]

@test_throws KDomainError categorical2binary(data, 0x01)

bindata, val, key = categorical2binary(data, 0x1c)
@test bindata == UInt8[0x00 0x01;
                       0x01 0x00;
                       0x01 0x00;
                       0x00 0x01;
                       0x00 0x01;
                       0x01 0x00;
                       0x01 0x00;
                       0x00 0x01;
                       0x01 0x00;
                       0x00 0x01;
                       0x00 0x01;
                       0x01 0x00]
@test val == [0x01, 0x03, 0x01, 0x03, 0x02, 0x03,
              0x02, 0x03, 0x01, 0x03, 0x02, 0x03]
@test key == [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6]

data, id, refseq = readfasta("data/blanks.fasta", true,
                             zeros(UInt8, 0), 1, false, 0)
@test data == UInt8[0x03 0x01;
                    0x01 0x03;
                    0x03 0x02;
                    0x02 0x03;
                    0x01 0x03;
                    0x03 0x02]
@test id == ASCIIString["ID1", "ID5"]
@test refseq == UInt8[0x01, 0x04, 0x03, 0x1d, 0x1d, 0x1d,
                      0x03, 0x1d, 0x1d, 0x01, 0x1d, 0x01]

#########################
# Proper DNA FASTA file #
#########################
data, id, refseq = readfasta("data/proper_nt.fasta", true,
                             zeros(UInt8, 0), 100000000, false, 0)
@test data == UInt8[0x04 0x04 0x04 0x04 0x04 0x02;
                    0x03 0x03 0x01 0x03 0x01 0x01;
                    0x01 0x01 0x00 0x03 0x03 0x00;
                    0x03 0x03 0x03 0x02 0x02 0x02;
                    0x02 0x03 0x01 0x02 0x03 0x02;
                    0x01 0x01 0x01 0x03 0x03 0x04;
                    0x01 0x01 0x04 0x04 0x01 0x01;
                    0x03 0x02 0x03 0x03 0x02 0x03]
@test id == ASCIIString["ID1", "ID2", "ID3", "ID4", "ID5", "ID6"]
@test refseq == UInt8[0x01, 0x1d, 0x03, 0x1d, 0x1d, 0x1d,
                      0x03, 0x1d, 0x1d, 0x1d, 0x1d, 0x01]

@test_throws KDomainError categorical2binary(data, 0x01)

bindata, val, key = categorical2binary(data, 0x1c)
@test bindata == UInt8[0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x01 0x01 0x00;
                       0x00 0x00 0x01 0x00 0x01 0x01;
                       0x01 0x01 0x00 0x01 0x00 0x00;
                       0x01 0x01 0x00 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x01;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x01 0x00 0x00 0x00;
                       0x01 0x00 0x00 0x01 0x00 0x01;
                       0x00 0x01 0x00 0x00 0x01 0x00;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x00 0x00 0x01 0x01;
                       0x00 0x00 0x01 0x01 0x00 0x00;
                       0x00 0x01 0x00 0x00 0x01 0x00;
                       0x01 0x00 0x01 0x01 0x00 0x01]
@test val == [0x02, 0x04, 0x01, 0x03, 0x01, 0x03, 0x02, 0x03, 0x01,
              0x02, 0x03, 0x01, 0x03, 0x04, 0x01, 0x04, 0x02, 0x03]
@test key == [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8]

data, id, refseq = readfasta("data/proper_nt.fasta", true,
                             zeros(UInt8, 0), 1, false, 0)
@test data == UInt8[0x04 0x04 0x04 0x04 0x04 0x02;
                    0x03 0x03 0x01 0x03 0x01 0x01;
                    0x01 0x01 0x00 0x03 0x03 0x00;
                    0x03 0x03 0x03 0x02 0x02 0x02;
                    0x02 0x03 0x01 0x02 0x03 0x02;
                    0x01 0x01 0x01 0x03 0x03 0x04;
                    0x01 0x01 0x04 0x04 0x01 0x01;
                    0x03 0x02 0x03 0x03 0x02 0x03]
@test id == ASCIIString["ID1", "ID2", "ID3", "ID4", "ID5", "ID6"]
@test refseq == UInt8[0x01, 0x1d, 0x03, 0x1d, 0x1d, 0x1d,
                      0x03, 0x1d, 0x1d, 0x1d, 0x1d, 0x01]

# consider all characters
data, id, refseq = readfasta("data/proper_nt.fasta", true,
                             [0x00], 100000000, false, 0)
@test data == UInt8[0x04 0x04 0x04 0x04 0x04 0x02;
                    0x03 0x03 0x01 0x03 0x01 0x01;
                    0x01 0x01 0x1c 0x03 0x03 0x1c;
                    0x03 0x03 0x03 0x02 0x02 0x02;
                    0x02 0x03 0x01 0x02 0x03 0x02;
                    0x01 0x01 0x01 0x03 0x03 0x04;
                    0x01 0x01 0x04 0x04 0x01 0x01;
                    0x03 0x02 0x03 0x03 0x02 0x03;
                    0x01 0x1c 0x01 0x01 0x01 0x01]
@test id == ASCIIString["ID1", "ID2", "ID3", "ID4", "ID5", "ID6"]
@test refseq == UInt8[0x01, 0x1d, 0x03, 0x1d, 0x1d, 0x1d,
                      0x03, 0x1d, 0x1d, 0x1d, 0x1d, 0x1d]

@test_throws KDomainError categorical2binary(data, 0x01)

bindata, val, key = categorical2binary(data, 0x1c)
@test bindata == UInt8[0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x01 0x01 0x00;
                       0x00 0x00 0x01 0x00 0x01 0x01;
                       0x01 0x01 0x00 0x01 0x00 0x00;
                       0x01 0x01 0x00 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x00 0x00 0x01 0x00 0x00 0x01;
                       0x00 0x00 0x00 0x01 0x01 0x01;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x01 0x00 0x00 0x00;
                       0x01 0x00 0x00 0x01 0x00 0x01;
                       0x00 0x01 0x00 0x00 0x01 0x00;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x00 0x00 0x01 0x01;
                       0x00 0x00 0x01 0x01 0x00 0x00;
                       0x00 0x01 0x00 0x00 0x01 0x00;
                       0x01 0x00 0x01 0x01 0x00 0x01;
                       0x01 0x00 0x01 0x01 0x01 0x01;
                       0x00 0x01 0x00 0x00 0x00 0x00]
@test val == [0x02, 0x04, 0x01, 0x03, 0x01, 0x03, 0x1c, 0x02, 0x03, 0x01, 0x02,
              0x03, 0x01, 0x03, 0x04, 0x01, 0x04, 0x02, 0x03, 0x01, 0x1c]
@test key == [1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9]

#############################
# Proper Protein FASTA file #
#############################
data, id, refseq = readfasta("data/proper_aa.fasta", false,
                             zeros(UInt8, 0), 100000000, false, 0)
@test data == UInt8[0x0d 0x0d 0x0d 0x0d 0x0d 0x09;
                    0x0d 0x0d 0x0b 0x0d 0x0b 0x0b;
                    0x0c 0x0c 0x00 0x14 0x14 0x00;
                    0x0c 0x0c 0x0c 0x14 0x14 0x14;
                    0x04 0x0c 0x02 0x04 0x0c 0x04;
                    0x0c 0x0c 0x0c 0x0e 0x0e 0x09;
                    0x02 0x02 0x13 0x13 0x02 0x02;
                    0x01 0x01 0x04 0x01 0x04 0x04]
@test id == ASCIIString["ID1", "ID2", "ID3", "ID4", "ID5", "ID6"]
@test refseq == UInt8[0x0e, 0x1d, 0x01, 0x1d, 0x1d, 0x1d,
                      0x14, 0x1d, 0x1d, 0x1d, 0x1d, 0x0f]

bindata, val, key = categorical2binary(data, 0x1c)
@test bindata == UInt8[0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x01 0x01 0x00;
                       0x00 0x00 0x01 0x00 0x01 0x01;
                       0x01 0x01 0x00 0x01 0x00 0x00;
                       0x01 0x01 0x00 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x01;
                       0x00 0x00 0x01 0x00 0x00 0x00;
                       0x01 0x00 0x00 0x01 0x00 0x01;
                       0x00 0x01 0x00 0x00 0x01 0x00;
                       0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x01 0x01 0x00 0x00 0x01 0x01;
                       0x00 0x00 0x01 0x01 0x00 0x00;
                       0x01 0x01 0x00 0x01 0x00 0x00;
                       0x00 0x00 0x01 0x00 0x01 0x01]
@test val == [0x09, 0x0d, 0x0b, 0x0d, 0x0c, 0x14, 0x0c, 0x14, 0x02, 0x04, 0x0c,
              0x09, 0x0c, 0x0e, 0x02, 0x13, 0x01, 0x04]
@test key == [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8]

data, id, refseq = readfasta("data/proper_aa.fasta", false,
                             zeros(UInt8, 0), 1, false, 0)
@test data == UInt8[0x0d 0x0d 0x0d 0x0d 0x0d 0x09;
                    0x0d 0x0d 0x0b 0x0d 0x0b 0x0b;
                    0x0c 0x0c 0x00 0x14 0x14 0x00;
                    0x0c 0x0c 0x0c 0x14 0x14 0x14;
                    0x04 0x0c 0x02 0x04 0x0c 0x04;
                    0x0c 0x0c 0x0c 0x0e 0x0e 0x09;
                    0x02 0x02 0x13 0x13 0x02 0x02;
                    0x01 0x01 0x04 0x01 0x04 0x04]
@test id == ASCIIString["ID1", "ID2", "ID3", "ID4", "ID5", "ID6"]
@test refseq == UInt8[0x0e, 0x1d, 0x01, 0x1d, 0x1d, 0x1d,
                      0x14, 0x1d, 0x1d, 0x1d, 0x1d, 0x0f]

# consider all characters
data, id, refseq = readfasta("data/proper_aa.fasta", true,
                             [0x00], 100000000, false, 0)
@test data == UInt8[0x0d 0x0d 0x0d 0x0d 0x0d 0x09;
                    0x0d 0x0d 0x0b 0x0d 0x0b 0x0b;
                    0x0c 0x0c 0x1c 0x14 0x14 0x1c;
                    0x0c 0x0c 0x0c 0x14 0x14 0x14;
                    0x04 0x0c 0x02 0x04 0x0c 0x04;
                    0x0c 0x0c 0x0c 0x0e 0x0e 0x09;
                    0x02 0x02 0x13 0x13 0x02 0x02;
                    0x01 0x01 0x04 0x01 0x04 0x04;
                    0x0f 0x1c 0x0f 0x0f 0x0f 0x0f]
@test id == ASCIIString["ID1", "ID2", "ID3", "ID4", "ID5", "ID6"]
@test refseq == UInt8[0x0e, 0x1d, 0x01, 0x1d, 0x1d, 0x1d,
                      0x14, 0x1d, 0x1d, 0x1d, 0x1d, 0x1d]

bindata, val, key = categorical2binary(data, 0x1c)
@test bindata == UInt8[0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x01 0x01 0x00;
                       0x00 0x00 0x01 0x00 0x01 0x01;
                       0x01 0x01 0x00 0x01 0x00 0x00;
                       0x01 0x01 0x00 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x00 0x00 0x01 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x01;
                       0x00 0x00 0x01 0x00 0x00 0x00;
                       0x01 0x00 0x00 0x01 0x00 0x01;
                       0x00 0x01 0x00 0x00 0x01 0x00;
                       0x00 0x00 0x00 0x00 0x00 0x01;
                       0x01 0x01 0x01 0x00 0x00 0x00;
                       0x00 0x00 0x00 0x01 0x01 0x00;
                       0x01 0x01 0x00 0x00 0x01 0x01;
                       0x00 0x00 0x01 0x01 0x00 0x00;
                       0x01 0x01 0x00 0x01 0x00 0x00;
                       0x00 0x00 0x01 0x00 0x01 0x01;
                       0x01 0x00 0x01 0x01 0x01 0x01;
                       0x00 0x01 0x00 0x00 0x00 0x00]
@test val == [0x09, 0x0d, 0x0b, 0x0d, 0x0c, 0x14, 0x1c, 0x0c, 0x14, 0x02, 0x04,
              0x0c, 0x09, 0x0c, 0x0e, 0x02, 0x13, 0x01, 0x04, 0x0f, 0x1c]
@test key == [1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9]
