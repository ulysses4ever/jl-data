
# Tests for MarketRisk module

using Base.Test
using BusinessDays
using MarketRisk
using InterestRates

include("ScenarioFactory.jl")
include("PricingModelFactory.jl")

BusinessDays.initcache(BrazilBanking())

# Basic functions that should be overloaded
import MarketRisk.getfunctionalcurrency
import MarketRisk.FinancialContract
getfunctionalcurrency() = MarketRisk.RFSpotCurrency("BRL")
FinancialContract(id::Int, portfolio::Vector{ASCIIString}, model_name::ASCIIString) = FinancialContract(id, portfolio, PricingModelFactory.getpricingmodel(model_name))

@test MarketRisk.RFSpotCurrency("BRL") == getfunctionalcurrency()
@test isequal(MarketRisk.RFSpotCurrency("BRL"), getfunctionalcurrency())

# Pricing scenario
scen = ScenarioFactory.getscenario(Date(2015,08,05))

println("\n######### CONTRACT01 #############")
contract01 = FinancialContract(1, ["MyCompany", "Trading"], "Fixed_USD")
contract01.attributes["NOTIONAL"] = 1000.0
contract01.attributes["MATURITY"] = Date(2015,10,02)
contract01.attributes["ASSET_LIABILITY"] = "a"

println("Timing uncompiled price function")
@time p = price(contract01, scen)

println("Timing compiled price function")
@time p = price(contract01, scen)

println("And the price for contract01 is: $(p)")
println("Log: $(contract01.log)")

println("\n######### CONTRACT02 #############")
contract02 = FinancialContract(2, ["MyCompany", "Trading"], "Forward_USD")
contract02.attributes["NOTIONAL"] = 1000.0
contract02.attributes["MATURITY"] = Date(2015,10,02)
contract02.attributes["ASSET_LIABILITY"] = "a"
contract02.attributes["FORWARD_PRICE"] = 3.8

println("Timing uncompiled price function")
@time p = price(contract02, scen)

println("Timing compiled price function")
@time p = price(contract02, scen)

println("Timing 2nd time compiled price function")
@time p = price(contract02, scen)

println("And the price for contract02 is: $(p)")
println("Log: $(contract02.log)")

println("\n######### CONTRACT03 #############")
# If we specify a differenct contract using the same model, we should get different results
contract03 = FinancialContract(3, ["MyCompany", "Trading"], "Forward_USD")
contract03.attributes["NOTIONAL"] = 2000.0
contract03.attributes["MATURITY"] = Date(2015,10,02)
contract03.attributes["ASSET_LIABILITY"] = "a"
contract03.attributes["FORWARD_PRICE"] = 3.8

println("Timing compiled price function")
@time p = price(contract03, scen)

println("And the price for contract03 is: $(p)")
println("Log: $(contract03.log)")

println("\n######### CONTRACT04 #############")
# If we specify a differenct contract using the same model, we should get different results
contract04 = FinancialContract(4, ["MyCompany", "Trading"], "Fixed_USD")
contract04.attributes["NOTIONAL"] = 2000.0
contract04.attributes["MATURITY"] = Date(2017,10,02)
contract04.attributes["ASSET_LIABILITY"] = "l"

println("Timing compiled price function")
@time p = price(contract04, scen)

println("And the price for contract04 is: $(p)")
println("Log: $(contract04.log)")

println("\n######### CONTRACT05 #############")
# If we specify a differenct contract using the same model, we should get different results
contract05 = FinancialContract(5, ["MyCompany", "Trading"], "Future_USD")
contract05.attributes["NOTIONAL"] = 2000.0
contract05.attributes["MATURITY"] = Date(2017,10,02)
contract05.attributes["ASSET_LIABILITY"] = "a"

println("Timing uncompiled price function")
@time p = price(contract05, scen)

println("Timing compiled price function")
@time p = price(contract05, scen)

println("And the price for contract05 is: $(p)")
println("Log: $(contract05.log)")

println("\n######### CONTRACT06 #############")
contract06 = FinancialContract(1, ["MyCompany", "Banking"], "Cash_USD")
contract06.attributes["NOTIONAL"] = 1000.0

println("Timing uncompiled price function")
@time p = price(contract06, scen)

println("Timing compiled price function")
@time p = price(contract06, scen)

println("And the price for contract06 is: $(p)")
println("Log: $(contract06.log)")

println("\n######### CONTRACT07 #############")
contract07 = FinancialContract(1, ["MyCompany", "Banking"], "Cash_EUR")
contract07.attributes["NOTIONAL"] = 1000.0

println("Timing compiled price function")
@time p = price(contract07, scen)

println("And the price for contract07 is: $(p)")
println("Log: $(contract07.log)")

println("\n######### CONTRACT08 #############")
contract08 = FinancialContract(1, ["MyCompany", "Trading"], "PETR4")
contract08.attributes["QUANTITY"] = 10.0
contract08.attributes["ASSET_LIABILITY"] = "a"

println("Timing uncompiled price function")
@time p = price(contract08, scen)

println("Timing compiled price function")
@time p = price(contract08, scen)

println("And the price for contract08 is: $(p)")
println("Log: $(contract08.log)")

println("\n######### CONTRACT09 #############")
contract09 = FinancialContract(1, ["MyCompany", "Trading"], "AAPL")
contract09.attributes["QUANTITY"] = 21.0
contract09.attributes["ASSET_LIABILITY"] = "a"

println("Timing uncompiled price function")
@time p = price(contract09, scen)

println("Timing compiled price function")
@time p = price(contract09, scen)

println("And the price for contract09 is: $(p)")
println("Log: $(contract09.log)")
