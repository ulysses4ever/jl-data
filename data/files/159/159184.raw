
function subfolders(path::AbstractString)
  path=abspath(path)
  files=filter(x->!startswith(x,"."),readdir(path))
  files=map(x->joinpath(path,x), files)
  folders=filter(isdir,files)
  subsubfolders=map(subfolders,folders)
  result=[path]
  for f=subsubfolders
    append!(result,f)
  end
  return result
end

append!(LOAD_PATH,subfolders("../src"))

using MAT

function read_samples()
  vars = matread("lsa64_features_kadir_spb.mat")["db_features"]
  matlab_features=vars["kadir_features_spb"]


  features=41
  sps=SequentialPattern[]
  for i=1:length(matlab_features)
    #print("$i: ")
    #println(matlab_features[i])
    matlab_feature=matlab_features[i]
    #indices=convert(Array{Array{Int,2},2},matlab_features[i])
    indices_sp=IndicesSequentialPattern()#IndicesFrame[]
    for j=1:length(matlab_feature)
      matlab_frame=matlab_feature[j]
      if (length(matlab_frame)==1)
        frame=[convert(Int,matlab_frame)]
      else
        frame=convert(Vector{Int},vec(matlab_frame))
      end
      push!(indices_sp,frame)
    end

    #indices_sp=map(vec,vec(indices))
    sp=SequentialPattern(indices_sp,features)
    push!(sps,sp)
  end
  sps
end

using Classifiers
import AdaBoosts
using SequentialPatterns
using Multiclass

x=read_samples()
y=ones(length(x))

features=41
max_frames=8
max_iterations=5
spc=SequentialPatterns.SequentialPatternConfig(features,max_frames,max_iterations)

max_classifiers=50
subsample_cumulative_distribution=0.3
min_samples=2
bc=AdaBoosts.AdaBoostConfig(spc,max_classifiers,subsample_cumulative_distribution,min_samples)
mc=OneVersusAllClassifierConfig(bc)
model=fit(mc,x,y)
predicted=predict(model,x)
println(predicted)
println(y)
println(loss(model,x,y))



#TODO
# write Multiclass..Classifier
# test Multiclass..Classifier with boosting+randomhyper+iris
# retrofit SP to use Classifier done?
# test Multiclass..Classifier with kadir features
# plot results
