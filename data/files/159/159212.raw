using SequentialPatterns

features=10
indices_sp1=IndicesFrame[[2, 3,5], [1, 3, 4]]
sp1=SequentialPattern(indices_sp1,features)

indices_sp2=IndicesFrame[[2], [1, 4]]
sp2=SequentialPattern(indices_sp2,features)


assert(sp1[1,2]==1)
assert(sp1[1,1]==0)
assert(sp2<=sp1)
assert(!(sp1<=sp2))

is1_1=[1,4,5]
is1_2=[4,5,7,9]
indices_sp1=IndicesFrame[is1_1,is1_2]

sp1=SequentialPattern(indices_sp1,features)

sp5=sequence_extend(sp1,[2])

is2_1=[1,3,4,5]
is2_2=[4,5,7]
is2_3=[4,5,6,7,8,9]

sp2=SequentialPattern(IndicesFrame[is2_1,is2_2,is2_3],features)
sp3=sequence_extend(sp1,is1_2)
sp4=feature_extend(sp2,[2])
sp6=SequentialPattern(IndicesFrame[is2_2,is2_3],features)

assert(sp1<=sp2)
assert(!(sp2<=sp1))

assert(sp1<=sp1)
assert(sp2<=sp2)
assert(sp1<=sp5)
assert(!(sp5<=sp1))
assert(~(sp3<=sp5))
assert(~(sp2<=sp3))
assert(~(sp4<=sp2))

assert(sp1<=sp2)


assert(sp2<=sp4)
assert(sp2<sp4)
predict(sp1, SequentialPattern[sp5,sp3,sp4])
assert(predict(sp1, SequentialPattern[sp5,sp2,sp3,sp4])==[1,1,1,1])
