""" rand_pts(n, a, b)

Return a random set of points between a and b.
"""
function rand_pts{T1<:Real, T2<:Real}(n, a::T1=0, b::T2=1)
    a + (b-a)*rand(n);
end

"""
If a and b are vectors return a random set of points in the k-dimensional interval [a,b]
"""
function rand_pts{T1<:Real, T2<:Real}(n, a::Array{T1,1}=[0,0], b::Array{T2,1}=[1,1])
    all(a .<= b) || all(a .>= b) || error("a and b must comperable in componentwise partial order.")
    length(a)==length(b) || error("a and b must have the same length")
    pts = Array(Float64,(n,length(a)));
    for i in 1:length(a)
        pts[:,i] = rand_pts(n,a[i],b[i]);
    end
    return pts;
end

""" 
Compute the orientation of a sequence of n+1 points in a real, n-dimensional vector space. The orientation will be either +1, -1, or 0, depending on the sign of the determinant of a matrix formed by appending a row or column of 1's to the input matrix.
"""
function orient{T <: Real}(M::Array{T,2})
    n, m = size(M);
    abs(n-m) ==1 || error("M or its transpose must be n by n+1")
    if n > m
        return sign(det(hcat(ones(n), M)));
    else
        return sign(det(hcat(ones(m), M')));
    end
end

