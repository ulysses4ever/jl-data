using Distributions
using MCMCTypes
using Sundials

# Function for updating parameters - Gibbs step 1
include("MCMCUpdateParameters.jl")

# Function for updating indicator - Gibbs step 2
include("MCMCUpdateIndicator.jl")

# Function for the main MCMC routine
include("MCMCRun.jl")



# Define settings for simulation
#Sampler             = "MH"
#Sampler             = "AdaptiveMH"
#Sampler             = "SmMALA"
Sampler             = "TrSmMALA"

if Sampler == "MH"
  OutputID            = "./Output/Locke2005a_MH_Output"
  InitialStepSize     = 0.02 # MH stepsize
  NumOfIterations     = 15000
elseif Sampler == "AdaptiveMH"
  OutputID            = "./Output/Locke2005a_AdaptiveMH_Output"
  InitialStepSize     = 0.0001 # MH stepsize
  NumOfIterations     = 100000
elseif Sampler == "SmMALA"
  OutputID            = "./Output/Locke2005a_SmMALA_Output"
  InitialStepSize     = 0.7 # SmMALA stepsize
  NumOfIterations     = 10000
elseif Sampler == "TrSmMALA"
  OutputID            = "./Output/Locke2005a_TrSmMALA_Output"
  InitialStepSize     = 0.05 # TrSmMALA stepsize
  NumOfIterations     = 20000
end

NumOfProposals      = 1
ProposalCovariance  = eye(22)
InitialiseFromPrior = false # Sample starting parameters from prior

AuxiliaryVars       = 20; # Number of tangent samples (We'll store this in the model for now)

# Define function for updating the parameters (1st Gibbs step)
UpdateParasFunction     = UpdateParameters

# Define function for sampling the indicator variable (2nd Gibbs step)
SampleIndicatorFunction = SampleIndicator


#######################
# Create an ODE model #
#######################

# Define the Model object
ModelType    = "ODE"
ModelName    = "Locke2005a"
NumOfParas   = 22
ParaNames    = ["r" "k" "s" "a" "u" "v"]
#DefaultParas = [3.7051; 9.7142; 7.8618; 3.2829; 6.3907; 1.0631; 0.9271; 5.0376; 7.3892; 0.4716; 4.1307; 5.7775; 4.4555; 7.6121; 0.6187; 7.7768; 9.0002; 3.6414; 5.6429; 8.2453; 1.2789; 5.3527] # Column vector
DefaultParas = [2.31108847282147;
12.9362485323670;
9.13310502758021;
3.41031239892740;
3.02453823741746;
0.939569031067569;
2.66866878766303;
3.93998970625014;
7.43553544495034;
0.899465876807439;
3.42196927196187;
7.97589603719460;
7.38884657801061;
6.19330013833790;
0.533494029416359;
8.85047735823438;
10.3624045056431;
4.19678844833850;
7.19123972694523;
10.0600242941988;
0.901405361470961;
7.09541121595998;]

UsePrior     = true
Prior        = Array(Distribution, NumOfParas)
for i = 1:NumOfParas
    Prior[i] = Uniform(0, 15)
end

# Specify the data
DataMeasurements = [0.146678061880009	13.9750411682159	9.08220496187906	1.97222545640433	7.06191944082244	1.17561423649201;
0.168801296244971	13.3699039055543	8.46325893880936	2.29652591844396	7.00193345855442	1.34348138974323;
0.163158473411467	13.3464503416039	8.72028213380060	2.41331569783184	8.69262010005430	1.70257165939090;
0.170930967613504	12.9050660201629	8.23363366234999	2.62912526038624	8.16753007406902	1.42951007811384;
0.196602812440274	12.7417389385074	8.26661740273549	2.75865105984246	11.0363860725615	1.69962400080850;
0.221099852562807	11.7534215297955	8.21518720982269	3.16430243104746	13.7875749646758	2.11283058752884;
0.218899923357307	11.6416106914175	7.94363045322002	3.12894285717642	15.1658778734770	3.01293230210082;
0.230189754320397	11.5914462850987	7.47835083238565	3.58227887615716	14.5920917226336	3.63755740233166;
0.272454561769139	10.9540354274817	7.65262413964037	3.62002552127931	18.3980696555113	3.31998953959099;
0.294598233036464	11.5747843754467	7.62153529386275	3.70474564441860	19.2921495262276	4.03151013188322;
0.308188121419909	12.1425549434291	8.09710302341454	3.76979009415643	23.2828547371859	4.26373924051238;
0.364104145803197	11.3785057136129	7.76255414340689	4.02483658504287	25.3959385579322	4.91761538576687;
0.351533376471086	11.8115315439225	7.58365920762372	4.02860638367589	26.5958134793459	5.37441824379103;
0.391371526791472	12.0627766138598	8.27485136954805	3.95007744962577	29.4642871535484	5.82067322380632;
0.392664676128722	12.5359227009907	8.76934978128401	4.16431873277962	31.2358042862572	6.31077174307798;
0.413903684270782	12.3754611320229	8.22700413325516	4.09834466735330	35.5519173141510	7.17770036211625;
0.443115885865390	12.5102310720310	8.41004507710826	3.93076291097634	38.8776354429994	8.00246723128769;
0.467698023830565	14.2056440800481	8.89825050141802	3.71532993235138	38.6679114916837	8.29731696583187;
0.455769680233128	14.0262156430171	9.30301971865219	3.74104568393795	39.3692449024283	8.19517292657680;
0.471310081608585	14.2285385596118	9.53608391404790	3.53258996388315	42.4517083769497	8.97636718734016;
0.471622019412138	14.6555744286429	9.91422705403379	3.43025650397913	41.7864124713714	9.66326205118202;
0.481089109798635	15.7846244459005	9.91569805663046	3.08914968684336	48.0087928649513	9.49624843764426;
0.501406911607281	15.8879875377026	10.2341386803422	2.68329066372045	44.8268339477838	9.74411629842095;
0.504549908362031	15.8977980371577	10.1136920922923	2.55344431848795	42.8070200869462	10.3291254852346;
0.494170566297416	16.1748305231093	10.9449471661297	2.39241690460955	44.9612778773138	10.0370016500116;
0.494824458113823	16.8122578172514	11.0486944296160	2.26499762258623	43.0156481819233	9.13553069330268;
0.510086177864318	17.1022828938126	11.1969572776071	1.85294401587926	42.7533168947666	8.91644724788573;
0.524605992349281	17.4341741287672	12.0675740219670	1.64317845154778	45.4997272460974	9.07424693066731;
0.503647166094535	17.9792202950650	11.9287978664131	1.37137747294555	40.0178684206911	8.82814176569420;
0.489510201079485	18.3757656272428	12.6162607572841	1.44982145822488	37.2283625938603	8.68981286724571;
0.481682899373074	19.1758675210397	12.8402486605107	1.38298107837948	35.7947372065020	8.38208307279433;
0.496429071386794	18.9206841792499	13.0676746541270	1.04674472811067	34.8502837704391	7.79330889613847;
0.488396471567203	19.6772684924019	13.0187492658545	1.11368353908612	34.6499820265777	7.37088656608748;
0.468662323123840	20.3346519834122	13.2922077492418	0.994462916900187	31.4223835241434	6.87332799947139;
0.455562562576757	20.3254827977233	13.1183445091315	1.11159397743349	28.8127581604342	5.82994133470493;
0.486455830370039	20.1954232729221	13.4872949070506	0.729625707598358	27.5195531524879	5.72909641793548;
0.430944118206034	20.5430640970876	13.7381445274811	1.03178136839103	24.2430588915031	5.71263531843676;
0.442311605220009	21.5261910372059	13.9938411511926	0.786566014971063	24.8898897821596	5.07080732055162;
0.437573503526503	21.4808770006856	14.0812918684408	0.836964996717669	20.6993902337299	4.78018862866187;
0.390069463492145	21.4813442698201	14.2156022996194	0.752872323748783	18.7870077138080	4.07181105960991;
0.395447104459476	21.6135404149677	14.4405876519949	0.599710579026014	20.4612582978237	3.69504235470094;
0.356476388625848	21.6579704830278	14.4499658057358	0.739873131068026	16.2320248504896	3.26942041098830;
0.348860267790203	21.2159949851227	14.0892672619590	0.818434658218483	14.3419478154109	2.82422197383475;
0.355142583094878	21.5986758408598	14.2045317108993	0.905276374268109	14.9782687855861	2.52285880512699;
0.333757468420521	21.1614825709676	14.1621258422220	0.752647210714135	12.2332182434743	2.20199591883190;
0.290791499871454	21.1788531764541	14.3880310247669	0.819194252697388	10.5992907590436	2.68087639100071;
0.257979586022034	20.8275150357607	13.6653812555519	0.993330628466058	6.13281552561085	1.68261947221046;
0.245607896750299	20.4241894277663	14.0220117836498	0.935952283276610	7.68761103215849	2.27730836626623;
0.235579835266997	19.5915089915290	13.5528359515927	0.919104614985983	8.14093294547836	1.20923596657630;
0.215839643383025	20.0779998655472	13.1404280911129	0.943780987356616	6.22422324441135	1.40437927123331;
0.175537674360227	20.1507148763081	13.3455322562613	0.957533369103170	4.29463939767046	1.85832202964166;
0.181726381952006	18.8845528662118	13.1037974134454	1.01955261662559	4.54744241663792	1.80736039062725;
0.120996421772556	18.6035147028270	12.1785575960567	1.16475923874810	4.12368972406984	0.510821220933662;
0.139601382504900	17.8476386143210	12.0633219580984	1.03621177022140	1.13141607898395	0.184184669014028;
0.108077174141986	17.8807342488333	11.6851973194548	1.18615719875553	3.02978262684771	0.449149564458403;
0.113210760078524	17.0614146937172	11.4319830733713	1.33838496684015	2.06235243614310	0.862138256393719;
0.0889279684923932	16.3610825458726	11.1180488312592	1.26194459502122	2.90514270698279	0.894746540609565;
0.0930632402679661	15.3401574851649	10.6632520472800	1.50861390736883	6.84927092489004	0.456725439088519;
0.130603904765001	14.2856554346968	10.2559934561175	1.54989667933528	5.10420857627603	0.872257704546889;
0.124755344407795	14.5158827083562	9.35685663385575	1.60250928073116	2.04965218250577	1.08689908030022;
0.111840255103722	14.4705143831158	9.62622057806095	1.86131378360708	6.41303561883587	1.06876180538399;
0.130793951472037	13.7659984454685	9.00690862016370	2.15651261268084	4.33722013056047	0.576543156881631;
0.139194019011284	13.1911173087594	8.77554243887246	2.04521849224329	8.55732342660780	1.23940471554396;
0.159954975543171	12.0261526787784	8.89675228125061	2.36973308080617	7.56839769727920	1.96770618706544;
0.194556293729540	13.0516989306345	7.99319525035938	2.56943235517888	10.2035301799417	1.85655017735362;
0.208053209379464	12.2805135783096	8.52017640542561	2.80703269051946	10.5214967899613	2.20270633847084;
0.228921916044831	12.6135248257232	7.86594652460094	3.07356002448085	15.4986831976561	2.07736222374359;
0.254264220725257	11.8584942968424	8.09768011363204	3.11370643637034	15.4375988865745	2.77940142719629;
0.218630523153353	11.3619824980276	7.67025529373584	3.38760351902354	17.8780080974501	3.65416511426891;
0.287415289631983	11.8967966887043	7.98118617772006	3.52306503428858	16.5207501103302	4.02244901225857;
0.310175765206268	10.9635767761586	8.42288539311101	3.85866456707035	21.5818516006874	3.84400679387634;
0.329991583582328	12.1195900635445	8.15070244518552	3.77564059097102	23.2782974898213	4.55600985381638;
0.345863384935072	12.0339578465975	7.32527093653546	3.94764153168720	25.1908689647829	5.08405433783576;
0.390794579462798	11.9508991883639	8.37235785379937	4.06344556521917	29.8705020259150	5.70765536992466;
0.382488013968182	12.6219682884839	8.33209712295025	3.92678792893407	30.1099875330664	5.80965438521349;
0.414436561541061	12.4057359137855	8.48535853815996	4.07583750601626	31.2803258421378	6.43656253717364;
0.459641206379032	12.9005554015059	8.68898137338373	4.07911763870435	34.4416868565381	7.46458393160745;
0.429261191079756	13.3421323846477	8.67642434484789	4.13152062337713	39.5204817615148	7.71893956306595;
0.425526701576259	13.6544051126660	8.94828505361197	3.72826185575333	38.4008461850609	7.85154512110764;
0.487713439413798	14.4512755907763	9.49881930403667	3.40321199513597	41.1395098917808	8.88572514848094;
0.467661224068836	14.8359211542512	9.41240608638195	3.52126283278649	42.6772797846842	8.86701479612227;
0.459050454407197	14.6439880771484	9.76340017285236	3.11048279652095	43.6107403683620	9.18173652312067;
0.498479487614356	15.0049855661727	9.71042261891351	3.07009904287701	44.7891264087824	9.27550277963481;
0.489232985298125	15.4911672888801	10.5055988058165	2.54318455509305	44.3345111552413	10.2547294501450;
0.485791531598215	15.9418856410195	10.3479603174306	2.48865322383128	47.5960598275738	9.63509255569357;
0.506323793379238	16.4781161011717	11.1989725824978	2.41032459566509	45.8747990076520	10.0939150080851;
0.494892803654505	16.9690288429244	11.0622285337017	2.03488334048682	42.6959755621741	9.90664102457117;
0.504321122249574	18.1139005779094	11.2813510469537	1.79765468993476	45.5869844182690	9.38306461011146;
0.496302269411187	17.5661341255560	11.7832214063764	1.62483374274856	42.0381453400549	9.08027816893499;
0.483622675220598	18.0930204926006	12.0443765400795	1.49011845824359	40.4519011622538	8.80306391105049;
0.497195116835641	18.8528325742118	11.9794275841274	1.26027866172275	38.0234777437131	8.60642705520102;
0.497900959622753	18.6745135444544	12.5875385714838	1.38057037457925	36.6309925456760	8.44271610226370;
0.493973205405866	19.1212868886538	12.8373862115288	1.25686652377270	36.0059879389686	7.76344855917792;
0.474235115795454	19.7802802926981	12.9966811234001	1.14391300642650	35.9423653819888	7.21883850633347;
0.470640856151196	19.6766104312555	13.1015023168835	1.02767249420881	33.3092656148542	6.92875759545336;
0.467945654481954	20.2368457506808	14.0413851073708	0.872225473588332	34.3258574914533	6.41412455960951;
0.460777762462736	19.8720058825243	13.8423294580805	0.724429501125068	25.3183647737665	6.34041041068559;
0.444751104472858	20.4688717154795	13.6271383904770	0.937600083111276	24.9639981569337	5.60402920520943;
0.442806942572539	21.0607868752581	14.0181225219807	0.926492240794387	25.0955399268233	6.12346623332472;
0.386481008539972	20.6921748718153	14.0721056901243	0.809766391455362	16.7854741310415	5.51396776600006]

DataTimePoints = [linspace(0,48,100) linspace(0,48,100) linspace(0,48,100) linspace(0,48,100) linspace(0,48,100) linspace(0,48,100)]


DataNoiseVariance = ones(100,6) # Same size as the dataset
DataNoiseVariance[:,1] = 1.856717551140038e-04
DataNoiseVariance[:,2] = 0.119635493113559
DataNoiseVariance[:,3] = 0.054540281311524
DataNoiseVariance[:,4] = 0.013853959524663
DataNoiseVariance[:,5] = 2.052922400964893
DataNoiseVariance[:,6] = 0.100933068537956

NumOfTimePoints = 100

# Specify differential equation function
function Locke2005a(t,y,ydot,p)

    LHYm = y[1]
    LHYc = y[2]
    LHYn = y[3]
    TOC1m = y[4]
    TOC1c = y[5]
    TOC1n = y[6]

    g1 = p[1]
    g2 = p[2]

    k1 = p[3]
    k2 = p[4]
    k3 = p[5]
    k4 = p[6]
    k5 = p[7]
    k6 = p[8]

    m1 = p[9]
    m2 = p[10]
    m3 = p[11]
    m4 = p[12]
    m5 = p[13]
    m6 = p[14]

    n1 = p[15]
    n2 = p[16]

    p1 = p[17]
    p2 = p[18]

    r1 = p[19]
    r2 = p[20]
    r3 = p[21]
    r4 = p[22]

    a = 1
    b = 2

    ydot[1] = (n1*TOC1n^a)/(g1^a + TOC1n^a) - (m1*LHYm)/(k1 + LHYm)
    ydot[2] = p1*LHYm - r1*LHYc + r2*LHYn - (m2*LHYc)/(k2 + LHYc)
    ydot[3] = r1*LHYc - r2*LHYn - (m3*LHYn)/(k3 + LHYn)
    ydot[4] = (n2*g2^b)/(g2^b + LHYn^b) - (m4*TOC1m)/(k4 + TOC1m)
    ydot[5] = p2*TOC1m - r3*TOC1c + r4*TOC1n - (m5*TOC1c)/(k5 + TOC1c)
    ydot[6] = r3*TOC1c - r4*TOC1n - (m6*TOC1n)/(k6 + TOC1n)

    nothing
end


ODEFunction              = Locke2005a
DefaultInitialConditions = [0.1290, 13.6937, 9.1584, 1.9919, 5.9266, 1.1007]
NumOfSpecies             = 6
ObservedSpecies          = [1, 4]
UnobservedSpecies        = [2, 3, 5, 6]
abstol                   = 1e-6
reltol                   = 1e-6
InferInitialConditions   = false

MyODEModel = ODEModel( ModelType,
                       ModelName,
                       NumOfParas,
                       ParaNames,
                       DefaultParas,
                       UsePrior,
                       Prior,
                       DataMeasurements,
                       DataTimePoints,
                       DataNoiseVariance,
                       NumOfTimePoints,
                       ODEFunction,
                       DefaultInitialConditions,
                       NumOfSpecies,
                       ObservedSpecies,
                       UnobservedSpecies,
                       abstol,
                       reltol,
                       InferInitialConditions,
                       AuxiliaryVars)


############################
# Create simulation object #
############################

MySimulation = MCMCSimulation( OutputID,
                               Sampler,
                               NumOfProposals,
                               NumOfIterations,
                               InitialStepSize,
                               ProposalCovariance,
                               InitialiseFromPrior,
                               UpdateParasFunction,
                               SampleIndicatorFunction,
                               MyODEModel )


# Run the MCMC code, passing in the MCMCSimulation object
MCMCRun( MySimulation )
