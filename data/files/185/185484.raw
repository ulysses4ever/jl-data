# grab coordinates from an opengl tutorial and generalize
function box(size)
	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	x1 = -size./2
	y1 = -size./2
	z1 = -size./2

	vertexStride = 4*9
	vertexData = zeros(GLfloat, 9*4*length(xtopleft))
	# vertices
	vertexData[1:vertexStride:end] = x1
	vertexData[2:vertexStride:end] = y1
	vertexData[3:vertexStride:end] = eps(Float32)*(1:length(xtopleft))

	vertexData[10:vertexStride:end] = x2
	vertexData[11:vertexStride:end] = y2
	vertexData[12:vertexStride:end] = eps(Float32)*(1:length(xtopleft))

	vertexData[19:vertexStride:end] = x3
	vertexData[20:vertexStride:end] = y3
	vertexData[21:vertexStride:end] = eps(Float32)*(1:length(xtopleft))

	vertexData[28:vertexStride:end] = x4
	vertexData[29:vertexStride:end] = y4
	vertexData[30:vertexStride:end] = eps(Float32)*(1:length(xtopleft))

	if state.drawTexture
		# texcoords
		vertexData[8:vertexStride:end] = 0
		vertexData[9:vertexStride:end] = 0

		vertexData[17:vertexStride:end] = 1
		vertexData[18:vertexStride:end] = 0

		vertexData[26:vertexStride:end] = 1
		vertexData[27:vertexStride:end] = 1

		vertexData[35:vertexStride:end] = 0
		vertexData[36:vertexStride:end] = 1
	end

	elements = zeros(GLuint, 6*length(x1))

	elements[1] = 0
	elements[2] = 1
	elements[3] = 2
	elements[4] = 2
	elements[5] = 3
	elements[6] = 0

	index = 7
	for x = 2:length(x1)
		elements[index] = elements[index-6] + 4
		elements[index+1] = elements[(index-6)+1] + 4
		elements[index+2] = elements[(index-6)+2] + 4
		elements[index+3] = elements[(index-6)+3] + 4
		elements[index+4] = elements[(index-6)+4] + 4
		elements[index+5] = elements[(index-6)+5] + 4
		index += 6
	end

	if state.fillStuff
		loadColors!(vertexData, state.fillCol, 9, 4*9)
		glBufferData(GL_ARRAY_BUFFER, sizeof(vertexData), vertexData, GL_STATIC_DRAW)
		glBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(elements), elements, GL_STATIC_DRAW)
		glDrawElements(GL_TRIANGLES, 6*length(xtopleft), GL_UNSIGNED_INT, C_NULL)
	end
	if state.strokeStuff
		loadColors!(vertexData, state.strokeCol, 9, 4*9)
		glBufferData(GL_ARRAY_BUFFER, sizeof(vertexData), vertexData, GL_STATIC_DRAW)
		dataStride = 4
		for x = 1:length(x1)
			glDrawArrays(GL_LINE_LOOP, (x-1)*dataStride, dataStride)
		end
	end
end
