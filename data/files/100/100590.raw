module IUP_IM

export
	# From libim.jl
	imFileOpen,
	imFileOpenAs,
	imFileNew,
	imFileClose,
	imFileHandle,
	imFileGetInfo,
	imFileSetInfo,
	imFileSetAttribute,
	imFileGetAttribute,
	imFileGetAttributeList,
	imFileGetPalette,
	imFileSetPalette,
	imFileReadImageInfo,
	imFileWriteImageInfo,
	imFileReadImageData,
	imFileWriteImageData,
	imFormatRegisterInternal,
	imFormatRemoveAll,
	imFormatList,
	imFormatInfo,
	imFormatInfoExtra,
	imFormatCompressions,
	imFormatCanWriteImage,
	imEncodeColor,
	imDecodeColor,
	imFileFormat,
	imImageInfo,
	imLoadRGB,
	imSaveRGB,
	imLoadMap,
	imSaveMap,
	imRGB2Map,
	imMap2RGB,
	imRGB2Gray,
	imMap2Gray,
	imResize,
	imStretch,
	imRegisterCallback,
	#
	# From im_image.jl		-- A submodule perhaps?
	#
	imImageCreate,
	imImageInit,
	imImageCreateBased,
	imImageDestroy,
	imImageAddAlpha,
	imImageSetAlpha,
	imImageRemoveAlpha,
	imImageReshape,
	imImageCopy,
	imImageCopyData,
	imImageCopyAttributes,
	imImageMergeAttributes,
	imImageCopyPlane,
	imImageDuplicate,
	imImageClone,
	imImageSetAttribute,
	imImageGetAttribute,
	imImageGetAttributeList,
	imImageClear,
	imImageIsBitmap,
	imImageSetPalette,
	imImageMatchSize,
	imImageMatchColor,
	imImageMatchDataType,
	imImageMatchColorSpace,
	imImageMatch,
	imImageSetMap,
	imImageSetBinary,
	imImageSetGray,
	imImageMakeBinary,
	imImageMakeGray,
	imFileLoadImage,
	imFileLoadImageFrame,
	imFileLoadBitmap,
	imFileLoadImageRegion,
	imFileLoadBitmapFrame,
	imFileSaveImage,
	imFileImageLoad,
	imFileImageLoadBitmap,
	imFileImageLoadRegion,
	imFileImageSave	

include("libim_h.jl")
include("libim.jl")
include("im_image_h.jl")
include("im_image.jl")

end  # module