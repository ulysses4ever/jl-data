include("common.jl")

SIGNALFILE = joinpath(DATADIR, "simulated_signal_curved_bernoulli_3d.txt")
OUTFILE01 = joinpath(OUTDIR, "simulated_signal_curved_bernoulli_3d_left_piece.txt")
OUTFILE02 = joinpath(OUTDIR, "simulated_signal_curved_bernoulli_3d_right_piece.txt")

nspoints = countlines(SIGNALFILE)

if nspoints < 3
  error("The input signal file must have at least 3 points (lines)")
end

sstream = open(SIGNALFILE, "r")
outstream01 = open(OUTFILE01, "w+")
outstream02 = open(OUTFILE02, "w+")

x = float64(readline(sstream))
y = float64(readline(sstream))
z = float64(readline(sstream))

if 0 <= y < 0.5
  writedlm(outstream01, [x y z], ' ')
elseif 0.5 <= y <= 1
  writedlm(outstream02, [x y z], ' ')
else
  error("Data point out of function's domain")
end

for i = 1:(nspoints-3)
  x = y
  y = z
  z = float64(readline(sstream))

  if 0 <= y < 0.5
    writedlm(outstream01, [x y z], ' ')
  elseif 0.5 <= y <= 1
    writedlm(outstream02, [x y z], ' ')
  else
    error("Data point out of function's domain")
  end
end

close(sstream)
close(outstream01)
close(outstream02)
