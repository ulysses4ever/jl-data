#######################################################################
# Contains functions for calculating the mean, median and mode values #
#######################################################################

using Base.Test

function dmean(x::AbstractArray)
  # Calculates the mean of the array
  if NaN in x
    return NaN
  end
  if length(x) == 0
    throw(ArgumentError("Error! Empty array given!"))
  else
    return sum(x)/length(x)
  end
end


function dmedian(x::AbstractArray)
  # Calculates the median of the array
  if NaN in x
    return NaN
  end
  if length(x) == 0
    throw(ArgumentError("Error! Empty array given!"))
  end
  center_element = length(x)/2
  if (length(x)%2) != 0
    center = (length(x) - 1)/2
    return x[convert(Int, center + 1)]
  else
    med = (x[convert(Int, center_element)] + x[convert(Int, center_element + 1)])/2
    return med
  end
end


#######################################################################
## Underneath are the tests for the moodules above. PR's are welcome ##
#######################################################################

# A non-nan array with length of odd value
a = [1, 2, 3, 4, 5, 6, 7]
@test dmean(a)   == 4
@test dmedian(a) == 4

# A non-nan array with length of even value
b = [1, 2, 3, 4, 5, 6, 7, 8]
@test dmean(b)   == 4.5
@test dmedian(b) == 4.5

# An array contiaing NaN values
c = [1, 2, NaN, NaN, 5, 6, 7]
@test dmean(c) == NaN
@test dmedian(c) == NaN
