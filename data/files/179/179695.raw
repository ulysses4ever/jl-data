module cme257hw4

export julia_set

function julia_set{T<:Real}(R::Function, x::Vector{T}, y::Vector{T}, n_iter::Int64 = 20, escape_toI::Float64 = 10000.0)
    A = zeros(length(x), length(y))
    for i in 1:length(x)
        for j in 1:length(y)
            z = x[i] + im * y[j]
            for k in 1:n_iter
                z = R(z)
                if abs(z) > escape_toI # diverged
                    A[i, j] = k
                    break
                end
            end
            if A[i, j] == 0 # didn't diverge
                A[i, j] = escape_toI + 1
            end
        end
    end
    return A
end

end # module
