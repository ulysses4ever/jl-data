include("config-nonadaptive.jl")
include("genotype.jl")
include("population.jl")

import Genotype
import Config
import Population

function evolve()

    config_vals::Config.Type_Config_Values = Config.Type_Config_Values()
    
    for repetition = 1:config_vals.num_experiment_repetitions

        population::Population.Type_Population = Population.make_population(config_vals)    
        
        local_switch_ticker = 0

        for generation = 1:config_vals.num_generations
            
            Population.evaluate(population, config_vals, repetition, generation, false)
            Population.print_stats(population, config_vals, repetition, generation)
            #if ((generation % config_vals.generations_per_target_switch) == 0) | (population.stagnation_counter == 20)
            if ((generation - population.generation_of_last_switch) == config_vals.generations_per_target_switch) | (population.stagnation_counter == 200)
                Population.switch_target(population, config_vals, repetition, generation)
            end
            Population.breed_and_exterminate(population, config_vals)
        
        end
    end
end

evolve()
