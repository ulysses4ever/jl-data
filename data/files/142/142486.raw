# WARNING: This file was generated from parser.rl using ragel. Do not edit!
const samparser_start  = 33
const samparser_first_final  = 33
const samparser_error  = 0
const samparser_en_main  = 33
const _samparser_nfa_targs = Int8[ 0, 0 ,  ]
const _samparser_nfa_offsets = Int8[ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,  ]
const _samparser_nfa_push_actions = Int8[ 0, 0 ,  ]
const _samparser_nfa_pop_trans = Int8[ 0, 0 ,  ]
Ragel.@generate_read!_function(
"samparser",
SAMReader,
SAMRecord,
begin
begin
if ( p == pe  )
	@goto _test_eof

end
if ( cs  == 33 )
	@goto st_case_33
elseif ( cs  == 0 )
	@goto st_case_0
elseif ( cs  == 1 )
	@goto st_case_1
elseif ( cs  == 2 )
	@goto st_case_2
elseif ( cs  == 3 )
	@goto st_case_3
elseif ( cs  == 4 )
	@goto st_case_4
elseif ( cs  == 5 )
	@goto st_case_5
elseif ( cs  == 6 )
	@goto st_case_6
elseif ( cs  == 7 )
	@goto st_case_7
elseif ( cs  == 8 )
	@goto st_case_8
elseif ( cs  == 9 )
	@goto st_case_9
elseif ( cs  == 10 )
	@goto st_case_10
elseif ( cs  == 11 )
	@goto st_case_11
elseif ( cs  == 12 )
	@goto st_case_12
elseif ( cs  == 13 )
	@goto st_case_13
elseif ( cs  == 14 )
	@goto st_case_14
elseif ( cs  == 15 )
	@goto st_case_15
elseif ( cs  == 16 )
	@goto st_case_16
elseif ( cs  == 17 )
	@goto st_case_17
elseif ( cs  == 18 )
	@goto st_case_18
elseif ( cs  == 19 )
	@goto st_case_19
elseif ( cs  == 20 )
	@goto st_case_20
elseif ( cs  == 21 )
	@goto st_case_21
elseif ( cs  == 22 )
	@goto st_case_22
elseif ( cs  == 23 )
	@goto st_case_23
elseif ( cs  == 24 )
	@goto st_case_24
elseif ( cs  == 25 )
	@goto st_case_25
elseif ( cs  == 26 )
	@goto st_case_26
elseif ( cs  == 27 )
	@goto st_case_27
elseif ( cs  == 28 )
	@goto st_case_28
elseif ( cs  == 29 )
	@goto st_case_29
elseif ( cs  == 34 )
	@goto st_case_34
elseif ( cs  == 30 )
	@goto st_case_30
elseif ( cs  == 31 )
	@goto st_case_31
elseif ( cs  == 32 )
	@goto st_case_32
end
@goto st_out
@label st_case_33
if ( (data[1+(p )])> 63  )
	begin
	if ( 65 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
		begin
		@goto ctr46

	end

end

end

elseif ( (data[1+(p )])>= 33  )
	begin
	@goto ctr46

end

end
begin
@goto st0

end
@label st_case_0
@label st0
cs = 0;
@goto _out
@label ctr46
begin
empty!(output.optional_fields)
end
begin
Ragel.@anchor!
end
@goto st1
@label ctr47
begin
Ragel.@anchor!
Ragel.@yield 1
end
begin
empty!(output.optional_fields)
end
begin
Ragel.@anchor!
end
@goto st1
@label st1
p+= 1;
if ( p == pe  )
@goto _test_eof1

end
@label st_case_1
if ( (data[1+(p )])== 9  )
begin
@goto ctr0

end

end
if ( (data[1+(p )])> 63  )
begin
if ( 65 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto st1

end

end

end

elseif ( (data[1+(p )])>= 33  )
begin
@goto st1

end

end
begin
@goto st0

end
@label ctr0
begin
Ragel.@copy_from_anchor!(output.name)
end
@goto st2
@label st2
p+= 1;
if ( p == pe  )
@goto _test_eof2

end
@label st_case_2
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto ctr3

end

end
begin
@goto st0

end
@label ctr3
begin
Ragel.@anchor!
end
@goto st3
@label st3
p+= 1;
if ( p == pe  )
@goto _test_eof3

end
@label st_case_3
if ( (data[1+(p )])== 9  )
begin
@goto ctr4

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st3

end

end
begin
@goto st0

end
@label ctr4
begin
output.flag = Ragel.@int64_from_anchor!
end
@goto st4
@label st4
p+= 1;
if ( p == pe  )
@goto _test_eof4

end
@label st_case_4
if ( 33 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto ctr6

end

end
begin
@goto st0

end
@label ctr6
begin
Ragel.@anchor!
end
@goto st5
@label st5
p+= 1;
if ( p == pe  )
@goto _test_eof5

end
@label st_case_5
if ( (data[1+(p )])== 9  )
begin
@goto ctr7

end

end
if ( 33 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto st5

end

end
begin
@goto st0

end
@label ctr7
begin
Ragel.@copy_from_anchor!(output.refname)
end
@goto st6
@label st6
p+= 1;
if ( p == pe  )
@goto _test_eof6

end
@label st_case_6
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto ctr9

end

end
begin
@goto st0

end
@label ctr9
begin
Ragel.@anchor!
end
@goto st7
@label st7
p+= 1;
if ( p == pe  )
@goto _test_eof7

end
@label st_case_7
if ( (data[1+(p )])== 9  )
begin
@goto ctr10

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st7

end

end
begin
@goto st0

end
@label ctr10
begin
output.pos = Ragel.@int64_from_anchor!
end
@goto st8
@label st8
p+= 1;
if ( p == pe  )
@goto _test_eof8

end
@label st_case_8
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto ctr12

end

end
begin
@goto st0

end
@label ctr12
begin
Ragel.@anchor!
end
@goto st9
@label st9
p+= 1;
if ( p == pe  )
@goto _test_eof9

end
@label st_case_9
if ( (data[1+(p )])== 9  )
begin
@goto ctr13

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st9

end

end
begin
@goto st0

end
@label ctr13
begin
output.mapq = Ragel.@int64_from_anchor!
end
@goto st10
@label st10
p+= 1;
if ( p == pe  )
@goto _test_eof10

end
@label st_case_10
if ( (data[1+(p )])== 42  )
begin
@goto ctr15

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto ctr16

end

end
begin
@goto st0

end
@label ctr15
begin
Ragel.@anchor!
end
@goto st11
@label st11
p+= 1;
if ( p == pe  )
@goto _test_eof11

end
@label st_case_11
if ( (data[1+(p )])== 9  )
begin
@goto ctr17

end

end
begin
@goto st0

end
@label ctr17
begin
Ragel.@copy_from_anchor!(output.cigar)
end
@goto st12
@label st12
p+= 1;
if ( p == pe  )
@goto _test_eof12

end
@label st_case_12
if ( 33 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto ctr18

end

end
begin
@goto st0

end
@label ctr18
begin
Ragel.@anchor!
end
@goto st13
@label st13
p+= 1;
if ( p == pe  )
@goto _test_eof13

end
@label st_case_13
if ( (data[1+(p )])== 9  )
begin
@goto ctr19

end

end
if ( 33 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto st13

end

end
begin
@goto st0

end
@label ctr19
begin
Ragel.@copy_from_anchor!(output.refname)
end
@goto st14
@label st14
p+= 1;
if ( p == pe  )
@goto _test_eof14

end
@label st_case_14
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto ctr21

end

end
begin
@goto st0

end
@label ctr21
begin
Ragel.@anchor!
end
@goto st15
@label st15
p+= 1;
if ( p == pe  )
@goto _test_eof15

end
@label st_case_15
if ( (data[1+(p )])== 9  )
begin
@goto ctr22

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st15

end

end
begin
@goto st0

end
@label ctr22
begin
output.pos = Ragel.@int64_from_anchor!
end
@goto st16
@label st16
p+= 1;
if ( p == pe  )
@goto _test_eof16

end
@label st_case_16
if ( (data[1+(p )])== 45  )
begin
@goto ctr24

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto ctr25

end

end
begin
@goto st0

end
@label ctr24
begin
Ragel.@anchor!
end
@goto st17
@label st17
p+= 1;
if ( p == pe  )
@goto _test_eof17

end
@label st_case_17
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st18

end

end
begin
@goto st0

end
@label ctr25
begin
Ragel.@anchor!
end
@goto st18
@label st18
p+= 1;
if ( p == pe  )
@goto _test_eof18

end
@label st_case_18
if ( (data[1+(p )])== 9  )
begin
@goto ctr27

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st18

end

end
begin
@goto st0

end
@label ctr27
begin
output.tlen = Ragel.@int64_from_anchor!
end
@goto st19
@label st19
p+= 1;
if ( p == pe  )
@goto _test_eof19

end
@label st_case_19
if ( (data[1+(p )]) == 42 )
begin
@goto ctr28

end
elseif ( (data[1+(p )]) == 46 )
begin
@goto ctr29

end
elseif ( (data[1+(p )]) == 61 )
begin
@goto ctr29

end
end
if ( (data[1+(p )])> 90  )
begin
if ( 97 <= (data[1+(p )])&& (data[1+(p )])<= 122  )
begin
@goto ctr29

end

end

end

elseif ( (data[1+(p )])>= 65  )
begin
@goto ctr29

end

end
begin
@goto st0

end
@label ctr28
begin
Ragel.@anchor!
end
@goto st20
@label st20
p+= 1;
if ( p == pe  )
@goto _test_eof20

end
@label st_case_20
if ( (data[1+(p )])== 9  )
begin
@goto ctr30

end

end
begin
@goto st0

end
@label ctr30
begin
seqstr = Ragel.@ascii_from_anchor!()
resize!(output.seq, length(seqstr))
Bio.Seq.encode_copy!(output.seq, seqstr)
end
@goto st21
@label st21
p+= 1;
if ( p == pe  )
@goto _test_eof21

end
@label st_case_21
if ( 33 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto ctr31

end

end
begin
@goto st0

end
@label ctr31
begin
Ragel.@anchor!
end
@goto st22
@label st22
p+= 1;
if ( p == pe  )
@goto _test_eof22

end
@label st_case_22
if ( (data[1+(p )]) == 9 )
begin
@goto ctr32

end
elseif ( (data[1+(p )]) == 10 )
begin
@goto ctr33

end
end
if ( 33 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto st22

end

end
begin
@goto st0

end
@label ctr32
begin
qualstr = Ragel.@ascii_from_anchor!()
resize!(output.qual, length(qualstr))
for i in 1:endof(qualstr)
output.qual[i] = UInt8(qualstr[i]) - 33
end
end
@goto st23
@label ctr41
begin
optfieldstr = Ragel.@ascii_from_anchor!()
tag = KeyTag(optfieldstr[1], optfieldstr[2])
typ = optfieldstr[4]
output.optional_fields[tag] = optfieldstr[6:end]
end
@goto st23
@label st23
p+= 1;
if ( p == pe  )
@goto _test_eof23

end
@label st_case_23
if ( (data[1+(p )])> 90  )
begin
if ( 97 <= (data[1+(p )])&& (data[1+(p )])<= 122  )
begin
@goto ctr35

end

end

end

elseif ( (data[1+(p )])>= 65  )
begin
@goto ctr35

end

end
begin
@goto st0

end
@label ctr35
begin
Ragel.@anchor!
end
@goto st24
@label st24
p+= 1;
if ( p == pe  )
@goto _test_eof24

end
@label st_case_24
if ( (data[1+(p )])< 65  )
begin
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st25

end

end

end

elseif ( (data[1+(p )])> 90  )
begin
if ( 97 <= (data[1+(p )])&& (data[1+(p )])<= 122  )
begin
@goto st25

end

end

end

else
begin
@goto st25

end

end
begin
@goto st0

end
@label st25
p+= 1;
if ( p == pe  )
@goto _test_eof25

end
@label st_case_25
if ( (data[1+(p )])== 58  )
begin
@goto st26

end

end
begin
@goto st0

end
@label st26
p+= 1;
if ( p == pe  )
@goto _test_eof26

end
@label st_case_26
if ( (data[1+(p )])> 90  )
begin
if ( 97 <= (data[1+(p )])&& (data[1+(p )])<= 122  )
begin
@goto st27

end

end

end

elseif ( (data[1+(p )])>= 65  )
begin
@goto st27

end

end
begin
@goto st0

end
@label st27
p+= 1;
if ( p == pe  )
@goto _test_eof27

end
@label st_case_27
if ( (data[1+(p )])== 58  )
begin
@goto st28

end

end
begin
@goto st0

end
@label st28
p+= 1;
if ( p == pe  )
@goto _test_eof28

end
@label st_case_28
if ( 32 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto st29

end

end
begin
@goto st0

end
@label st29
p+= 1;
if ( p == pe  )
@goto _test_eof29

end
@label st_case_29
if ( (data[1+(p )]) == 9 )
begin
@goto ctr41

end
elseif ( (data[1+(p )]) == 10 )
begin
@goto ctr42

end
end
if ( 32 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto st29

end

end
begin
@goto st0

end
@label ctr33
begin
qualstr = Ragel.@ascii_from_anchor!()
resize!(output.qual, length(qualstr))
for i in 1:endof(qualstr)
output.qual[i] = UInt8(qualstr[i]) - 33
end
end
begin
input.state.linenum += 1
end
@goto st34
@label ctr42
begin
optfieldstr = Ragel.@ascii_from_anchor!()
tag = KeyTag(optfieldstr[1], optfieldstr[2])
typ = optfieldstr[4]
output.optional_fields[tag] = optfieldstr[6:end]
end
begin
input.state.linenum += 1
end
@goto st34
@label st34
p+= 1;
if ( p == pe  )
@goto _test_eof34

end
@label st_case_34
if ( (data[1+(p )])> 63  )
begin
if ( 65 <= (data[1+(p )])&& (data[1+(p )])<= 126  )
begin
@goto ctr47

end

end

end

elseif ( (data[1+(p )])>= 33  )
begin
@goto ctr47

end

end
begin
@goto st0

end
@label ctr29
begin
Ragel.@anchor!
end
@goto st30
@label st30
p+= 1;
if ( p == pe  )
@goto _test_eof30

end
@label st_case_30
if ( (data[1+(p )]) == 9 )
begin
@goto ctr30

end
elseif ( (data[1+(p )]) == 46 )
begin
@goto st30

end
elseif ( (data[1+(p )]) == 61 )
begin
@goto st30

end
end
if ( (data[1+(p )])> 90  )
begin
if ( 97 <= (data[1+(p )])&& (data[1+(p )])<= 122  )
begin
@goto st30

end

end

end

elseif ( (data[1+(p )])>= 65  )
begin
@goto st30

end

end
begin
@goto st0

end
@label ctr16
begin
Ragel.@anchor!
end
@goto st31
@label st31
p+= 1;
if ( p == pe  )
@goto _test_eof31

end
@label st_case_31
if ( (data[1+(p )]) == 61 )
begin
@goto st32

end
elseif ( (data[1+(p )]) == 68 )
begin
@goto st32

end
elseif ( (data[1+(p )]) == 80 )
begin
@goto st32

end
elseif ( (data[1+(p )]) == 83 )
begin
@goto st32

end
elseif ( (data[1+(p )]) == 88 )
begin
@goto st32

end
end
if ( (data[1+(p )])< 72  )
begin
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st31

end

end

end

elseif ( (data[1+(p )])> 73  )
begin
if ( 77 <= (data[1+(p )])&& (data[1+(p )])<= 78  )
begin
@goto st32

end

end

end

else
begin
@goto st32

end

end
begin
@goto st0

end
@label st32
p+= 1;
if ( p == pe  )
@goto _test_eof32

end
@label st_case_32
if ( (data[1+(p )])== 9  )
begin
@goto ctr17

end

end
if ( 48 <= (data[1+(p )])&& (data[1+(p )])<= 57  )
begin
@goto st31

end

end
begin
@goto st0

end
@label st_out
@label _test_eof1
cs = 1;
@goto _test_eof
@label _test_eof2
cs = 2;
@goto _test_eof
@label _test_eof3
cs = 3;
@goto _test_eof
@label _test_eof4
cs = 4;
@goto _test_eof
@label _test_eof5
cs = 5;
@goto _test_eof
@label _test_eof6
cs = 6;
@goto _test_eof
@label _test_eof7
cs = 7;
@goto _test_eof
@label _test_eof8
cs = 8;
@goto _test_eof
@label _test_eof9
cs = 9;
@goto _test_eof
@label _test_eof10
cs = 10;
@goto _test_eof
@label _test_eof11
cs = 11;
@goto _test_eof
@label _test_eof12
cs = 12;
@goto _test_eof
@label _test_eof13
cs = 13;
@goto _test_eof
@label _test_eof14
cs = 14;
@goto _test_eof
@label _test_eof15
cs = 15;
@goto _test_eof
@label _test_eof16
cs = 16;
@goto _test_eof
@label _test_eof17
cs = 17;
@goto _test_eof
@label _test_eof18
cs = 18;
@goto _test_eof
@label _test_eof19
cs = 19;
@goto _test_eof
@label _test_eof20
cs = 20;
@goto _test_eof
@label _test_eof21
cs = 21;
@goto _test_eof
@label _test_eof22
cs = 22;
@goto _test_eof
@label _test_eof23
cs = 23;
@goto _test_eof
@label _test_eof24
cs = 24;
@goto _test_eof
@label _test_eof25
cs = 25;
@goto _test_eof
@label _test_eof26
cs = 26;
@goto _test_eof
@label _test_eof27
cs = 27;
@goto _test_eof
@label _test_eof28
cs = 28;
@goto _test_eof
@label _test_eof29
cs = 29;
@goto _test_eof
@label _test_eof34
cs = 34;
@goto _test_eof
@label _test_eof30
cs = 30;
@goto _test_eof
@label _test_eof31
cs = 31;
@goto _test_eof
@label _test_eof32
cs = 32;
@goto _test_eof
@label _test_eof
begin

end
if ( p == eof  )
begin
if ( cs  == 34 )
begin
Ragel.@anchor!
Ragel.@yield 0
end

break;
end

end

end
@label _out
begin

end

end
end)
