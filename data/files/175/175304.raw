;; autoload.jl -- Initialise auto-load functions
;; $Id$

;; Copyright (C) 1999 John Harper <john@dcs.warwick.ac.uk>

;; This file is part of sawmill.

;; sawmill is free software; you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2, or (at your option)
;; any later version.

;; sawmill is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with sawmill; see the file COPYING.  If not, write to
;; the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

;; to rebuild this file, load a tags file containing all lisp files
;; into Jade, then run:

;; (tags-map-buffers
;;  (lambda (buffer)
;;    (add-autoloads "SOURCE-DIR/lisp/sawfish/wm/autoload.jl" buffer)))

;;; ::autoload-start::
(defgroup audio "Sound" :require sawfish.wm.ext.audio-events)
(defgroup edge-flip "Edge Flipping" :group workspace :require sawfish.wm.ext.edge-flip)
(defgroup match-window "Matched Windows" :layout single :require match-window)
(defgroup shade-hover "Shade Hover" :group focus :require sawfish.wm.ext.shade-hover)
(defgroup tooltips "Tooltips" :group misc :require tooltips)
(autoload-command '3d-hack 'sawfish.wm.ext.3d-hack)
(autoload-placement-mode 'stagger 'sawfish.wm.placement.stagger)
(autoload-placement-mode 'first-fit 'sawfish.wm.placement.smart)
(autoload-placement-mode 'best-fit 'sawfish.wm.placement.smart)
(autoload-placement-mode 'first-fit-or-interactive 'sawfish.wm.placement.smart)
(autoload-window-animator 'wireframe 'sawfish.wm.animation.outline)
(autoload-window-animator 'solid 'sawfish.wm.animation.outline)
(autoload-command 'maximize-window 'sawfish.wm.state.maximize)
(autoload-command 'unmaximize-window 'sawfish.wm.state.maximize)
(autoload-command 'maximize-window-vertically 'sawfish.wm.state.maximize)
(autoload-command 'maximize-window-horizontally 'sawfish.wm.state.maximize)
(autoload-command 'maximize-window-toggle 'sawfish.wm.state.maximize)
(autoload-command 'maximize-window-horizontally-toggle 'sawfish.wm.state.maximize)
(autoload-command 'maximize-window-vertically-toggle 'sawfish.wm.state.maximize)
(autoload-command 'maximize-fill-window 'sawfish.wm.state.maximize)
(autoload-command 'maximize-fill-window-vertically 'sawfish.wm.state.maximize)
(autoload-command 'maximize-fill-window-horizontally 'sawfish.wm.state.maximize)
(autoload-command 'maximize-fill-window-toggle 'sawfish.wm.state.maximize)
(autoload-command 'maximize-fill-window-horizontally-toggle 'sawfish.wm.state.maximize)
(autoload-command 'maximize-fill-window-vertically-toggle 'sawfish.wm.state.maximize)
(autoload-command 'make-window-ignored 'sawfish.wm.state.ignored)
(autoload-command 'make-window-not-ignored 'sawfish.wm.state.ignored)
(autoload-command 'toggle-window-ignored 'sawfish.wm.state.ignored)
(autoload-command 'toggle-window-never-focus 'sawfish.wm.state.ignored)
(autoload-command 'describe-key 'sawfish.wm.util.keymap)
(autoload-command 'describe-key-to-screen 'sawfish.wm.util.keymap)
(autoload-command 'quote-event 'sawfish.wm.util.keymap)
(autoload-command 'next-workspace-window 'sawfish.wm.commands.cycle)
(autoload-command 'previous-workspace-window 'sawfish.wm.commands.cycle)
(autoload-command 'next-window 'sawfish.wm.commands.cycle)
(autoload-command 'previous-window 'sawfish.wm.commands.cycle)
(autoload-command 'describe-symbol 'sawfish.wm.commands.describe)
(autoload-command 'apropos-function 'sawfish.wm.commands.describe)
(autoload-command 'apropos-variable 'sawfish.wm.commands.describe)
(autoload-command 'gnome-toggle-skip-winlist 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-set-skip-winlist 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-clear-skip-winlist 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-toggle-skip-tasklist 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-set-skip-tasklist 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-clear-skip-tasklist 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-logout 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-www-page 'sawfish.wm.commands.gnome)
(autoload-command 'gnome-help-browser 'sawfish.wm.commands.gnome)
(autoload-command 'make-group-sticky 'sawfish.wm.commands.groups)
(autoload-command 'make-group-unsticky 'sawfish.wm.commands.groups)
(autoload-command 'toggle-group-sticky 'sawfish.wm.commands.groups)
(autoload-command 'send-group-to-current-workspace 'sawfish.wm.commands.groups)
(autoload-command 'send-group-to-next-workspace 'sawfish.wm.commands.groups)
(autoload-command 'send-group-to-previous-workspace 'sawfish.wm.commands.groups)
(autoload-command 'move-group-to-current-viewport
 'sawfish.wm.commands.groups)
(autoload-command 'move-group-left 'sawfish.wm.commands.groups)
(autoload-command 'move-group-right 'sawfish.wm.commands.groups)
(autoload-command 'move-group-up 'sawfish.wm.commands.groups)
(autoload-command 'move-group-down 'sawfish.wm.commands.groups)
(autoload-command 'raise-group 'sawfish.wm.commands.groups)
(autoload-command 'lower-group 'sawfish.wm.commands.groups)
(autoload-command 'raise-lower-group 'sawfish.wm.commands.groups)
(autoload-command 'raise-group-depth 'sawfish.wm.commands.groups)
(autoload-command 'lower-group-depth 'sawfish.wm.commands.groups)
(autoload-command 'grow-window-left 'sawfish.wm.commands.grow-pack)
(autoload-command 'grow-window-right 'sawfish.wm.commands.grow-pack)
(autoload-command 'grow-window-up 'sawfish.wm.commands.grow-pack)
(autoload-command 'grow-window-down 'sawfish.wm.commands.grow-pack)
(autoload-command 'pack-window-left 'sawfish.wm.commands.grow-pack)
(autoload-command 'pack-window-right 'sawfish.wm.commands.grow-pack)
(autoload-command 'pack-window-up 'sawfish.wm.commands.grow-pack)
(autoload-command 'pack-window-down 'sawfish.wm.commands.grow-pack)
(autoload-command 'help:show-faq 'sawfish.wm.commands.help)
(autoload-command 'help:show-news 'sawfish.wm.commands.help)
(autoload-command 'help:show-programmer-manual 'sawfish.wm.commands.help)
(autoload-command 'help:show-homepage 'sawfish.wm.commands.help)
(autoload-command 'move-cursor-right 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-left 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-up 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-down 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-right-fine 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-left-fine 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-up-fine 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-cursor-down-fine 'sawfish.wm.commands.move-cursor)
(autoload-command 'move-window-interactively 'sawfish.wm.commands.move-resize)
(autoload-command 'resize-window-interactively 'sawfish.wm.commands.move-resize)
(autoload-command 'move-selected-window 'sawfish.wm.commands.move-resize)
(autoload-command 'resize-selected-window 'sawfish.wm.commands.move-resize)
(autoload-command 'raise-window-and-pass-through-click 'sawfish.wm.commands.raise-commands)
(autoload-command 'raise-group-and-pass-through-click 'sawfish.wm.commands.raise-commands)
(autoload-command 'raise-transients-and-pass-through-click 'sawfish.wm.commands.raise-commands)
(autoload-command 'raise-and-pass-through-click-if-focused 'sawfish.wm.commands.raise-commands)
(autoload-command 'raise-or-pass-through-click 'sawfish.wm.commands.raise-commands)
(autoload-command 'size-window-add-row 'sawfish.wm.commands.size-window)
(autoload-command 'size-window-subtract-row 'sawfish.wm.commands.size-window)
(autoload-command 'size-window-add-column 'sawfish.wm.commands.size-window)
(autoload-command 'size-window-subtract-column 'sawfish.wm.commands.size-window)
(autoload-command 'slide-window-left 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-window-right 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-window-up 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-window-down 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-group-left 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-group-right 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-group-up 'sawfish.wm.commands.slide-window)
(autoload-command 'slide-group-down 'sawfish.wm.commands.slide-window)
(autoload-command 'set-viewport-linear 'sawfish.wm.commands.viewport-linear `(and (labelled ,(_ "Index:") (number 0))))
(autoload-command 'set-window-viewport-linear 'sawfish.wm.commands.viewport-linear `(and (labelled ,(_ "Index:") (number 0))))
(autoload-command 'set-viewport-linear:1 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:1 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:2 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:2 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:3 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:3 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:4 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:4 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:5 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:5 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:6 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:6 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:7 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:7 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:8 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:8 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-viewport-linear:9 'sawfish.wm.commands.viewport-linear)
(autoload-command 'set-window-viewport-linear:9 'sawfish.wm.commands.viewport-linear)
(put 'set-viewport-linear:1 'deprecated-command t)
(put 'set-window-viewport-linear:1 'deprecated-command t)
(put 'set-viewport-linear:2 'deprecated-command t)
(put 'set-window-viewport-linear:2 'deprecated-command t)
(put 'set-viewport-linear:3 'deprecated-command t)
(put 'set-window-viewport-linear:3 'deprecated-command t)
(put 'set-viewport-linear:4 'deprecated-command t)
(put 'set-window-viewport-linear:4 'deprecated-command t)
(put 'set-viewport-linear:5 'deprecated-command t)
(put 'set-window-viewport-linear:5 'deprecated-command t)
(put 'set-viewport-linear:6 'deprecated-command t)
(put 'set-window-viewport-linear:6 'deprecated-command t)
(put 'set-viewport-linear:7 'deprecated-command t)
(put 'set-window-viewport-linear:7 'deprecated-command t)
(put 'set-viewport-linear:8 'deprecated-command t)
(put 'set-window-viewport-linear:8 'deprecated-command t)
(put 'set-viewport-linear:9 'deprecated-command t)
(put 'set-window-viewport-linear:9 'deprecated-command t)
(defgroup cycle "Window Cycling" :group focus :require x-cycle)
(autoload-command 'cycle-windows 'sawfish.wm.commands.x-cycle)
(autoload-command 'cycle-group 'sawfish.wm.commands.x-cycle)
(autoload-command 'cycle-prefix 'sawfish.wm.commands.x-cycle)
(autoload-command 'cycle-class 'sawfish.wm.commands.x-cycle)
(autoload-command 'xterm 'sawfish.wm.commands.xterm)
(autoload-command 'popup-window-menu 'sawfish.wm.menus)
(autoload-command 'popup-root-menu 'sawfish.wm.menus)
(autoload-command 'popup-apps-menu 'sawfish.wm.menus)
(autoload-command 'customize 'sawfish.wm.customize)
;;; ::autoload-end::
