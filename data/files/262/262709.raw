triangle = {                           [75],
                                     [95 64],
                                    [17 47 82],
                                  [18 35 87 10],
                                 [20 04 82 47 65],
                               [19 01 23 75 03 34],
                              [88 02 77 73 07 63 67],
                            [99 65 04 28 06 16 70 92],
                           [41 41 26 56 83 40 80 70 33],
                         [41 48 72 33 47 32 37 16 94 29],
                        [53 71 44 65 25 43 91 52 97 51 14],
                      [70 11 33 28 77 73 17 78 39 68 17 57],
                     [91 71 52 38 17 14 91 43 58 50 27 29 48],
                   [63 66 04 68 89 53 67 30 73 16 69 87 40 31],
                  [04 62 98 27 23 09 70 98 73 93 38 53 60 04 23]}


function findmaxsumroute(triangle)
    n = size(triangle, 1)

    maxsum = deepcopy(triangle)
    for i in 1:n
        for j in 1:i
            maxsum[i][j] = 0
        end
    end
    maxsum[1][1] = triangle[1][1]

    for i in 2:n
        for j in 1:i
            if j == 1
                maxsum[i][1] = maxsum[i - 1][1] + triangle[i][1]
            elseif j == i
                maxsum[i][i] = maxsum[i - 1][i - 1] + triangle[i][i]
            else
                maxsum[i][j] = max(maxsum[i - 1][j - 1], maxsum[i - 1][j]) +
                        triangle[i][j]
            end
        end
    end
    return maximum(maxsum[n])
end

@time res = findmaxsumroute(triangle)
print("answer: ")
println(res)
print("md5sum: ")
run(`echo -n $res` |> `md5sum`)
