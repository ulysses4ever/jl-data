# Thu 27 Sep 2012 03:37:38 PM EDT
#
# This is a basic test of using the Bits++ via Julia-OpenGL-SDL.


require("SDL")
using SDL

width  = 640
height = 640

init_stuff()

theClut=256*ones(256,3)

bitsPlusClutRow=zeros(524,3)
bitsPlusClutRow[1:8,:]=[36 63 8 211 3 112 56 34; 106 136 19 25 115 68 41 159; 133 163 138 46 164 9 49 208]'
high=floor(theClut/256)
low=theClut-256*high
bitsPlusClutRow[12+(1:512),1:3]=reshape([high';low'],3,512)'

while true
    glmatrixmode(GL_PROJECTION)                        
    glpushmatrix()                                    
    glloadidentity()                
    glortho( 0, width,height, 0, 0, 1 )
    glmatrixmode(GL_MODELVIEW)                            
    glloadidentity()

    #draw the pixels
    glactivetexturearb(GL_TEXTURE0_ARB)
    glenable(GL_TEXTURE_2D)
    glbindtexture(GL_TEXTURE_2D, 0)
    glactivetexturearb(GL_TEXTURE1_ARB)
    glenable(GL_TEXTURE_2D)
    glbindtexture(GL_TEXTURE_2D, 0)
    glrasterpos2i(0,1)
    gldrawpixels(524,1, GL_RGB, GL_SHORT, bitsPlusClutRow)

    #return to 3D mode (go and pop the projection matrix)
    glmatrixmode( GL_PROJECTION )                    
    glpopmatrix()
    glmatrixmode( GL_MODELVIEW )

    glcolor(1.0,1.0,1.0)

    glbegin(GL_POLYGON)
        glvertex(-1,-1)
        glvertex(-1,1)
        glvertex(1,0)
    glend()

    finalize_draw()
end
