# Thu 27 Sep 2012 03:37:38 PM EDT
#
# This is a basic test of using the Bits++ via Julia-OpenGL-SDL.


require("SDL")
using SDL

# initialize variables

bpp       = 16
wintitle  = "NeHe Tut 1"
icontitle = "NeHe Tut 1"
width     = 1280
height    = 800

theClut=256*ones(256,3)

bitsPlusClutRow=zeros(524,3)
bitsPlusClutRow[1:8,:]=[36 63 8 211 3 112 56 34; 106 136 19 25 115 68 41 159; 133 163 138 46 164 9 49 208]'
high=floor(theClut/256)
low=theClut-256*high
bitsPlusClutRow[12+(1:512),1:3]=reshape([high';low'],3,512)'

# open SDL window with an OpenGL context

sdl_init(SDL_INIT_VIDEO)
#videoInfo = sdl_getvideoinfo()
videoFlags = (SDL_OPENGL | SDL_GL_DOUBLEBUFFER | SDL_HWPALETTE | SDL_NOFRAME | SDL_FULLSCREEN)
#if videoInfo.hw_available
    videoFlags = (videoFlags | SDL_HWSURFACE)
#else
    #videoFlags = (videoFlags | SDL_SWSURFACE)
#end
#if videoInfo.blit_hw
    videoFlags = (videoFlags | SDL_HWACCEL)
#end
sdl_gl_setattribute(SDL_GL_DOUBLEBUFFER, 1)
sdl_setvideomode(width, height, bpp, videoFlags)
sdl_wm_setcaption(wintitle, icontitle)

glviewport(0, 0, width, height)
glclearcolor(0.0, 0.0, 0.0, 0.0)
glcleardepth(1.0)			 
gldepthfunc(GL_LESS)	 
glenable(GL_DEPTH_TEST)
glshademodel(GL_SMOOTH)

glmatrixmode(GL_PROJECTION)
glloadidentity()

gluperspective(45.0,width/height,0.1,100.0)

glmatrixmode(GL_MODELVIEW)

# drawing routines

done = false

while done != true
    glclear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)
    glloadidentity()

    glmatrixmode(GL_PROJECTION)                        
    glpushmatrix()                                    
    glloadidentity()                
    glortho( 0, width,height, 0, 0, 1 )
    glmatrixmode(GL_MODELVIEW)                            
    glloadidentity()

    #draw the pixels
    glactivetexturearb(GL_TEXTURE0_ARB)
    glenable(GL_TEXTURE_2D)
    glbindtexture(GL_TEXTURE_2D, 0)
    glactivetexturearb(GL_TEXTURE1_ARB)
    glenable(GL_TEXTURE_2D)
    glbindtexture(GL_TEXTURE_2D, 0)
    glrasterpos2i(0,1)
    gldrawpixels(524,1, GL_RGB, GL_SHORT, bitsPlusClutRow)

    #return to 3D mode (go and pop the projection matrix)
    glmatrixmode( GL_PROJECTION )                    
    glpopmatrix()
    glmatrixmode( GL_MODELVIEW )

    glcolor(1.0,1.0,1.0)
    
    gltranslate(-1.5,0.0,-6.0)

    glbegin(GL_POLYGON)
        glvertex(0.0,1.0,0.0)
        glvertex(1.0,-1.0,0.0)
        glvertex(-1.0,-1.0,0.0)
    glend()

    sdl_gl_swapbuffers()

    sdl_pumpevents()
    keystate = sdl_getkeystate()

    if keystate[SDLK_q] == true
        break
    end
end
