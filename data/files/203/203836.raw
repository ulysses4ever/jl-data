type Vec4f
  e1::Float32
  e2::Float32
  e3::Float32
  e4::Float32
end

type Mat4f
  v1::Vec4f
  v2::Vec4f
  v3::Vec4f
  v4::Vec4f
end

+(v1::Vec4f,v2::Vec4f)
*(a::Float32,v::Vec4f)
*(M::Mat4f,v::Vec4f)

type Object
  vertices::Vector{Vec4f}
  #Type constructorwhich allows to use Object(vec1,vec2,...)
  Object(x::Vector{Vec4f}) = new(x)
  Object(x...) = new(collect(Vec4f,x))
end

v1 = Vec4f(0,0,0,1)
v2 = Vec4f(1,0,0,1)
v3 = Vec4f(0,1,0,1)
