#|

URL Sawfish Module.  Version 1.12.

Copyright (c) 2003-2005 Ewan Mellor <sawfish@ewanmellor.org.uk>.
Copyright (c)      2004 Matthew Parkinson <sawfish@matthewp.com>.
Copyright (c)           Sen Nagata <sen@eccosys.com>.
Copyright (c) 1996-2002 Free Software Foundation, Inc.
Copyright (c) 1993-1996 William M. Perry <wmperry@gnu.org>.

Author: Ewan Mellor <sawfish@ewanmellor.org.uk>.
Author: Matthew Parkinson <sawfish@matthewp.com>.
Author: Yuan <yuan@cs.umd.edu>.
Author: Sen Nagata <sen@eccosys.com>.
Author: William M. Perry <wmperry@cs.indiana.edu>.

The work on this module in its current form was by Ewan Mellor and Matthew
Parkinson; this module itself was brought into being by Ewan Mellor.  Some of
the code herein for visiting URLs is taken from sawfish.swim by Yuan, who
seems to have assigned his copyright to the FSF.  The code for URL escaping is
by Sen Nagata <sen@eccosys.com>, which in turn was a port of code in url.el
from the Emacs/w3 package by William M. Perry, who appears to have assigned
his copyright to the FSF after 1996.

This file is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

This file is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE.  See the GNU General Public License for more details.


This module depends upon the remote-application module (version 1.2).  Both
that module and this one are available from

http://www.ewanmellor.org.uk/sawfish.html


Install this file by placing it inside your ~/.sawfish/lisp/ directory.

|#


(define-structure url
  (export url-call
          url-browser-window
          url-escape-query
          url-match
          *url-background-when-focussed*
          )

  (open user
        rep
        rep.data.queues
        rep.regexp
        rep.system
        sawfish.wm
        sawfish.wm.util.display-window

        remote-application
        )


(defvar *url-background-when-focussed* t
  "If t, then browser requests will use a background page when the browser is
already focussed."
  )


(defconst browser-commands
  (
   ("Opera"             . "opera -remote \"openURL(%s,new-page)\"")
   ("Galeon"            . "galeon -n \"%s\"")
   ("Mozilla"           . "mozilla -remote \"openURL(%s)\"")
   ("navigator:browser" . "mozilla -remote \"openURL(%s)\"") ; Firebird
   ("Konqueror" . "dcop konqueror KonquerorIface openBrowserWindow '%s'")
   )
  "The commands to use for loading pages (in the foreground)."
  )

(defconst background-browser-commands
  (
   ("Opera"             . "opera -remote \"openURL(%s,background-page)\"")
   ("Galeon"            . "galeon -n \"%s\"")
   ("Mozilla"           . "mozilla -remote \"openURL(%s)\"")
   ("navigator:browser" . "mozilla -remote \"openURL(%s)\"") ; Firebird
   ("Konqueror" . "dcop konqueror KonquerorIface openBrowserWindow '%s'")
   )
  "The commands to use for loading URLs in the background."
  )

(defconst start-browser-commands
  ("opera"
   "galeon"
   "mozilla"
   "konqueror"
   )
  "The commands used to start a browser if one is not already running."
  )


(define browser-remote-instance (remote-application-create
                                 (mapcar car browser-commands)
                                 start-browser-commands))


(define (url-browser-window)
  "Find and return a browser window."
  (remote-application-window browser-remote-instance)
  )


(define (url-call url focus)
  "Open the given URL inside a running web-browser instance.  Focus and
unshade that window if the focus parameter is t.  If the variable
*url-background-when-focussed* is t and the browser window is already focussed
then the URL will appear in a background page.  If there is no browser
instance running, then one will be started using *url-start-browser-command*"

  (let* ((browser-window (remote-application-window browser-remote-instance))
         (commands (if (and *url-background-when-focussed*
                            (= browser-window (input-focus)))
                       background-browser-commands
                     browser-commands)))
    (remote-application-invoke browser-remote-instance
                               commands
                               focus
                               url)
    )
  )


(define (url-escape-query str)
  "Perform escaping appropriate for components of a URL query.  In other
words, replace spaces by plus signs, and all other characters outside of
the ASCII English alphabet blocks with the appropriate percent-encoding."
  (mapconcat
   (lambda (char)
     (cond ((eq char 32)
            "+")
           ((or (and (>= char 65) (<= char 90))
                (and (>= char 97) (<= char 122)))
            make-string 1 char)
           ((< char 16)
            (string-upcase (format nil "%%0%x" char)))
           (t
            (string-upcase (format nil "%%%x" char)))))
   str ""))


(define (url-match term)
  "Determine whether the given term contains a URL, returning the URL
contained therein if so, or nil otherwise.  If the URL is split across lines
then it will be found as long as the endpoints of the string match the
endpoints of the URL.  Otherwise, the URL will be found even if preceded or
followed by non-URL text."
  (or (when (string-match url-re-across-lines term)
        (string-replace "\n" "" term))
      (when (or (string-match url-re-using-prefixes term)
                (string-match url-re-using-suffixes-in-middle term)
                (string-match url-re-using-suffixes-terminated term)
                (string-match url-re-using-suffixes-eos term))
        (substring term (match-start 1) (match-end 1))))
  )


;; URL regexp, for guessing whether a string is a URL inside url-match.

;; Looks for "http:", "https:", "ftp:", or "www.", or one of the suffixes
;; listed in url-suffixes, which are all of the gTLDs, plus the ISO 3166-1
;; 2-character country codes, plus the EU, UK and Ascension Island special
;; exceptions.

(defconst url-prefixes
  (
   "http:"
   "https:"
   "ftp:"
   "www\\."
   )
  )

(defconst url-suffixes
  (
    "aero"
    "biz"
    "com"
    "coop"
    "edu"
    "gov"
    "info"
    "int"
    "mil"
    "museum"
    "name"
    "net"
    "org"
    "pro"

    "ac"
    "eu"
    "uk"

    "AF"                      ; AFGHANISTAN
    "AX"                      ; ÅLAND ISLANDS
    "AL"                      ; ALBANIA
    "DZ"                      ; ALGERIA
    "AS"                      ; AMERICAN SAMOA
    "AD"                      ; ANDORRA
    "AO"                      ; ANGOLA
    "AI"                      ; ANGUILLA
    "AQ"                      ; ANTARCTICA
    "AG"                      ; ANTIGUA AND BARBUDA
    "AR"                      ; ARGENTINA
    "AM"                      ; ARMENIA
    "AW"                      ; ARUBA
    "AU"                      ; AUSTRALIA
    "AT"                      ; AUSTRIA
    "AZ"                      ; AZERBAIJAN
    "BS"                      ; BAHAMAS
    "BH"                      ; BAHRAIN
    "BD"                      ; BANGLADESH
    "BB"                      ; BARBADOS
    "BY"                      ; BELARUS
    "BE"                      ; BELGIUM
    "BZ"                      ; BELIZE
    "BJ"                      ; BENIN
    "BM"                      ; BERMUDA
    "BT"                      ; BHUTAN
    "BO"                      ; BOLIVIA
    "BA"                      ; BOSNIA AND HERZEGOVINA
    "BW"                      ; BOTSWANA
    "BV"                      ; BOUVET ISLAND
    "BR"                      ; BRAZIL
    "IO"                      ; BRITISH INDIAN OCEAN TERRITORY
    "BN"                      ; BRUNEI DARUSSALAM
    "BG"                      ; BULGARIA
    "BF"                      ; BURKINA FASO
    "BI"                      ; BURUNDI
    "KH"                      ; CAMBODIA
    "CM"                      ; CAMEROON
    "CA"                      ; CANADA
    "CV"                      ; CAPE VERDE
    "KY"                      ; CAYMAN ISLANDS
    "CF"                      ; CENTRAL AFRICAN REPUBLIC
    "TD"                      ; CHAD
    "CL"                      ; CHILE
    "CN"                      ; CHINA
    "CX"                      ; CHRISTMAS ISLAND
    "CC"                      ; COCOS (KEELING) ISLANDS
    "CO"                      ; COLOMBIA
    "KM"                      ; COMOROS
    "CG"                      ; CONGO
    "CD"                      ; CONGO, THE DEMOCRATIC REPUBLIC OF THE
    "CK"                      ; COOK ISLANDS
    "CR"                      ; COSTA RICA
    "CI"                      ; COTE D'IVOIRE
    "HR"                      ; CROATIA
    "CU"                      ; CUBA
    "CY"                      ; CYPRUS
    "CZ"                      ; CZECH REPUBLIC
    "DK"                      ; DENMARK
    "DJ"                      ; DJIBOUTI
    "DM"                      ; DOMINICA
    "DO"                      ; DOMINICAN REPUBLIC
    "EC"                      ; ECUADOR
    "EG"                      ; EGYPT
    "SV"                      ; EL SALVADOR
    "GQ"                      ; EQUATORIAL GUINEA
    "ER"                      ; ERITREA
    "EE"                      ; ESTONIA
    "ET"                      ; ETHIOPIA
    "FK"                      ; FALKLAND ISLANDS (MALVINAS)
    "FO"                      ; FAROE ISLANDS
    "FJ"                      ; FIJI
    "FI"                      ; FINLAND
    "FR"                      ; FRANCE
    "GF"                      ; FRENCH GUIANA
    "PF"                      ; FRENCH POLYNESIA
    "TF"                      ; FRENCH SOUTHERN TERRITORIES
    "GA"                      ; GABON
    "GM"                      ; GAMBIA
    "GE"                      ; GEORGIA
    "DE"                      ; GERMANY
    "GH"                      ; GHANA
    "GI"                      ; GIBRALTAR
    "GR"                      ; GREECE
    "GL"                      ; GREENLAND
    "GD"                      ; GRENADA
    "GP"                      ; GUADELOUPE
    "GU"                      ; GUAM
    "GT"                      ; GUATEMALA
    "GN"                      ; GUINEA
    "GW"                      ; GUINEA-BISSAU
    "GY"                      ; GUYANA
    "HT"                      ; HAITI
    "HM"                      ; HEARD ISLAND AND MCDONALD ISLANDS
    "VA"                      ; HOLY SEE (VATICAN CITY STATE)
    "HN"                      ; HONDURAS
    "HK"                      ; HONG KONG
    "HU"                      ; HUNGARY
    "IS"                      ; ICELAND
    "IN"                      ; INDIA
    "ID"                      ; INDONESIA
    "IR"                      ; IRAN, ISLAMIC REPUBLIC OF
    "IQ"                      ; IRAQ
    "IE"                      ; IRELAND
    "IL"                      ; ISRAEL
    "IT"                      ; ITALY
    "JM"                      ; JAMAICA
    "JP"                      ; JAPAN
    "JO"                      ; JORDAN
    "KZ"                      ; KAZAKHSTAN
    "KE"                      ; KENYA
    "KI"                      ; KIRIBATI
    "KP"                      ; KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF
    "KR"                      ; KOREA, REPUBLIC OF
    "KW"                      ; KUWAIT
    "KG"                      ; KYRGYZSTAN
    "LA"                      ; LAO PEOPLE'S DEMOCRATIC REPUBLIC
    "LV"                      ; LATVIA
    "LB"                      ; LEBANON
    "LS"                      ; LESOTHO
    "LR"                      ; LIBERIA
    "LY"                      ; LIBYAN ARAB JAMAHIRIYA
    "LI"                      ; LIECHTENSTEIN
    "LT"                      ; LITHUANIA
    "LU"                      ; LUXEMBOURG
    "MO"                      ; MACAO
    "MK"                      ; MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF
    "MG"                      ; MADAGASCAR
    "MW"                      ; MALAWI
    "MY"                      ; MALAYSIA
    "MV"                      ; MALDIVES
    "ML"                      ; MALI
    "MT"                      ; MALTA
    "MH"                      ; MARSHALL ISLANDS
    "MQ"                      ; MARTINIQUE
    "MR"                      ; MAURITANIA
    "MU"                      ; MAURITIUS
    "YT"                      ; MAYOTTE
    "MX"                      ; MEXICO
    "FM"                      ; MICRONESIA, FEDERATED STATES OF
    "MD"                      ; MOLDOVA, REPUBLIC OF
    "MC"                      ; MONACO
    "MN"                      ; MONGOLIA
    "MS"                      ; MONTSERRAT
    "MA"                      ; MOROCCO
    "MZ"                      ; MOZAMBIQUE
    "MM"                      ; MYANMAR
    "NA"                      ; NAMIBIA
    "NR"                      ; NAURU
    "NP"                      ; NEPAL
    "NL"                      ; NETHERLANDS
    "AN"                      ; NETHERLANDS ANTILLES
    "NC"                      ; NEW CALEDONIA
    "NZ"                      ; NEW ZEALAND
    "NI"                      ; NICARAGUA
    "NE"                      ; NIGER
    "NG"                      ; NIGERIA
    "NU"                      ; NIUE
    "NF"                      ; NORFOLK ISLAND
    "MP"                      ; NORTHERN MARIANA ISLANDS
    "NO"                      ; NORWAY
    "OM"                      ; OMAN
    "PK"                      ; PAKISTAN
    "PW"                      ; PALAU
    "PS"                      ; PALESTINIAN TERRITORY, OCCUPIED
    "PA"                      ; PANAMA
    "PG"                      ; PAPUA NEW GUINEA
    "PY"                      ; PARAGUAY
    "PE"                      ; PERU
    "PH"                      ; PHILIPPINES
    "PN"                      ; PITCAIRN
    "PL"                      ; POLAND
    "PT"                      ; PORTUGAL
    "PR"                      ; PUERTO RICO
    "QA"                      ; QATAR
    "RE"                      ; REUNION
    "RO"                      ; ROMANIA
    "RU"                      ; RUSSIAN FEDERATION
    "RW"                      ; RWANDA
    "SH"                      ; SAINT HELENA
    "KN"                      ; SAINT KITTS AND NEVIS
    "LC"                      ; SAINT LUCIA
    "PM"                      ; SAINT PIERRE AND MIQUELON
    "VC"                      ; SAINT VINCENT AND THE GRENADINES
    "WS"                      ; SAMOA
    "SM"                      ; SAN MARINO
    "ST"                      ; SAO TOME AND PRINCIPE
    "SA"                      ; SAUDI ARABIA
    "SN"                      ; SENEGAL
    "CS"                      ; SERBIA AND MONTENEGRO
    "SC"                      ; SEYCHELLES
    "SL"                      ; SIERRA LEONE
    "SG"                      ; SINGAPORE
    "SK"                      ; SLOVAKIA
    "SI"                      ; SLOVENIA
    "SB"                      ; SOLOMON ISLANDS
    "SO"                      ; SOMALIA
    "ZA"                      ; SOUTH AFRICA
    "GS"                      ; SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS
    "ES"                      ; SPAIN
    "LK"                      ; SRI LANKA
    "SD"                      ; SUDAN
    "SR"                      ; SURINAME
    "SJ"                      ; SVALBARD AND JAN MAYEN
    "SZ"                      ; SWAZILAND
    "SE"                      ; SWEDEN
    "CH"                      ; SWITZERLAND
    "SY"                      ; SYRIAN ARAB REPUBLIC
    "TW"                      ; TAIWAN, PROVINCE OF CHINA
    "TJ"                      ; TAJIKISTAN
    "TZ"                      ; TANZANIA, UNITED REPUBLIC OF
    "TH"                      ; THAILAND
    "TL"                      ; TIMOR-LESTE
    "TG"                      ; TOGO
    "TK"                      ; TOKELAU
    "TO"                      ; TONGA
    "TT"                      ; TRINIDAD AND TOBAGO
    "TN"                      ; TUNISIA
    "TR"                      ; TURKEY
    "TM"                      ; TURKMENISTAN
    "TC"                      ; TURKS AND CAICOS ISLANDS
    "TV"                      ; TUVALU
    "UG"                      ; UGANDA
    "UA"                      ; UKRAINE
    "AE"                      ; UNITED ARAB EMIRATES
    "GB"                      ; UNITED KINGDOM
    "US"                      ; UNITED STATES
    "UM"                      ; UNITED STATES MINOR OUTLYING ISLANDS
    "UY"                      ; URUGUAY
    "UZ"                      ; UZBEKISTAN
    "VU"                      ; VANUATU
    "VE"                      ; VENEZUELA
    "VN"                      ; VIET NAM
    "VG"                      ; VIRGIN ISLANDS, BRITISH
    "VI"                      ; VIRGIN ISLANDS, U.S.
    "WF"                      ; WALLIS AND FUTUNA
    "EH"                      ; WESTERN SAHARA
    "YE"                      ; YEMEN
    "ZM"                      ; ZAMBIA
    "ZW"                      ; ZIMBABWE
    )
  )


(defconst url-letters
  "-A-Za-z0-9_.!~*'()%;/?:@&=+$,#"
  )


(define url-prefixes-re
  (concat "("
          (mapconcat (lambda (x) (concat "(" x ")")) url-prefixes "|")
          ")")
  )


(define url-suffixes-re
  (concat "("
          (mapconcat (lambda (x) (concat "\\." (string-downcase x)))
                     url-suffixes "|")
          ")")
  )


(define url-letters-re
  (concat "[" url-letters "]")
  )

(define not-url-letters-re
  (concat "[^" url-letters "]")
  )


(define url-re-using-prefixes
  (concat "(" url-prefixes-re url-letters-re "+)")
  )

(define url-re-using-suffixes-in-middle
  (concat "(" url-letters-re "+" url-suffixes-re "/" url-letters-re "+)")
  )

(define url-re-using-suffixes-terminated
  (concat "(" url-letters-re "+" url-suffixes-re ")" not-url-letters-re)
  )

(define url-re-using-suffixes-eos
  (concat "(" url-letters-re "+" url-suffixes-re "$)")
  )

(define url-re-across-lines
  (concat "(^" url-prefixes-re "(" url-letters-re "|\n|\r)+$)")
  )


)
