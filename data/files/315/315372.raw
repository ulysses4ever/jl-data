import PyPlot
plt=PyPlot
plt.ion()
"""
    threshold(r[,nticks])

Plot the array `r` of experimental results returned by `repartition(n)`,
i.e. the array of lengths of n games played with the same settings.
When a game reaches, say, 8192, the number of moves is around
3720=8192/2.2 That's why powers of 2 are
displayed in green below the x-axis. Values on the y-axis are random, to
separate close results.

Adjust the number of ticks with the optional argument `nticks`, default 16.
"""
function threshold(r, nticks=16)
    rmax = maximum(r) * 1.1
    sup = 1 + exponent(rmax)
    rmax = 2^sup
    gap = div(rmax, nticks)
    rmax = (rmax + gap) / 1.1
    plt.clf()
    plt.subplots_adjust(left=0.02, right=0.98, bottom=0.02, top=0.98)
    plt.axis([0,rmax,0.7,1.7])
    plt.xticks([])
    plt.yticks([])
    plt.plot([0,rmax],[1,1])
    for k=1:2:nticks
        x = k*gap
        x = 10*div(x,11)
        plt.plot([x,x],[1,1.05],color="black")
        plt.text(x,0.95,ha="center","$x")
    end
    for k=2:2:nticks
        x = k*gap
        x = 10*div(x,11)
        plt.plot([x,x],[0.95,1],color="black")
        plt.text(x,0.9,ha="center","$x")
    end
    p = 32
    while true
        p = 2*p
        p < 2*gap && continue
        x = p / 2.2
        x < rmax || break
        gap â‰¤ p && plt.text(x,0.85,ha="center",color="green","$p")
    end
    n = length(r)
    y = 1 + 0.5*rand(n)
    plt.plot(r,y,"ro")
end

r100=[8389,6489,6578,3097,3872,3741,892,6734,6025,5580,11178,10992,4913,5582,6339,6972,7006,12598,12941,3704,7053,5169,6834,7356,6538,7333,3164,6551,5205,7390,5256,7196,7430,5596,7419,7477,7444,7162,3643,10710,5629,7286,6238,7486,8035,6768,11153,6544,7462,6313,9692,9289,7462,9169,12959,7237,11169,11169,3155,6306,3689,14014,10175,5574,7335,10152,7442,7382,5580,7424,11198,9314,11178,10752,12675,5295,7136,12100,4753,4551,9808,6990,7370,7425,4697,5007,11191,10231,7426,5622,3689,6746,11181,7464,6989,11107,6050,2929,7475,6571]
r100b=[7320,4573,5595,8466,7448,3802,1875,5500,5620,9837,6515,3614,11211,3709,2706,13070,6682,3412,6948,7436,6276,3255,9724,5645,5645,5626,7368,7361,7401,7493,2977,12561,5580,10680,5427,3706,7055,7491,10883,6861,5382,7385,7432,7457,9125,6964,7425,11148,6565,7007,751,7451,10695,7041,11142,6314,6611,10755,2864,9384,1367,7333,3721,7385,3624,7359,3759,5391,3471,7462,7477,4995,7392,9321,3634,11229,1843,5453,2865,4730,7384,8668,7481,7429,6114,5520,3264,5624,6516,11171,5255,7339,13032,5234,12859,975,10907,7416,3954,3485]
threshold(r100,8)
threshold(r100b)

r3x4=[931,680,925,913,1844,1401,3513,2808,1793,1546,1743,2537,1851,1871,1612,2799,1851,2792,1861,1758,1694,2780,2808,945,2799,1841,2779,1825,1391,916,1342,936,1881,1368,1849,1865,1513,935,1558,2771,1630,1861,1836,469,1863,1295,3486,2751,1419,1862,1857,1399,1367,1402,2783,2534,3495,2332,797,3224,2803,1633,1829,2697,1610,929,3220,798,912,2784,1617,1532,1853,1184,3267,1864,1755,2607,1892,1630,1736,1634,1732,1842,1401,1848,919,1163,474,2563,1853,3393,1562,800,1862,2020,1839,1842,357,1843]
threshold(r3x4)

r3x4b=[1858,1379,1850,1825,1607,2421,1858,1389,1859,
    1389,2796,2306,1379,2316,1844,3264,1622,1868,832,
    1867,1242,1566,3252,890,2798,909,1873,1850,1838,1788,
    910,3266,2918,1613,2213,937,830,2778,1839,
    707, 916, 3117,617, 1854,1858,1391,1595,2317,1671,1876,
    1825,1853,3149,866, 1832,2803,1961,730, 3130,
    1854,1276,3247,2777,1880,3134,1793,1633,1653,1846,909,
    1390,1870,3246,1843,1161,1864,1679,2726,2775,
    1597,1849,1800,1852,1719,1805,1842,1575,1398,1850,1389,
    1622,2748,1848,2756,2757,1836,586, 1610,2778,1835]
