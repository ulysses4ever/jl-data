module TestLinAlg
using CustomTest
using ControlSystems
a = [-3 2;1 1]
b = [0  1]'
c = [1 -1]
r = [3]'

@test_approx_eq care(a, b, c'*c, r) [0.5895174372762604 1.8215747248860816; 1.8215747248860823 8.818839806923107]
@test_approx_eq dare(a, b, c'*c, r) [240.73344504496302 -131.09928700089387; -131.0992870008943 75.93413176750603]

a_2 = [-5 -3; 2 -9]
C_212 = ss(a_2, [1; 2], eye(2), [0; 0])
C_222 = ss(a_2, [1 0; 0 2], eye(2), zeros(2,2))

a_3_1 = [-1.130606197261758  -0.602060660649177  -1.605277844950242   2.867993667040533  -0.295909551467764;
          0.271236473018479  -1.273121770639679   0.166618722882863  -1.321052574662322  -0.374779688283573;
          1.781058357891929  -0.047564442026271  -0.890151136371443   3.797229501668050   1.196661766736016;
         -2.754994782199486   1.567440441373688  -3.359940474948435  -1.073044926143758   2.826925466221316;
          0.998362432880367   0.205882551613298  -1.819258651188175  -2.474011922245475  -0.845679989724325;
          2.374403544453310  -2.122780658896752   4.235566265995088  -1.249034560373222  -0.698060211742270;
          2.480147012116793  -3.359563636800766   2.617169470401060   1.623703536052044   0.640947829287227;
          0.561981207596585  -1.164686143320768   0.322980078534710  -3.390239319879065  -1.642067631535002;
          1.239517381281697  -0.430931220044663  -1.554015300454954  -2.297940827876459  -0.103122764301422;
          1.683864474571792  -1.142644197939766   0.857823430541046   1.183691097524195   1.502379915707574]
a_3_2 =Â [-2.134982973485731  -2.444087158445798  -0.740318107779619  -1.693295155237266  -1.763414647878359;
          2.501668479069561   2.953711056759897   1.575454097565871   0.427468057470919   1.367546687475020;
         -4.081360831350944  -2.336020252248669  -0.066025419064907   1.592770396322493  -1.251863761911797;
          1.257633923702391  -1.892786083069136   3.113272986864844   2.469311615067179  -1.612547709205220;
          1.291210870981541  -0.829161910404911   1.192351558796819   0.030318284832738  -1.125561471110495;
         -0.756724417533127   3.380647934741264  -1.343792991154783  -1.473720464310752   1.553360571022710;
         -3.088979951108041  -1.264275584513712  -0.021705627033917  -0.722854422090273  -0.266324128538823;
          0.950132522101141  -0.108801302114743  -0.825529563097496  -2.417908133850779  -0.936511496786316;
          1.294508676365018   1.173367420114903   2.587416944904923  -1.085653081021432  -1.237800136446267;
         -2.259989837020965   0.477279909805501   0.977256695699121   0.694038995315595  -0.668315509597907]
a_3 = [a_3_1 a_3_2]
b_3 =  [ 0.071429809887408                   0  -0.327344521688306                   0  -0.344627168171879 0;
        -0.773686902272389                   0   0.475517983984108  -0.301654545754811  -1.323915905729960 0;
         0.774161843596113  -0.603518030988294  -0.130004891142355  -1.200440503800440                   0 0; 
         0.265654717978835  -0.797023927995844                   0  -0.019362266242742  -0.740706727609253 -0.918769644159625;
        -0.235105530923257   0.360648897493697  -0.443766910105021   0.340370564189367  -1.185001874488586 -1.919466529823244;
                         0   1.885091677341496  -1.322529647742821  -0.963230982199040  -2.064860036480697 -0.036443143010309;
                         0  -0.306821830652800                   0   1.113922585980571   0.565059812252813 -1.225125717435437;
        -0.110273879003159  -1.012723960936387  -1.413001172476067  -1.586105426024103   2.000142366593010 0;
         0.277457471578041  -0.238545507981061  -0.515985900361916  -0.391794659025427   2.223327720233872 2.374248550835008;
         0.087045914472355  -0.484014811281357  -1.085098096721719  -1.484686222980091  -0.492177585883521 -0.233345713757840]
c_3_1 = [ 0.403880739292361                   0   0.723060699828803   1.686544476981596   1.072356141861394;
          1.192468599338149   0.083064345164233                   0  -0.386394169497248   0.967982891147789;
         -1.684758848541009   0.157798051973368  -0.796384050833210  -0.505078413652473   0.270145532752676;
                          0  -0.527942514299507                   0   0.408073894625228                   0]
c_3_2 = [                 0                   0  -0.933634294030098  -0.883348858615109  -0.838170422573186;
                          0   1.289719394940369                   0                   0  -0.282475041408237;
          1.376949165612293  -0.494936298659302  -0.200524959392692                   0                   0;
         -1.408212489933244  -0.624824952346629   0.136741163276281  -0.368728264159064   3.407532366386441]
c_3 = [c_3_1 c_3_2]
d_3 = [                 0                   0                   0   0.427361247541929  -1.616451295479652 -1.328552551836389;
        0.787257533014092   0.535301045844483                   0                   0   0.018774352060980 -0.319885618861164;
                        0   0.482987052893212   0.005321689794854                   0                   0 0;
       -0.584593101281239   0.108475083480383   1.139149490950780   0.584245605925614                   0 -0.229292809268995]
C_1064 = ss(a_3,b_3,c_3,d_3);

s = tf("s")
f_C_211 = (s+2)*(s+3)/((s+4)*(s+5))
# biquad passband
omega0 = 52.0; Q = 10
f_C_211_bis = (s/(Q*omega0)) / ((s/omega0)^2 + s/(Q*omega0) + 1 );


da_2 = [0.2 -0.8; -0.8 0.07]
D_221 = ss(da_2, [1 0; 0 2], [1 0], [0 0], 0.005)
D_222 = ss(da_2, [1 0; 0 2], eye(2), zeros(2,2), 0.005)

@test_approx_eq gram(C_212,:c) [0.042016806722689065 0.09663865546218485
    0.09663865546218488 0.24369747899159663]
@test_approx_eq gram(C_212,:o) [0.09523809523809523 -0.0119047619047619
    -0.011904761904761911 0.059523809523809534]
@test_approx_eq gram(C_222,:c) [0.11764705882352941 -0.029411764705882346
    -0.02941176470588234 0.21568627450980393]
@test_approx_eq gram(C_222,:o) [0.09523809523809523 -0.0119047619047619
    -0.011904761904761911 0.059523809523809534]
@test_approx_eq gram(D_221,:c) [11.895658388619264 -7.526846649259635
    -7.526846649259634 12.517564258299078]
@test_approx_eq gram(D_221,:o) [3.1039794541519283 -1.7910988952221152
    -1.7910988952221152 2.197919733616834]
@test_approx_eq gram(D_222,:c) [11.895658388619264 -7.526846649259635
    -7.526846649259634 12.517564258299078]
@test_approx_eq gram(D_222,:o) [5.301899187768763 -3.2250358337314955
    -3.2250358337314955 4.777830864787395]

@test obsv(C_222) == [1 0; 0 1; -5 -3; 2 -9]
@test ctrb(C_222) == [1 0 -5 -6; 0 2 2 -18]
@test obsv(C_212) == [1 0; 0 1; -5 -3; 2 -9]
@test ctrb(C_212) == [1 -11; 2 -16]
@test_approx_eq norm(C_222) 0.5773502691896258
@test_approx_eq norm(C_212) 0.5345224838248488
@test_approx_eq norm(D_222) 4.940973856125768
@test_approx_eq norm(D_221) 3.4490083195926426
@test norm(ss([1],[2],[3],[4])) == Inf

# Test Hinfinity norm computations
tolHinf = 1e-12
@test_approx_eq_eps norm(C_212,Inf,tol=tolHinf)[1] 0.242535625036333 tolHinf
@test_approx_eq_eps norm(C_222,Inf,tol=tolHinf)[1] 0.242535625036333 tolHinf
@test_approx_eq_eps norm(C_1064,Inf,tol=tolHinf)[1] 81.945316593191322 (100*tolHinf)  # apparent loss in precision for this example
@test_approx_eq_eps norm(f_C_211,Inf,tol=tolHinf)[1] 1.0 (2*tolHinf)
@test_approx_eq norm(f_C_211_bis,Inf,tol=tolHinf)[2] 52.0

A = [1  100  10000; .01  1  100; .0001  .01  1]
T, P, B = ControlSystems.balance(A)
# The scaling is BLAS dependent. However, the ratio should be the same on all
# machines. We just need to check that T == res * constant
res_diag = [512, 8, 0.0625]
constant = T[1]/res_diag[1]
@test all(diag(T) == res_diag * constant)
@test P == eye(3)
@test_approx_eq B [1.0 1.5625 1.220703125; 0.64 1.0 0.78125; 0.8192 1.28 1.0]

end
