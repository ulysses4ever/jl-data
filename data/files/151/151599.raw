module TestLinAlg
using CustomTest
using ControlSystems
a = [-3 2;1 1]
b = [0  1]'
c = [1 -1]
r = [3]'

@test_approx_eq care(a, b, c'*c, r) [0.5895174372762604 1.8215747248860816; 1.8215747248860823 8.818839806923107]
@test_approx_eq dare(a, b, c'*c, r) [240.73344504496302 -131.09928700089387; -131.0992870008943 75.93413176750603]

a_2 = [-5 -3; 2 -9]
C_212 = ss(a_2, [1; 2], eye(2), [0; 0])
C_222 = ss(a_2, [1 0; 0 2], eye(2), zeros(2,2))

da_2 = [0.2 -0.8; -0.8 0.07]
D_221 = ss(da_2, [1 0; 0 2], [1 0], [0 0], 0.005)
D_222 = ss(da_2, [1 0; 0 2], eye(2), zeros(2,2), 0.005)

@test_approx_eq gram(C_212,:c) [0.042016806722689065 0.09663865546218485
    0.09663865546218488 0.24369747899159663]
@test_approx_eq gram(C_212,:o) [0.09523809523809523 -0.0119047619047619
    -0.011904761904761911 0.059523809523809534]
@test_approx_eq gram(C_222,:c) [0.11764705882352941 -0.029411764705882346
    -0.02941176470588234 0.21568627450980393]
@test_approx_eq gram(C_222,:o) [0.09523809523809523 -0.0119047619047619
    -0.011904761904761911 0.059523809523809534]
@test_approx_eq gram(D_221,:c) [11.895658388619264 -7.526846649259635
    -7.526846649259634 12.517564258299078]
@test_approx_eq gram(D_221,:o) [3.1039794541519283 -1.7910988952221152
    -1.7910988952221152 2.197919733616834]
@test_approx_eq gram(D_222,:c) [11.895658388619264 -7.526846649259635
    -7.526846649259634 12.517564258299078]
@test_approx_eq gram(D_222,:o) [5.301899187768763 -3.2250358337314955
    -3.2250358337314955 4.777830864787395]

@test obsv(C_222) == [1 0; 0 1; -5 -3; 2 -9]
@test ctrb(C_222) == [1 0 -5 -6; 0 2 2 -18]
@test obsv(C_212) == [1 0; 0 1; -5 -3; 2 -9]
@test ctrb(C_212) == [1 -11; 2 -16]
@test_approx_eq norm(C_222) 0.5773502691896258
@test_approx_eq norm(C_212) 0.5345224838248488
@test_approx_eq norm(D_222) 4.940973856125768
@test_approx_eq norm(D_221) 3.4490083195926426
@test norm(ss([1],[2],[3],[4])) == Inf

A = [1  100  10000; .01  1  100; .0001  .01  1]
T, P, B = Control.balance(A)
# The scaling is BLAS dependent. However, the ratio should be the same on all
# machines. We just need to check that T == res * constant
res_diag = [512, 8, 0.0625]
constant = T[1]/res_diag[1]
@test all(diag(T) == res_diag * constant)
@test P == eye(3)
@test_approx_eq B [1.0 1.5625 1.220703125; 0.64 1.0 0.78125; 0.8192 1.28 1.0]

end
