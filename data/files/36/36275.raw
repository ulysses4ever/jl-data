using FESetModule
using FENodeSetModule
using MeshTriangleModule

#other_dimension= 2.0
#a=FESetModule.FESetT3(conn=[2 1 5;1 2 3;4 2 5], other_dimension = other_dimension)

fens,fes =MeshTriangleModule.T3_block(10.0, 20.0, 2,3)

using MeshExportModule

File =  "a.vtk"
X=zeros(size(fens.xyz,1),3)
X[:,1:2]=fens.xyz
S=cos(X[:,1].^2)+sin(X[:,2])+X[:,2]
MeshExportModule.vtkexportmesh (File, fes.conn, X, MeshExportModule.T3; scalars=S, scalars_name ="scalars_name")

using FEMMBaseModule
using IntegRuleModule

material = nothing
integration_rule = IntegRuleModule.TriRule(npts=1)
Rm = nothing
b=FEMMBaseModule.FEMMBase(fes=fes, material=material, integration_rule=integration_rule, Rm=Rm)

using FEMMHeatDiffusionModule
f = FEMMHeatDiffusionModule.FEMMHeatDiffusion(fes=fes, material=material, integration_rule=integration_rule, Rm=Rm)



using MeshModificationModule
bfes  =MeshModificationModule.mesh_boundary(fes)
FESetModule.count (bfes)
MeshExportModule.vtkexportmesh ("b.vtk", bfes.conn, fens.xyz, MeshExportModule.L2)


